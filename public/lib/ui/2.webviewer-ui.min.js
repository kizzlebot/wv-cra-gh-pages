(window.webpackJsonp=window.webpackJsonp||[]).push([[2],{590:function(module,exports,__webpack_require__){"use strict";eval('\n\nObject.defineProperty(exports, "__esModule", {\n  value: true\n});\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nfunction _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nvar keys = exports.keys = function keys(obj) {\n  return obj === Object(obj) ? Object.keys(obj) : [];\n};\n\nvar values = exports.values = function values(obj) {\n  return obj === Object(obj) ? Object.values(obj) : [];\n};\n\nfunction mergeDeep(target, source) {\n  var output = assign({}, target);\n  if (isPlainObject(target) && isPlainObject(source)) {\n    keys(source).forEach(function (key) {\n      if (isPlainObject(source[key])) {\n        if (!(key in target)) assign(output, _defineProperty({}, key, source[key]));else output[key] = mergeDeep(target[key], source[key]);\n      } else {\n        assign(output, _defineProperty({}, key, source[key]));\n      }\n    });\n  }\n  return output;\n}\n\nvar merge = exports.merge = function merge(target) {\n  for (var _len = arguments.length, sources = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n    sources[_key - 1] = arguments[_key];\n  }\n\n  return sources.reduce(function (t, s) {\n    return mergeDeep(t, s);\n  }, target);\n};\n\nvar assign = exports.assign = function assign(target) {\n  for (var _len2 = arguments.length, sources = Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {\n    sources[_key2 - 1] = arguments[_key2];\n  }\n\n  return Object.assign.apply(Object, [target].concat(sources));\n};\n\nvar identity = exports.identity = function identity(value) {\n  return value;\n};\n\nvar omit = function omit(obj, keys) {\n  var _obj = _extends({}, obj),\n      other = _objectWithoutProperties(_obj, []);\n\n  if (keys) {\n    var _iteratorNormalCompletion = true;\n    var _didIteratorError = false;\n    var _iteratorError = undefined;\n\n    try {\n      for (var _iterator = keys[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n        var key = _step.value;\n\n        delete other[key];\n      }\n    } catch (err) {\n      _didIteratorError = true;\n      _iteratorError = err;\n    } finally {\n      try {\n        if (!_iteratorNormalCompletion && _iterator.return) {\n          _iterator.return();\n        }\n      } finally {\n        if (_didIteratorError) {\n          throw _iteratorError;\n        }\n      }\n    }\n  }\n  return other;\n};\n\nexports.omit = omit;\nvar isPlainObject = exports.isPlainObject = function isPlainObject(obj) {\n  return obj === Object(obj) && !(obj instanceof Date) && !Array.isArray(obj);\n};\n\nvar compact = exports.compact = function compact(arr) {\n  return (arr || []).filter(Boolean);\n};//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNTkwLmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL3N1YnN0eWxlL2xpYi91dGlscy5qcz9lN2U1Il0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuXG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHtcbiAgdmFsdWU6IHRydWVcbn0pO1xuXG52YXIgX2V4dGVuZHMgPSBPYmplY3QuYXNzaWduIHx8IGZ1bmN0aW9uICh0YXJnZXQpIHsgZm9yICh2YXIgaSA9IDE7IGkgPCBhcmd1bWVudHMubGVuZ3RoOyBpKyspIHsgdmFyIHNvdXJjZSA9IGFyZ3VtZW50c1tpXTsgZm9yICh2YXIga2V5IGluIHNvdXJjZSkgeyBpZiAoT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKHNvdXJjZSwga2V5KSkgeyB0YXJnZXRba2V5XSA9IHNvdXJjZVtrZXldOyB9IH0gfSByZXR1cm4gdGFyZ2V0OyB9O1xuXG5mdW5jdGlvbiBfb2JqZWN0V2l0aG91dFByb3BlcnRpZXMob2JqLCBrZXlzKSB7IHZhciB0YXJnZXQgPSB7fTsgZm9yICh2YXIgaSBpbiBvYmopIHsgaWYgKGtleXMuaW5kZXhPZihpKSA+PSAwKSBjb250aW51ZTsgaWYgKCFPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwob2JqLCBpKSkgY29udGludWU7IHRhcmdldFtpXSA9IG9ialtpXTsgfSByZXR1cm4gdGFyZ2V0OyB9XG5cbmZ1bmN0aW9uIF9kZWZpbmVQcm9wZXJ0eShvYmosIGtleSwgdmFsdWUpIHsgaWYgKGtleSBpbiBvYmopIHsgT2JqZWN0LmRlZmluZVByb3BlcnR5KG9iaiwga2V5LCB7IHZhbHVlOiB2YWx1ZSwgZW51bWVyYWJsZTogdHJ1ZSwgY29uZmlndXJhYmxlOiB0cnVlLCB3cml0YWJsZTogdHJ1ZSB9KTsgfSBlbHNlIHsgb2JqW2tleV0gPSB2YWx1ZTsgfSByZXR1cm4gb2JqOyB9XG5cbnZhciBrZXlzID0gZXhwb3J0cy5rZXlzID0gZnVuY3Rpb24ga2V5cyhvYmopIHtcbiAgcmV0dXJuIG9iaiA9PT0gT2JqZWN0KG9iaikgPyBPYmplY3Qua2V5cyhvYmopIDogW107XG59O1xuXG52YXIgdmFsdWVzID0gZXhwb3J0cy52YWx1ZXMgPSBmdW5jdGlvbiB2YWx1ZXMob2JqKSB7XG4gIHJldHVybiBvYmogPT09IE9iamVjdChvYmopID8gT2JqZWN0LnZhbHVlcyhvYmopIDogW107XG59O1xuXG5mdW5jdGlvbiBtZXJnZURlZXAodGFyZ2V0LCBzb3VyY2UpIHtcbiAgdmFyIG91dHB1dCA9IGFzc2lnbih7fSwgdGFyZ2V0KTtcbiAgaWYgKGlzUGxhaW5PYmplY3QodGFyZ2V0KSAmJiBpc1BsYWluT2JqZWN0KHNvdXJjZSkpIHtcbiAgICBrZXlzKHNvdXJjZSkuZm9yRWFjaChmdW5jdGlvbiAoa2V5KSB7XG4gICAgICBpZiAoaXNQbGFpbk9iamVjdChzb3VyY2Vba2V5XSkpIHtcbiAgICAgICAgaWYgKCEoa2V5IGluIHRhcmdldCkpIGFzc2lnbihvdXRwdXQsIF9kZWZpbmVQcm9wZXJ0eSh7fSwga2V5LCBzb3VyY2Vba2V5XSkpO2Vsc2Ugb3V0cHV0W2tleV0gPSBtZXJnZURlZXAodGFyZ2V0W2tleV0sIHNvdXJjZVtrZXldKTtcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIGFzc2lnbihvdXRwdXQsIF9kZWZpbmVQcm9wZXJ0eSh7fSwga2V5LCBzb3VyY2Vba2V5XSkpO1xuICAgICAgfVxuICAgIH0pO1xuICB9XG4gIHJldHVybiBvdXRwdXQ7XG59XG5cbnZhciBtZXJnZSA9IGV4cG9ydHMubWVyZ2UgPSBmdW5jdGlvbiBtZXJnZSh0YXJnZXQpIHtcbiAgZm9yICh2YXIgX2xlbiA9IGFyZ3VtZW50cy5sZW5ndGgsIHNvdXJjZXMgPSBBcnJheShfbGVuID4gMSA/IF9sZW4gLSAxIDogMCksIF9rZXkgPSAxOyBfa2V5IDwgX2xlbjsgX2tleSsrKSB7XG4gICAgc291cmNlc1tfa2V5IC0gMV0gPSBhcmd1bWVudHNbX2tleV07XG4gIH1cblxuICByZXR1cm4gc291cmNlcy5yZWR1Y2UoZnVuY3Rpb24gKHQsIHMpIHtcbiAgICByZXR1cm4gbWVyZ2VEZWVwKHQsIHMpO1xuICB9LCB0YXJnZXQpO1xufTtcblxudmFyIGFzc2lnbiA9IGV4cG9ydHMuYXNzaWduID0gZnVuY3Rpb24gYXNzaWduKHRhcmdldCkge1xuICBmb3IgKHZhciBfbGVuMiA9IGFyZ3VtZW50cy5sZW5ndGgsIHNvdXJjZXMgPSBBcnJheShfbGVuMiA+IDEgPyBfbGVuMiAtIDEgOiAwKSwgX2tleTIgPSAxOyBfa2V5MiA8IF9sZW4yOyBfa2V5MisrKSB7XG4gICAgc291cmNlc1tfa2V5MiAtIDFdID0gYXJndW1lbnRzW19rZXkyXTtcbiAgfVxuXG4gIHJldHVybiBPYmplY3QuYXNzaWduLmFwcGx5KE9iamVjdCwgW3RhcmdldF0uY29uY2F0KHNvdXJjZXMpKTtcbn07XG5cbnZhciBpZGVudGl0eSA9IGV4cG9ydHMuaWRlbnRpdHkgPSBmdW5jdGlvbiBpZGVudGl0eSh2YWx1ZSkge1xuICByZXR1cm4gdmFsdWU7XG59O1xuXG52YXIgb21pdCA9IGZ1bmN0aW9uIG9taXQob2JqLCBrZXlzKSB7XG4gIHZhciBfb2JqID0gX2V4dGVuZHMoe30sIG9iaiksXG4gICAgICBvdGhlciA9IF9vYmplY3RXaXRob3V0UHJvcGVydGllcyhfb2JqLCBbXSk7XG5cbiAgaWYgKGtleXMpIHtcbiAgICB2YXIgX2l0ZXJhdG9yTm9ybWFsQ29tcGxldGlvbiA9IHRydWU7XG4gICAgdmFyIF9kaWRJdGVyYXRvckVycm9yID0gZmFsc2U7XG4gICAgdmFyIF9pdGVyYXRvckVycm9yID0gdW5kZWZpbmVkO1xuXG4gICAgdHJ5IHtcbiAgICAgIGZvciAodmFyIF9pdGVyYXRvciA9IGtleXNbU3ltYm9sLml0ZXJhdG9yXSgpLCBfc3RlcDsgIShfaXRlcmF0b3JOb3JtYWxDb21wbGV0aW9uID0gKF9zdGVwID0gX2l0ZXJhdG9yLm5leHQoKSkuZG9uZSk7IF9pdGVyYXRvck5vcm1hbENvbXBsZXRpb24gPSB0cnVlKSB7XG4gICAgICAgIHZhciBrZXkgPSBfc3RlcC52YWx1ZTtcblxuICAgICAgICBkZWxldGUgb3RoZXJba2V5XTtcbiAgICAgIH1cbiAgICB9IGNhdGNoIChlcnIpIHtcbiAgICAgIF9kaWRJdGVyYXRvckVycm9yID0gdHJ1ZTtcbiAgICAgIF9pdGVyYXRvckVycm9yID0gZXJyO1xuICAgIH0gZmluYWxseSB7XG4gICAgICB0cnkge1xuICAgICAgICBpZiAoIV9pdGVyYXRvck5vcm1hbENvbXBsZXRpb24gJiYgX2l0ZXJhdG9yLnJldHVybikge1xuICAgICAgICAgIF9pdGVyYXRvci5yZXR1cm4oKTtcbiAgICAgICAgfVxuICAgICAgfSBmaW5hbGx5IHtcbiAgICAgICAgaWYgKF9kaWRJdGVyYXRvckVycm9yKSB7XG4gICAgICAgICAgdGhyb3cgX2l0ZXJhdG9yRXJyb3I7XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICB9XG4gIH1cbiAgcmV0dXJuIG90aGVyO1xufTtcblxuZXhwb3J0cy5vbWl0ID0gb21pdDtcbnZhciBpc1BsYWluT2JqZWN0ID0gZXhwb3J0cy5pc1BsYWluT2JqZWN0ID0gZnVuY3Rpb24gaXNQbGFpbk9iamVjdChvYmopIHtcbiAgcmV0dXJuIG9iaiA9PT0gT2JqZWN0KG9iaikgJiYgIShvYmogaW5zdGFuY2VvZiBEYXRlKSAmJiAhQXJyYXkuaXNBcnJheShvYmopO1xufTtcblxudmFyIGNvbXBhY3QgPSBleHBvcnRzLmNvbXBhY3QgPSBmdW5jdGlvbiBjb21wYWN0KGFycikge1xuICByZXR1cm4gKGFyciB8fCBbXSkuZmlsdGVyKEJvb2xlYW4pO1xufTsiXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///590\n')},591:function(module,exports,__webpack_require__){"use strict";eval("/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n\n\n/**\n * Use invariant() to assert state which your program assumes to be true.\n *\n * Provide sprintf-style format (only %s is supported) and arguments\n * to provide information about what broke and what you were\n * expecting.\n *\n * The invariant message will be stripped in production, but the invariant\n * will remain to ensure logic does not differ in production.\n */\n\nvar invariant = function(condition, format, a, b, c, d, e, f) {\n  if (false) {}\n\n  if (!condition) {\n    var error;\n    if (format === undefined) {\n      error = new Error(\n        'Minified exception occurred; use the non-minified dev environment ' +\n        'for the full error message and additional helpful warnings.'\n      );\n    } else {\n      var args = [a, b, c, d, e, f];\n      var argIndex = 0;\n      error = new Error(\n        format.replace(/%s/g, function() { return args[argIndex++]; })\n      );\n      error.name = 'Invariant Violation';\n    }\n\n    error.framesToPop = 1; // we don't care about invariant's own frame\n    throw error;\n  }\n};\n\nmodule.exports = invariant;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNTkxLmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2ludmFyaWFudC9icm93c2VyLmpzPzQwYjYiXSwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBDb3B5cmlnaHQgKGMpIDIwMTMtcHJlc2VudCwgRmFjZWJvb2ssIEluYy5cbiAqXG4gKiBUaGlzIHNvdXJjZSBjb2RlIGlzIGxpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgbGljZW5zZSBmb3VuZCBpbiB0aGVcbiAqIExJQ0VOU0UgZmlsZSBpbiB0aGUgcm9vdCBkaXJlY3Rvcnkgb2YgdGhpcyBzb3VyY2UgdHJlZS5cbiAqL1xuXG4ndXNlIHN0cmljdCc7XG5cbi8qKlxuICogVXNlIGludmFyaWFudCgpIHRvIGFzc2VydCBzdGF0ZSB3aGljaCB5b3VyIHByb2dyYW0gYXNzdW1lcyB0byBiZSB0cnVlLlxuICpcbiAqIFByb3ZpZGUgc3ByaW50Zi1zdHlsZSBmb3JtYXQgKG9ubHkgJXMgaXMgc3VwcG9ydGVkKSBhbmQgYXJndW1lbnRzXG4gKiB0byBwcm92aWRlIGluZm9ybWF0aW9uIGFib3V0IHdoYXQgYnJva2UgYW5kIHdoYXQgeW91IHdlcmVcbiAqIGV4cGVjdGluZy5cbiAqXG4gKiBUaGUgaW52YXJpYW50IG1lc3NhZ2Ugd2lsbCBiZSBzdHJpcHBlZCBpbiBwcm9kdWN0aW9uLCBidXQgdGhlIGludmFyaWFudFxuICogd2lsbCByZW1haW4gdG8gZW5zdXJlIGxvZ2ljIGRvZXMgbm90IGRpZmZlciBpbiBwcm9kdWN0aW9uLlxuICovXG5cbnZhciBpbnZhcmlhbnQgPSBmdW5jdGlvbihjb25kaXRpb24sIGZvcm1hdCwgYSwgYiwgYywgZCwgZSwgZikge1xuICBpZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09ICdwcm9kdWN0aW9uJykge1xuICAgIGlmIChmb3JtYXQgPT09IHVuZGVmaW5lZCkge1xuICAgICAgdGhyb3cgbmV3IEVycm9yKCdpbnZhcmlhbnQgcmVxdWlyZXMgYW4gZXJyb3IgbWVzc2FnZSBhcmd1bWVudCcpO1xuICAgIH1cbiAgfVxuXG4gIGlmICghY29uZGl0aW9uKSB7XG4gICAgdmFyIGVycm9yO1xuICAgIGlmIChmb3JtYXQgPT09IHVuZGVmaW5lZCkge1xuICAgICAgZXJyb3IgPSBuZXcgRXJyb3IoXG4gICAgICAgICdNaW5pZmllZCBleGNlcHRpb24gb2NjdXJyZWQ7IHVzZSB0aGUgbm9uLW1pbmlmaWVkIGRldiBlbnZpcm9ubWVudCAnICtcbiAgICAgICAgJ2ZvciB0aGUgZnVsbCBlcnJvciBtZXNzYWdlIGFuZCBhZGRpdGlvbmFsIGhlbHBmdWwgd2FybmluZ3MuJ1xuICAgICAgKTtcbiAgICB9IGVsc2Uge1xuICAgICAgdmFyIGFyZ3MgPSBbYSwgYiwgYywgZCwgZSwgZl07XG4gICAgICB2YXIgYXJnSW5kZXggPSAwO1xuICAgICAgZXJyb3IgPSBuZXcgRXJyb3IoXG4gICAgICAgIGZvcm1hdC5yZXBsYWNlKC8lcy9nLCBmdW5jdGlvbigpIHsgcmV0dXJuIGFyZ3NbYXJnSW5kZXgrK107IH0pXG4gICAgICApO1xuICAgICAgZXJyb3IubmFtZSA9ICdJbnZhcmlhbnQgVmlvbGF0aW9uJztcbiAgICB9XG5cbiAgICBlcnJvci5mcmFtZXNUb1BvcCA9IDE7IC8vIHdlIGRvbid0IGNhcmUgYWJvdXQgaW52YXJpYW50J3Mgb3duIGZyYW1lXG4gICAgdGhyb3cgZXJyb3I7XG4gIH1cbn07XG5cbm1vZHVsZS5leHBvcnRzID0gaW52YXJpYW50O1xuIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxlQUlBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTsiLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///591\n")},592:function(module,exports,__webpack_require__){"use strict";eval("\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nvar _invariant = __webpack_require__(591);\n\nvar _invariant2 = _interopRequireDefault(_invariant);\n\nvar _utils = __webpack_require__(590);\n\nvar _defaultPropsDecorator = __webpack_require__(593);\n\nvar _defaultPropsDecorator2 = _interopRequireDefault(_defaultPropsDecorator);\n\nvar _pickStyles = __webpack_require__(594);\n\nvar _filterKeys = __webpack_require__(595);\n\nvar _coerceSelection = __webpack_require__(596);\n\nvar _coerceSelection2 = _interopRequireDefault(_coerceSelection);\n\nvar _memoize = __webpack_require__(599);\n\nvar _memoize2 = _interopRequireDefault(_memoize);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }\n\nvar guessBaseClassName = function guessBaseClassName(classNames) {\n  // all class names must start with the same prefix: the component's base class name\n  // which will finally go to the container element\n  var firstKey = classNames && (0, _utils.keys)(classNames)[0];\n  return firstKey && firstKey.split('__')[0].split('--')[0];\n};\n\nvar deriveClassNames = function deriveClassNames(className, elementKeys, modifierKeys) {\n  // do not derive class names, if the user did not specify any class name\n  if (!className) {\n    return undefined;\n  }\n\n  // derive class names based using the passed modifier/element keys\n  var firstClassName = className.split(' ')[0];\n  var derivedClassNames = [].concat(_toConsumableArray(elementKeys.length === 0 ? modifierKeys.map(function (key) {\n    return firstClassName + '--' + key.substring(1);\n  }) : []), _toConsumableArray(elementKeys.map(function (key) {\n    return firstClassName + '__' + key;\n  })));\n\n  // also use the provided `className` if there is no sub-element selection\n  return elementKeys.length === 0 ? [className].concat(_toConsumableArray(derivedClassNames)) : derivedClassNames;\n};\n\nfunction createSubstyle(_ref) {\n  var style = _ref.style,\n      className = _ref.className,\n      classNames = _ref.classNames;\n  var propsDecorator = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : _defaultPropsDecorator2.default;\n\n  var baseClassName = className || guessBaseClassName(classNames);\n\n  var substyle = typeof style === 'function' ? style : (0, _memoize2.default)(function (select, defaultStyle) {\n    var selectedKeys = (0, _coerceSelection2.default)(select);\n\n    (0, _invariant2.default)(Array.isArray(selectedKeys), 'First parameter must be a string, an array of strings, ' + 'a plain object with boolean values, or a falsy value.');\n\n    (0, _invariant2.default)(!defaultStyle || (0, _utils.isPlainObject)(defaultStyle), 'Optional second parameter must be a plain object.');\n\n    var modifierKeys = selectedKeys.filter(_filterKeys.isModifier);\n    var elementKeys = selectedKeys.filter(_filterKeys.isElement);\n\n    var collectElementStyles = elementKeys.length > 0 ? function (fromStyle) {\n      return (0, _utils.values)((0, _pickStyles.pickNestedStyles)(fromStyle, elementKeys));\n    } : function (fromStyle) {\n      return [fromStyle];\n    };\n\n    var collectSelectedStyles = function collectSelectedStyles() {\n      var fromStyle = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n      return collectElementStyles((0, _pickStyles.hoistModifierStylesRecursive)(fromStyle, modifierKeys));\n    };\n\n    var derivedClassNames = deriveClassNames(baseClassName, elementKeys, modifierKeys);\n\n    return createSubstyle(_extends({}, (style || defaultStyle) && {\n      style: _utils.merge.apply(undefined, [{}].concat(_toConsumableArray(collectSelectedStyles(defaultStyle)), _toConsumableArray(collectSelectedStyles(style))))\n    }, derivedClassNames && {\n      className: derivedClassNames.join(' ')\n    }, classNames && { classNames: classNames }), propsDecorator);\n  });\n\n  // $FlowFixMe Flow does not believe that also a function can be spread\n  var styleProps = _extends({}, typeof style === 'function' ? style : { style: style });\n\n  var classNameSplit = [].concat(_toConsumableArray(styleProps.className ? styleProps.className.split(' ') : []), _toConsumableArray(baseClassName ? baseClassName.split(' ') : []));\n  var mappedClassNames = classNames ? (0, _utils.compact)(classNameSplit.map(function (singleClassName) {\n    return classNames[singleClassName];\n  })) : classNameSplit;\n\n  var propsForSpread = propsDecorator(_extends({}, styleProps, mappedClassNames.length > 0 ? {\n    className: mappedClassNames.join(' ')\n  } : {}));\n\n  // assign `style` and/or `className` props to the return function object\n  (0, _utils.assign)(substyle, propsForSpread);\n  return substyle;\n}\n\nexports.default = createSubstyle;\nmodule.exports = exports['default'];//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///592\n")},593:function(module,exports,__webpack_require__){"use strict";eval("\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nvar _pickStyles = __webpack_require__(594);\n\n// many css-in-js libs process keyframes objects as the value for `animationName`\nvar defaultObjectPropsWhitelist = ['animationName'];\n\nvar defaultPropsDecorator = function defaultPropsDecorator(_ref) {\n  var style = _ref.style,\n      className = _ref.className;\n  return _extends({}, style ? { style: (0, _pickStyles.pickDirectStyles)(style, defaultObjectPropsWhitelist) } : {}, className ? { className: className } : {});\n};\n\nexports.default = defaultPropsDecorator;\nmodule.exports = exports['default'];//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNTkzLmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL3N1YnN0eWxlL2xpYi9kZWZhdWx0UHJvcHNEZWNvcmF0b3IuanM/ZDk1YyJdLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCc7XG5cbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwge1xuICB2YWx1ZTogdHJ1ZVxufSk7XG5cbnZhciBfZXh0ZW5kcyA9IE9iamVjdC5hc3NpZ24gfHwgZnVuY3Rpb24gKHRhcmdldCkgeyBmb3IgKHZhciBpID0gMTsgaSA8IGFyZ3VtZW50cy5sZW5ndGg7IGkrKykgeyB2YXIgc291cmNlID0gYXJndW1lbnRzW2ldOyBmb3IgKHZhciBrZXkgaW4gc291cmNlKSB7IGlmIChPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwoc291cmNlLCBrZXkpKSB7IHRhcmdldFtrZXldID0gc291cmNlW2tleV07IH0gfSB9IHJldHVybiB0YXJnZXQ7IH07XG5cbnZhciBfcGlja1N0eWxlcyA9IHJlcXVpcmUoJy4vcGlja1N0eWxlcycpO1xuXG4vLyBtYW55IGNzcy1pbi1qcyBsaWJzIHByb2Nlc3Mga2V5ZnJhbWVzIG9iamVjdHMgYXMgdGhlIHZhbHVlIGZvciBgYW5pbWF0aW9uTmFtZWBcbnZhciBkZWZhdWx0T2JqZWN0UHJvcHNXaGl0ZWxpc3QgPSBbJ2FuaW1hdGlvbk5hbWUnXTtcblxudmFyIGRlZmF1bHRQcm9wc0RlY29yYXRvciA9IGZ1bmN0aW9uIGRlZmF1bHRQcm9wc0RlY29yYXRvcihfcmVmKSB7XG4gIHZhciBzdHlsZSA9IF9yZWYuc3R5bGUsXG4gICAgICBjbGFzc05hbWUgPSBfcmVmLmNsYXNzTmFtZTtcbiAgcmV0dXJuIF9leHRlbmRzKHt9LCBzdHlsZSA/IHsgc3R5bGU6ICgwLCBfcGlja1N0eWxlcy5waWNrRGlyZWN0U3R5bGVzKShzdHlsZSwgZGVmYXVsdE9iamVjdFByb3BzV2hpdGVsaXN0KSB9IDoge30sIGNsYXNzTmFtZSA/IHsgY2xhc3NOYW1lOiBjbGFzc05hbWUgfSA6IHt9KTtcbn07XG5cbmV4cG9ydHMuZGVmYXVsdCA9IGRlZmF1bHRQcm9wc0RlY29yYXRvcjtcbm1vZHVsZS5leHBvcnRzID0gZXhwb3J0c1snZGVmYXVsdCddOyJdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///593\n")},594:function(module,exports,__webpack_require__){"use strict";eval("\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.hoistModifierStylesRecursive = exports.pickNestedStyles = exports.pickDirectStyles = undefined;\n\nvar _utils = __webpack_require__(590);\n\nvar _filterKeys = __webpack_require__(595);\n\nfunction _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }\n\nvar camelize = function camelize(key) {\n  return key.replace(/-(\\w)/g, function (m, c) {\n    return c.toUpperCase();\n  });\n};\n\nvar pickDirectStyles = exports.pickDirectStyles = function pickDirectStyles(style) {\n  var objectPropertiesWhitelist = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];\n\n  var styleKeys = (0, _utils.keys)(style);\n  var result = {};\n  for (var i = 0, l = styleKeys.length; i < l; i += 1) {\n    var key = styleKeys[i];\n    var isDirect = Object.prototype.toString.call(style[key]) !== '[object Object]' || // style defs\n    key[0] === ':' || // pseudo selectors\n    key[0] === '@' || // @media / @keyframes / @supports / @font-face\n    objectPropertiesWhitelist.indexOf(key) >= 0; // whitelisted object-type properties\n\n    if (isDirect) {\n      result[key] = style[key];\n    }\n  }\n  return result;\n};\n\nvar pickNestedStyles = exports.pickNestedStyles = function pickNestedStyles(style, keysToPick) {\n  var camelizedKeysToPick = keysToPick.map(camelize);\n  var styleKeys = (0, _utils.keys)(style);\n  var result = {};\n  for (var i = 0, l = styleKeys.length; i < l; i += 1) {\n    var key = styleKeys[i];\n    if (keysToPick.indexOf(key) >= 0 || camelizedKeysToPick.indexOf(camelize(key)) >= 0) {\n      result[key] = style[key];\n    }\n  }\n  return result;\n};\n\n// breadth-first hoisting of selected modifier style subtrees\n// does not traverse into element, :pseudo-selector or @directive subtrees\nvar hoistModifierStylesRecursive = exports.hoistModifierStylesRecursive = function hoistModifierStylesRecursive(style, modifierKeysToPick) {\n  // hoist styles for selected modifiers on current level\n  var result = _utils.merge.apply(undefined, [{}, (0, _utils.omit)(style, modifierKeysToPick)].concat(_toConsumableArray((0, _utils.values)(pickNestedStyles(style, modifierKeysToPick)))));\n\n  // traverse nested styled for ALL modifiers\n  var modifierKeys = (0, _utils.keys)(result).filter(_filterKeys.isModifier);\n  for (var i = 0, l = modifierKeys.length; i < l; i += 1) {\n    var key = modifierKeys[i];\n    var subresult = hoistModifierStylesRecursive(result[key], modifierKeysToPick);\n    if (modifierKeysToPick.indexOf(key) >= 0) {\n      // selected modifier: hoist subresult\n      delete result[key];\n      result = (0, _utils.merge)({}, result, subresult);\n    } else {\n      // non-selected modifier: replace with subresult\n      result[key] = subresult;\n    }\n  }\n\n  return result;\n};//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNTk0LmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL3N1YnN0eWxlL2xpYi9waWNrU3R5bGVzLmpzPzE0OTciXSwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnO1xuXG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHtcbiAgdmFsdWU6IHRydWVcbn0pO1xuZXhwb3J0cy5ob2lzdE1vZGlmaWVyU3R5bGVzUmVjdXJzaXZlID0gZXhwb3J0cy5waWNrTmVzdGVkU3R5bGVzID0gZXhwb3J0cy5waWNrRGlyZWN0U3R5bGVzID0gdW5kZWZpbmVkO1xuXG52YXIgX3V0aWxzID0gcmVxdWlyZSgnLi91dGlscycpO1xuXG52YXIgX2ZpbHRlcktleXMgPSByZXF1aXJlKCcuL2ZpbHRlcktleXMnKTtcblxuZnVuY3Rpb24gX3RvQ29uc3VtYWJsZUFycmF5KGFycikgeyBpZiAoQXJyYXkuaXNBcnJheShhcnIpKSB7IGZvciAodmFyIGkgPSAwLCBhcnIyID0gQXJyYXkoYXJyLmxlbmd0aCk7IGkgPCBhcnIubGVuZ3RoOyBpKyspIHsgYXJyMltpXSA9IGFycltpXTsgfSByZXR1cm4gYXJyMjsgfSBlbHNlIHsgcmV0dXJuIEFycmF5LmZyb20oYXJyKTsgfSB9XG5cbnZhciBjYW1lbGl6ZSA9IGZ1bmN0aW9uIGNhbWVsaXplKGtleSkge1xuICByZXR1cm4ga2V5LnJlcGxhY2UoLy0oXFx3KS9nLCBmdW5jdGlvbiAobSwgYykge1xuICAgIHJldHVybiBjLnRvVXBwZXJDYXNlKCk7XG4gIH0pO1xufTtcblxudmFyIHBpY2tEaXJlY3RTdHlsZXMgPSBleHBvcnRzLnBpY2tEaXJlY3RTdHlsZXMgPSBmdW5jdGlvbiBwaWNrRGlyZWN0U3R5bGVzKHN0eWxlKSB7XG4gIHZhciBvYmplY3RQcm9wZXJ0aWVzV2hpdGVsaXN0ID0gYXJndW1lbnRzLmxlbmd0aCA+IDEgJiYgYXJndW1lbnRzWzFdICE9PSB1bmRlZmluZWQgPyBhcmd1bWVudHNbMV0gOiBbXTtcblxuICB2YXIgc3R5bGVLZXlzID0gKDAsIF91dGlscy5rZXlzKShzdHlsZSk7XG4gIHZhciByZXN1bHQgPSB7fTtcbiAgZm9yICh2YXIgaSA9IDAsIGwgPSBzdHlsZUtleXMubGVuZ3RoOyBpIDwgbDsgaSArPSAxKSB7XG4gICAgdmFyIGtleSA9IHN0eWxlS2V5c1tpXTtcbiAgICB2YXIgaXNEaXJlY3QgPSBPYmplY3QucHJvdG90eXBlLnRvU3RyaW5nLmNhbGwoc3R5bGVba2V5XSkgIT09ICdbb2JqZWN0IE9iamVjdF0nIHx8IC8vIHN0eWxlIGRlZnNcbiAgICBrZXlbMF0gPT09ICc6JyB8fCAvLyBwc2V1ZG8gc2VsZWN0b3JzXG4gICAga2V5WzBdID09PSAnQCcgfHwgLy8gQG1lZGlhIC8gQGtleWZyYW1lcyAvIEBzdXBwb3J0cyAvIEBmb250LWZhY2VcbiAgICBvYmplY3RQcm9wZXJ0aWVzV2hpdGVsaXN0LmluZGV4T2Yoa2V5KSA+PSAwOyAvLyB3aGl0ZWxpc3RlZCBvYmplY3QtdHlwZSBwcm9wZXJ0aWVzXG5cbiAgICBpZiAoaXNEaXJlY3QpIHtcbiAgICAgIHJlc3VsdFtrZXldID0gc3R5bGVba2V5XTtcbiAgICB9XG4gIH1cbiAgcmV0dXJuIHJlc3VsdDtcbn07XG5cbnZhciBwaWNrTmVzdGVkU3R5bGVzID0gZXhwb3J0cy5waWNrTmVzdGVkU3R5bGVzID0gZnVuY3Rpb24gcGlja05lc3RlZFN0eWxlcyhzdHlsZSwga2V5c1RvUGljaykge1xuICB2YXIgY2FtZWxpemVkS2V5c1RvUGljayA9IGtleXNUb1BpY2subWFwKGNhbWVsaXplKTtcbiAgdmFyIHN0eWxlS2V5cyA9ICgwLCBfdXRpbHMua2V5cykoc3R5bGUpO1xuICB2YXIgcmVzdWx0ID0ge307XG4gIGZvciAodmFyIGkgPSAwLCBsID0gc3R5bGVLZXlzLmxlbmd0aDsgaSA8IGw7IGkgKz0gMSkge1xuICAgIHZhciBrZXkgPSBzdHlsZUtleXNbaV07XG4gICAgaWYgKGtleXNUb1BpY2suaW5kZXhPZihrZXkpID49IDAgfHwgY2FtZWxpemVkS2V5c1RvUGljay5pbmRleE9mKGNhbWVsaXplKGtleSkpID49IDApIHtcbiAgICAgIHJlc3VsdFtrZXldID0gc3R5bGVba2V5XTtcbiAgICB9XG4gIH1cbiAgcmV0dXJuIHJlc3VsdDtcbn07XG5cbi8vIGJyZWFkdGgtZmlyc3QgaG9pc3Rpbmcgb2Ygc2VsZWN0ZWQgbW9kaWZpZXIgc3R5bGUgc3VidHJlZXNcbi8vIGRvZXMgbm90IHRyYXZlcnNlIGludG8gZWxlbWVudCwgOnBzZXVkby1zZWxlY3RvciBvciBAZGlyZWN0aXZlIHN1YnRyZWVzXG52YXIgaG9pc3RNb2RpZmllclN0eWxlc1JlY3Vyc2l2ZSA9IGV4cG9ydHMuaG9pc3RNb2RpZmllclN0eWxlc1JlY3Vyc2l2ZSA9IGZ1bmN0aW9uIGhvaXN0TW9kaWZpZXJTdHlsZXNSZWN1cnNpdmUoc3R5bGUsIG1vZGlmaWVyS2V5c1RvUGljaykge1xuICAvLyBob2lzdCBzdHlsZXMgZm9yIHNlbGVjdGVkIG1vZGlmaWVycyBvbiBjdXJyZW50IGxldmVsXG4gIHZhciByZXN1bHQgPSBfdXRpbHMubWVyZ2UuYXBwbHkodW5kZWZpbmVkLCBbe30sICgwLCBfdXRpbHMub21pdCkoc3R5bGUsIG1vZGlmaWVyS2V5c1RvUGljayldLmNvbmNhdChfdG9Db25zdW1hYmxlQXJyYXkoKDAsIF91dGlscy52YWx1ZXMpKHBpY2tOZXN0ZWRTdHlsZXMoc3R5bGUsIG1vZGlmaWVyS2V5c1RvUGljaykpKSkpO1xuXG4gIC8vIHRyYXZlcnNlIG5lc3RlZCBzdHlsZWQgZm9yIEFMTCBtb2RpZmllcnNcbiAgdmFyIG1vZGlmaWVyS2V5cyA9ICgwLCBfdXRpbHMua2V5cykocmVzdWx0KS5maWx0ZXIoX2ZpbHRlcktleXMuaXNNb2RpZmllcik7XG4gIGZvciAodmFyIGkgPSAwLCBsID0gbW9kaWZpZXJLZXlzLmxlbmd0aDsgaSA8IGw7IGkgKz0gMSkge1xuICAgIHZhciBrZXkgPSBtb2RpZmllcktleXNbaV07XG4gICAgdmFyIHN1YnJlc3VsdCA9IGhvaXN0TW9kaWZpZXJTdHlsZXNSZWN1cnNpdmUocmVzdWx0W2tleV0sIG1vZGlmaWVyS2V5c1RvUGljayk7XG4gICAgaWYgKG1vZGlmaWVyS2V5c1RvUGljay5pbmRleE9mKGtleSkgPj0gMCkge1xuICAgICAgLy8gc2VsZWN0ZWQgbW9kaWZpZXI6IGhvaXN0IHN1YnJlc3VsdFxuICAgICAgZGVsZXRlIHJlc3VsdFtrZXldO1xuICAgICAgcmVzdWx0ID0gKDAsIF91dGlscy5tZXJnZSkoe30sIHJlc3VsdCwgc3VicmVzdWx0KTtcbiAgICB9IGVsc2Uge1xuICAgICAgLy8gbm9uLXNlbGVjdGVkIG1vZGlmaWVyOiByZXBsYWNlIHdpdGggc3VicmVzdWx0XG4gICAgICByZXN1bHRba2V5XSA9IHN1YnJlc3VsdDtcbiAgICB9XG4gIH1cblxuICByZXR1cm4gcmVzdWx0O1xufTsiXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///594\n")},595:function(module,exports,__webpack_require__){"use strict";eval("\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nvar isModifier = exports.isModifier = function isModifier(key) {\n  return key[0] === '&';\n};\nvar isElement = exports.isElement = function isElement(key) {\n  return !isModifier(key);\n};//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNTk1LmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL3N1YnN0eWxlL2xpYi9maWx0ZXJLZXlzLmpzPzE3OWMiXSwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnO1xuXG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHtcbiAgdmFsdWU6IHRydWVcbn0pO1xudmFyIGlzTW9kaWZpZXIgPSBleHBvcnRzLmlzTW9kaWZpZXIgPSBmdW5jdGlvbiBpc01vZGlmaWVyKGtleSkge1xuICByZXR1cm4ga2V5WzBdID09PSAnJic7XG59O1xudmFyIGlzRWxlbWVudCA9IGV4cG9ydHMuaXNFbGVtZW50ID0gZnVuY3Rpb24gaXNFbGVtZW50KGtleSkge1xuICByZXR1cm4gIWlzTW9kaWZpZXIoa2V5KTtcbn07Il0sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///595\n")},596:function(module,exports,__webpack_require__){"use strict";eval("\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _utils = __webpack_require__(590);\n\nvar coerceSelection = function coerceSelection(select) {\n  if (!select) {\n    return [];\n  } else if (typeof select === 'string') {\n    return [select];\n  } else if (!Array.isArray(select)) {\n    var objSelect = select; // workaround for https://github.com/facebook/flow/issues/5781\n    return (0, _utils.keys)(select).reduce(function (acc, key) {\n      return acc.concat(objSelect[key] ? [key] : []);\n    }, []);\n  }\n  return select;\n};\nexports.default = coerceSelection;\nmodule.exports = exports['default'];//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNTk2LmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL3N1YnN0eWxlL2xpYi9jb2VyY2VTZWxlY3Rpb24uanM/YTIwOSJdLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCc7XG5cbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwge1xuICB2YWx1ZTogdHJ1ZVxufSk7XG5cbnZhciBfdXRpbHMgPSByZXF1aXJlKCcuL3V0aWxzJyk7XG5cbnZhciBjb2VyY2VTZWxlY3Rpb24gPSBmdW5jdGlvbiBjb2VyY2VTZWxlY3Rpb24oc2VsZWN0KSB7XG4gIGlmICghc2VsZWN0KSB7XG4gICAgcmV0dXJuIFtdO1xuICB9IGVsc2UgaWYgKHR5cGVvZiBzZWxlY3QgPT09ICdzdHJpbmcnKSB7XG4gICAgcmV0dXJuIFtzZWxlY3RdO1xuICB9IGVsc2UgaWYgKCFBcnJheS5pc0FycmF5KHNlbGVjdCkpIHtcbiAgICB2YXIgb2JqU2VsZWN0ID0gc2VsZWN0OyAvLyB3b3JrYXJvdW5kIGZvciBodHRwczovL2dpdGh1Yi5jb20vZmFjZWJvb2svZmxvdy9pc3N1ZXMvNTc4MVxuICAgIHJldHVybiAoMCwgX3V0aWxzLmtleXMpKHNlbGVjdCkucmVkdWNlKGZ1bmN0aW9uIChhY2MsIGtleSkge1xuICAgICAgcmV0dXJuIGFjYy5jb25jYXQob2JqU2VsZWN0W2tleV0gPyBba2V5XSA6IFtdKTtcbiAgICB9LCBbXSk7XG4gIH1cbiAgcmV0dXJuIHNlbGVjdDtcbn07XG5leHBvcnRzLmRlZmF1bHQgPSBjb2VyY2VTZWxlY3Rpb247XG5tb2R1bGUuZXhwb3J0cyA9IGV4cG9ydHNbJ2RlZmF1bHQnXTsiXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///596\n")},597:function(module,exports,__webpack_require__){"use strict";eval("\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.ContextTypes = exports.PropTypes = exports.PROPS_DECORATOR_CONTEXT_NAME = exports.ENHANCER_CONTEXT_NAME = undefined;\n\nvar _ContextTypes;\n\nvar _propTypes = __webpack_require__(1);\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _react = __webpack_require__(0);\n\nvar React = _interopRequireWildcard(_react);\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nvar ENHANCER_CONTEXT_NAME = exports.ENHANCER_CONTEXT_NAME = '__substyle__enhancer';\nvar PROPS_DECORATOR_CONTEXT_NAME = exports.PROPS_DECORATOR_CONTEXT_NAME = '__substyle__propsDecorator';\n\nvar StylePT = _propTypes2.default.oneOfType([_propTypes2.default.func, _propTypes2.default.object]);\n\nvar ClassNamesPT = _propTypes2.default.objectOf(_propTypes2.default.string);\n\nvar PropTypes = exports.PropTypes = {\n  style: StylePT,\n  className: _propTypes2.default.string,\n  classNames: ClassNamesPT,\n  innerRef: _propTypes2.default.oneOfType([_propTypes2.default.func, _propTypes2.default.shape({\n    current: typeof Element === 'undefined' ? _propTypes2.default.any : _propTypes2.default.instanceOf(Element)\n  })])\n};\n\nvar ContextTypes = exports.ContextTypes = (_ContextTypes = {}, _defineProperty(_ContextTypes, ENHANCER_CONTEXT_NAME, _propTypes2.default.func), _defineProperty(_ContextTypes, PROPS_DECORATOR_CONTEXT_NAME, _propTypes2.default.func), _ContextTypes);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNTk3LmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL3N1YnN0eWxlL2xpYi90eXBlcy5qcz81ZjQ5Il0sInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0JztcblxuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7XG4gIHZhbHVlOiB0cnVlXG59KTtcbmV4cG9ydHMuQ29udGV4dFR5cGVzID0gZXhwb3J0cy5Qcm9wVHlwZXMgPSBleHBvcnRzLlBST1BTX0RFQ09SQVRPUl9DT05URVhUX05BTUUgPSBleHBvcnRzLkVOSEFOQ0VSX0NPTlRFWFRfTkFNRSA9IHVuZGVmaW5lZDtcblxudmFyIF9Db250ZXh0VHlwZXM7XG5cbnZhciBfcHJvcFR5cGVzID0gcmVxdWlyZSgncHJvcC10eXBlcycpO1xuXG52YXIgX3Byb3BUeXBlczIgPSBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KF9wcm9wVHlwZXMpO1xuXG52YXIgX3JlYWN0ID0gcmVxdWlyZSgncmVhY3QnKTtcblxudmFyIFJlYWN0ID0gX2ludGVyb3BSZXF1aXJlV2lsZGNhcmQoX3JlYWN0KTtcblxuZnVuY3Rpb24gX2ludGVyb3BSZXF1aXJlV2lsZGNhcmQob2JqKSB7IGlmIChvYmogJiYgb2JqLl9fZXNNb2R1bGUpIHsgcmV0dXJuIG9iajsgfSBlbHNlIHsgdmFyIG5ld09iaiA9IHt9OyBpZiAob2JqICE9IG51bGwpIHsgZm9yICh2YXIga2V5IGluIG9iaikgeyBpZiAoT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKG9iaiwga2V5KSkgbmV3T2JqW2tleV0gPSBvYmpba2V5XTsgfSB9IG5ld09iai5kZWZhdWx0ID0gb2JqOyByZXR1cm4gbmV3T2JqOyB9IH1cblxuZnVuY3Rpb24gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChvYmopIHsgcmV0dXJuIG9iaiAmJiBvYmouX19lc01vZHVsZSA/IG9iaiA6IHsgZGVmYXVsdDogb2JqIH07IH1cblxuZnVuY3Rpb24gX2RlZmluZVByb3BlcnR5KG9iaiwga2V5LCB2YWx1ZSkgeyBpZiAoa2V5IGluIG9iaikgeyBPYmplY3QuZGVmaW5lUHJvcGVydHkob2JqLCBrZXksIHsgdmFsdWU6IHZhbHVlLCBlbnVtZXJhYmxlOiB0cnVlLCBjb25maWd1cmFibGU6IHRydWUsIHdyaXRhYmxlOiB0cnVlIH0pOyB9IGVsc2UgeyBvYmpba2V5XSA9IHZhbHVlOyB9IHJldHVybiBvYmo7IH1cblxudmFyIEVOSEFOQ0VSX0NPTlRFWFRfTkFNRSA9IGV4cG9ydHMuRU5IQU5DRVJfQ09OVEVYVF9OQU1FID0gJ19fc3Vic3R5bGVfX2VuaGFuY2VyJztcbnZhciBQUk9QU19ERUNPUkFUT1JfQ09OVEVYVF9OQU1FID0gZXhwb3J0cy5QUk9QU19ERUNPUkFUT1JfQ09OVEVYVF9OQU1FID0gJ19fc3Vic3R5bGVfX3Byb3BzRGVjb3JhdG9yJztcblxudmFyIFN0eWxlUFQgPSBfcHJvcFR5cGVzMi5kZWZhdWx0Lm9uZU9mVHlwZShbX3Byb3BUeXBlczIuZGVmYXVsdC5mdW5jLCBfcHJvcFR5cGVzMi5kZWZhdWx0Lm9iamVjdF0pO1xuXG52YXIgQ2xhc3NOYW1lc1BUID0gX3Byb3BUeXBlczIuZGVmYXVsdC5vYmplY3RPZihfcHJvcFR5cGVzMi5kZWZhdWx0LnN0cmluZyk7XG5cbnZhciBQcm9wVHlwZXMgPSBleHBvcnRzLlByb3BUeXBlcyA9IHtcbiAgc3R5bGU6IFN0eWxlUFQsXG4gIGNsYXNzTmFtZTogX3Byb3BUeXBlczIuZGVmYXVsdC5zdHJpbmcsXG4gIGNsYXNzTmFtZXM6IENsYXNzTmFtZXNQVCxcbiAgaW5uZXJSZWY6IF9wcm9wVHlwZXMyLmRlZmF1bHQub25lT2ZUeXBlKFtfcHJvcFR5cGVzMi5kZWZhdWx0LmZ1bmMsIF9wcm9wVHlwZXMyLmRlZmF1bHQuc2hhcGUoe1xuICAgIGN1cnJlbnQ6IHR5cGVvZiBFbGVtZW50ID09PSAndW5kZWZpbmVkJyA/IF9wcm9wVHlwZXMyLmRlZmF1bHQuYW55IDogX3Byb3BUeXBlczIuZGVmYXVsdC5pbnN0YW5jZU9mKEVsZW1lbnQpXG4gIH0pXSlcbn07XG5cbnZhciBDb250ZXh0VHlwZXMgPSBleHBvcnRzLkNvbnRleHRUeXBlcyA9IChfQ29udGV4dFR5cGVzID0ge30sIF9kZWZpbmVQcm9wZXJ0eShfQ29udGV4dFR5cGVzLCBFTkhBTkNFUl9DT05URVhUX05BTUUsIF9wcm9wVHlwZXMyLmRlZmF1bHQuZnVuYyksIF9kZWZpbmVQcm9wZXJ0eShfQ29udGV4dFR5cGVzLCBQUk9QU19ERUNPUkFUT1JfQ09OVEVYVF9OQU1FLCBfcHJvcFR5cGVzMi5kZWZhdWx0LmZ1bmMpLCBfQ29udGV4dFR5cGVzKTsiXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///597\n")},598:function(module,exports,__webpack_require__){"use strict";eval('\n\nObject.defineProperty(exports, "__esModule", {\n  value: true\n});\nexports.defaultPropsDecorator = exports.defaultStyle = exports.EnhancerProvider = exports.createSubstyle = undefined;\n\nvar _createSubstyle = __webpack_require__(592);\n\nvar _createSubstyle2 = _interopRequireDefault(_createSubstyle);\n\nvar _defaultStyle = __webpack_require__(600);\n\nvar _defaultStyle2 = _interopRequireDefault(_defaultStyle);\n\nvar _EnhancerProvider = __webpack_require__(602);\n\nvar _EnhancerProvider2 = _interopRequireDefault(_EnhancerProvider);\n\nvar _defaultPropsDecorator = __webpack_require__(593);\n\nvar _defaultPropsDecorator2 = _interopRequireDefault(_defaultPropsDecorator);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nexports.createSubstyle = _createSubstyle2.default;\nexports.EnhancerProvider = _EnhancerProvider2.default;\nexports.defaultStyle = _defaultStyle2.default;\nexports.defaultPropsDecorator = _defaultPropsDecorator2.default;\nexports.default = (0, _defaultStyle2.default)();//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNTk4LmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL3N1YnN0eWxlL2xpYi9pbmRleC5qcz82NGYzIl0sInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0JztcblxuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7XG4gIHZhbHVlOiB0cnVlXG59KTtcbmV4cG9ydHMuZGVmYXVsdFByb3BzRGVjb3JhdG9yID0gZXhwb3J0cy5kZWZhdWx0U3R5bGUgPSBleHBvcnRzLkVuaGFuY2VyUHJvdmlkZXIgPSBleHBvcnRzLmNyZWF0ZVN1YnN0eWxlID0gdW5kZWZpbmVkO1xuXG52YXIgX2NyZWF0ZVN1YnN0eWxlID0gcmVxdWlyZSgnLi9jcmVhdGVTdWJzdHlsZScpO1xuXG52YXIgX2NyZWF0ZVN1YnN0eWxlMiA9IF9pbnRlcm9wUmVxdWlyZURlZmF1bHQoX2NyZWF0ZVN1YnN0eWxlKTtcblxudmFyIF9kZWZhdWx0U3R5bGUgPSByZXF1aXJlKCcuL2RlZmF1bHRTdHlsZScpO1xuXG52YXIgX2RlZmF1bHRTdHlsZTIgPSBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KF9kZWZhdWx0U3R5bGUpO1xuXG52YXIgX0VuaGFuY2VyUHJvdmlkZXIgPSByZXF1aXJlKCcuL0VuaGFuY2VyUHJvdmlkZXInKTtcblxudmFyIF9FbmhhbmNlclByb3ZpZGVyMiA9IF9pbnRlcm9wUmVxdWlyZURlZmF1bHQoX0VuaGFuY2VyUHJvdmlkZXIpO1xuXG52YXIgX2RlZmF1bHRQcm9wc0RlY29yYXRvciA9IHJlcXVpcmUoJy4vZGVmYXVsdFByb3BzRGVjb3JhdG9yJyk7XG5cbnZhciBfZGVmYXVsdFByb3BzRGVjb3JhdG9yMiA9IF9pbnRlcm9wUmVxdWlyZURlZmF1bHQoX2RlZmF1bHRQcm9wc0RlY29yYXRvcik7XG5cbmZ1bmN0aW9uIF9pbnRlcm9wUmVxdWlyZURlZmF1bHQob2JqKSB7IHJldHVybiBvYmogJiYgb2JqLl9fZXNNb2R1bGUgPyBvYmogOiB7IGRlZmF1bHQ6IG9iaiB9OyB9XG5cbmV4cG9ydHMuY3JlYXRlU3Vic3R5bGUgPSBfY3JlYXRlU3Vic3R5bGUyLmRlZmF1bHQ7XG5leHBvcnRzLkVuaGFuY2VyUHJvdmlkZXIgPSBfRW5oYW5jZXJQcm92aWRlcjIuZGVmYXVsdDtcbmV4cG9ydHMuZGVmYXVsdFN0eWxlID0gX2RlZmF1bHRTdHlsZTIuZGVmYXVsdDtcbmV4cG9ydHMuZGVmYXVsdFByb3BzRGVjb3JhdG9yID0gX2RlZmF1bHRQcm9wc0RlY29yYXRvcjIuZGVmYXVsdDtcbmV4cG9ydHMuZGVmYXVsdCA9ICgwLCBfZGVmYXVsdFN0eWxlMi5kZWZhdWx0KSgpOyJdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///598\n')},599:function(module,exports,__webpack_require__){"use strict";eval("\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _coerceSelection = __webpack_require__(596);\n\nvar _coerceSelection2 = _interopRequireDefault(_coerceSelection);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar EMPTY = {};\n\n\nvar memoize = function memoize(substyle) {\n  return function (select, defaultStyle) {\n    var cacheKey = defaultStyle || EMPTY;\n    substyle.memoize = substyle.memoize || new WeakMap();\n    var mapEntry = void 0;\n    if (!substyle.memoize.has(cacheKey)) {\n      mapEntry = {};\n      substyle.memoize.set(cacheKey, mapEntry);\n    } else {\n      mapEntry = substyle.memoize.get(cacheKey);\n    }\n    var selectHash = (0, _coerceSelection2.default)(select).join(' ');\n    return selectHash in mapEntry ? mapEntry[selectHash] : mapEntry[selectHash] = substyle(select || [], defaultStyle);\n  };\n};\n\nexports.default = memoize;\nmodule.exports = exports['default'];//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNTk5LmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL3N1YnN0eWxlL2xpYi9tZW1vaXplLmpzP2EzMDYiXSwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnO1xuXG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHtcbiAgdmFsdWU6IHRydWVcbn0pO1xuXG52YXIgX2NvZXJjZVNlbGVjdGlvbiA9IHJlcXVpcmUoJy4vY29lcmNlU2VsZWN0aW9uJyk7XG5cbnZhciBfY29lcmNlU2VsZWN0aW9uMiA9IF9pbnRlcm9wUmVxdWlyZURlZmF1bHQoX2NvZXJjZVNlbGVjdGlvbik7XG5cbmZ1bmN0aW9uIF9pbnRlcm9wUmVxdWlyZURlZmF1bHQob2JqKSB7IHJldHVybiBvYmogJiYgb2JqLl9fZXNNb2R1bGUgPyBvYmogOiB7IGRlZmF1bHQ6IG9iaiB9OyB9XG5cbnZhciBFTVBUWSA9IHt9O1xuXG5cbnZhciBtZW1vaXplID0gZnVuY3Rpb24gbWVtb2l6ZShzdWJzdHlsZSkge1xuICByZXR1cm4gZnVuY3Rpb24gKHNlbGVjdCwgZGVmYXVsdFN0eWxlKSB7XG4gICAgdmFyIGNhY2hlS2V5ID0gZGVmYXVsdFN0eWxlIHx8IEVNUFRZO1xuICAgIHN1YnN0eWxlLm1lbW9pemUgPSBzdWJzdHlsZS5tZW1vaXplIHx8IG5ldyBXZWFrTWFwKCk7XG4gICAgdmFyIG1hcEVudHJ5ID0gdm9pZCAwO1xuICAgIGlmICghc3Vic3R5bGUubWVtb2l6ZS5oYXMoY2FjaGVLZXkpKSB7XG4gICAgICBtYXBFbnRyeSA9IHt9O1xuICAgICAgc3Vic3R5bGUubWVtb2l6ZS5zZXQoY2FjaGVLZXksIG1hcEVudHJ5KTtcbiAgICB9IGVsc2Uge1xuICAgICAgbWFwRW50cnkgPSBzdWJzdHlsZS5tZW1vaXplLmdldChjYWNoZUtleSk7XG4gICAgfVxuICAgIHZhciBzZWxlY3RIYXNoID0gKDAsIF9jb2VyY2VTZWxlY3Rpb24yLmRlZmF1bHQpKHNlbGVjdCkuam9pbignICcpO1xuICAgIHJldHVybiBzZWxlY3RIYXNoIGluIG1hcEVudHJ5ID8gbWFwRW50cnlbc2VsZWN0SGFzaF0gOiBtYXBFbnRyeVtzZWxlY3RIYXNoXSA9IHN1YnN0eWxlKHNlbGVjdCB8fCBbXSwgZGVmYXVsdFN0eWxlKTtcbiAgfTtcbn07XG5cbmV4cG9ydHMuZGVmYXVsdCA9IG1lbW9pemU7XG5tb2R1bGUuZXhwb3J0cyA9IGV4cG9ydHNbJ2RlZmF1bHQnXTsiXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///599\n")},600:function(module,exports,__webpack_require__){"use strict";eval("\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _react = __webpack_require__(0);\n\nvar _hoistNonReactStatics = __webpack_require__(224);\n\nvar _hoistNonReactStatics2 = _interopRequireDefault(_hoistNonReactStatics);\n\nvar _warning = __webpack_require__(601);\n\nvar _warning2 = _interopRequireDefault(_warning);\n\nvar _utils = __webpack_require__(590);\n\nvar _createSubstyle = __webpack_require__(592);\n\nvar _createSubstyle2 = _interopRequireDefault(_createSubstyle);\n\nvar _types = __webpack_require__(597);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar isStatelessFunction = function isStatelessFunction(Component\n// $FlowFixMe\n) {\n  return Component.prototype && !Component.prototype.render;\n};\n\nvar createDefaultStyle = function createDefaultStyle(defaultStyle, getModifiers) {\n  var shouldUpdate = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : function () {\n    return true;\n  };\n  return function (WrappedComponent) {\n    var WithDefaultStyle = function (_Component) {\n      _inherits(WithDefaultStyle, _Component);\n\n      function WithDefaultStyle(props, context) {\n        _classCallCheck(this, WithDefaultStyle);\n\n        var _this = _possibleConstructorReturn(this, (WithDefaultStyle.__proto__ || Object.getPrototypeOf(WithDefaultStyle)).call(this, props, context));\n\n        _this.setWrappedInstance = function (ref) {\n          _this.wrappedInstance = ref;\n          var innerRef = _this.props.innerRef;\n\n          if (typeof innerRef === 'function') {\n            innerRef(ref);\n          } else if (innerRef && typeof innerRef !== 'string') {\n            innerRef.current = ref;\n          }\n        };\n\n        var style = props.style,\n            className = props.className,\n            classNames = props.classNames,\n            _ = props.innerRef,\n            rest = _objectWithoutProperties(props, ['style', 'className', 'classNames', 'innerRef']);\n\n        _this.substyle = (0, _createSubstyle2.default)({ style: style, className: className, classNames: classNames }, _this.context[_types.PROPS_DECORATOR_CONTEXT_NAME]);\n\n        if (typeof defaultStyle === 'function') {\n          _this.defaultStyle = defaultStyle(rest);\n        }\n        return _this;\n      }\n\n      _createClass(WithDefaultStyle, [{\n        key: 'shouldComponentUpdate',\n        value: function shouldComponentUpdate(_ref) {\n          var style = _ref.style,\n              className = _ref.className,\n              classNames = _ref.classNames,\n              rest = _objectWithoutProperties(_ref, ['style', 'className', 'classNames']);\n\n          var _props = this.props,\n              prevStyle = _props.style,\n              prevClassName = _props.className,\n              prevClassNames = _props.classNames,\n              _ = _props.innerRef,\n              prevRest = _objectWithoutProperties(_props, ['style', 'className', 'classNames', 'innerRef']);\n\n          if (style !== prevStyle || className !== prevClassName || classNames !== prevClassNames) {\n            this.substyle = (0, _createSubstyle2.default)({ style: style, className: className, classNames: classNames }, this.context[_types.PROPS_DECORATOR_CONTEXT_NAME]);\n          }\n\n          if (typeof defaultStyle === 'function') {\n            if (shouldUpdate(rest, prevRest)) {\n              this.defaultStyle = defaultStyle(rest);\n            }\n          }\n\n          return true;\n        }\n      }, {\n        key: 'render',\n        value: function render() {\n          var _props2 = this.props,\n              innerRef = _props2.innerRef,\n              _0 = _props2.style,\n              _1 = _props2.className,\n              _2 = _props2.classNames,\n              rest = _objectWithoutProperties(_props2, ['innerRef', 'style', 'className', 'classNames']);\n\n          var EnhancedWrappedComponent = this.getWrappedComponent();\n          var modifiers = getModifiers ? getModifiers(rest) : [];\n          return (0, _react.createElement)(EnhancedWrappedComponent, _extends({\n            style: this.substyle(modifiers, this.defaultStyle || defaultStyle),\n            ref: isStatelessFunction(EnhancedWrappedComponent) ? undefined : // $FlowFixMe\n            this.setWrappedInstance\n          }, rest));\n        }\n      }, {\n        key: 'getWrappedComponent',\n        value: function getWrappedComponent() {\n          var _context$ENHANCER_CON = this.context[_types.ENHANCER_CONTEXT_NAME],\n              enhance = _context$ENHANCER_CON === undefined ? _utils.identity : _context$ENHANCER_CON;\n\n\n          if (this.memoizedEnhance !== enhance) {\n            this.memoizedEnhance = enhance;\n            this.enhancedWrappedComponent = enhance(WrappedComponent);\n            if (this.enhancedWrappedComponent.propTypes) {\n              this.enhancedWrappedComponent.propTypes = _extends({}, this.enhancedWrappedComponent.propTypes, {\n                style: _types.PropTypes.style\n              });\n            }\n          }\n\n          return this.enhancedWrappedComponent || WrappedComponent;\n        }\n      }, {\n        key: 'getWrappedInstance',\n        value: function getWrappedInstance() {\n          (0, _warning2.default)(true, '`getWrappedInstance()` is deprecated and will be removed with the next major release. ' + 'Instead, use the `innerRef` prop to get a ref to the wrapped instance.');\n          return this.wrappedInstance;\n        }\n      }]);\n\n      return WithDefaultStyle;\n    }(_react.Component);\n\n    var wrappedComponentName = WrappedComponent.displayName || WrappedComponent.name;\n    WithDefaultStyle.displayName = 'withDefaultStyle(' + wrappedComponentName + ')';\n\n    // define prop types based on WrappedComponent's prop types\n    WithDefaultStyle.propTypes = _extends({}, WrappedComponent.propTypes, _types.PropTypes);\n\n    WithDefaultStyle.contextTypes = _types.ContextTypes;\n\n    // expose WrappedComponent, e.g., for testing purposes\n    WithDefaultStyle.WrappedComponent = WrappedComponent;\n\n    return (0, _hoistNonReactStatics2.default)(WithDefaultStyle, WrappedComponent);\n  };\n};\n\nexports.default = createDefaultStyle;\nmodule.exports = exports['default'];//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///600\n")},601:function(module,exports,__webpack_require__){"use strict";eval("/**\n * Copyright 2014-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n */\n\n\n\n/**\n * Similar to invariant but only logs a warning if the condition is not met.\n * This can be used to log issues in development environments in critical\n * paths. Removing the logging code for production environments will keep the\n * same logic and follow the same code paths.\n */\n\nvar warning = function() {};\n\nif (false) {}\n\nmodule.exports = warning;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNjAxLmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL3dhcm5pbmcvYnJvd3Nlci5qcz9lODM0Il0sInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogQ29weXJpZ2h0IDIwMTQtMjAxNSwgRmFjZWJvb2ssIEluYy5cbiAqIEFsbCByaWdodHMgcmVzZXJ2ZWQuXG4gKlxuICogVGhpcyBzb3VyY2UgY29kZSBpcyBsaWNlbnNlZCB1bmRlciB0aGUgQlNELXN0eWxlIGxpY2Vuc2UgZm91bmQgaW4gdGhlXG4gKiBMSUNFTlNFIGZpbGUgaW4gdGhlIHJvb3QgZGlyZWN0b3J5IG9mIHRoaXMgc291cmNlIHRyZWUuIEFuIGFkZGl0aW9uYWwgZ3JhbnRcbiAqIG9mIHBhdGVudCByaWdodHMgY2FuIGJlIGZvdW5kIGluIHRoZSBQQVRFTlRTIGZpbGUgaW4gdGhlIHNhbWUgZGlyZWN0b3J5LlxuICovXG5cbid1c2Ugc3RyaWN0JztcblxuLyoqXG4gKiBTaW1pbGFyIHRvIGludmFyaWFudCBidXQgb25seSBsb2dzIGEgd2FybmluZyBpZiB0aGUgY29uZGl0aW9uIGlzIG5vdCBtZXQuXG4gKiBUaGlzIGNhbiBiZSB1c2VkIHRvIGxvZyBpc3N1ZXMgaW4gZGV2ZWxvcG1lbnQgZW52aXJvbm1lbnRzIGluIGNyaXRpY2FsXG4gKiBwYXRocy4gUmVtb3ZpbmcgdGhlIGxvZ2dpbmcgY29kZSBmb3IgcHJvZHVjdGlvbiBlbnZpcm9ubWVudHMgd2lsbCBrZWVwIHRoZVxuICogc2FtZSBsb2dpYyBhbmQgZm9sbG93IHRoZSBzYW1lIGNvZGUgcGF0aHMuXG4gKi9cblxudmFyIHdhcm5pbmcgPSBmdW5jdGlvbigpIHt9O1xuXG5pZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09ICdwcm9kdWN0aW9uJykge1xuICB3YXJuaW5nID0gZnVuY3Rpb24oY29uZGl0aW9uLCBmb3JtYXQsIGFyZ3MpIHtcbiAgICB2YXIgbGVuID0gYXJndW1lbnRzLmxlbmd0aDtcbiAgICBhcmdzID0gbmV3IEFycmF5KGxlbiA+IDIgPyBsZW4gLSAyIDogMCk7XG4gICAgZm9yICh2YXIga2V5ID0gMjsga2V5IDwgbGVuOyBrZXkrKykge1xuICAgICAgYXJnc1trZXkgLSAyXSA9IGFyZ3VtZW50c1trZXldO1xuICAgIH1cbiAgICBpZiAoZm9ybWF0ID09PSB1bmRlZmluZWQpIHtcbiAgICAgIHRocm93IG5ldyBFcnJvcihcbiAgICAgICAgJ2B3YXJuaW5nKGNvbmRpdGlvbiwgZm9ybWF0LCAuLi5hcmdzKWAgcmVxdWlyZXMgYSB3YXJuaW5nICcgK1xuICAgICAgICAnbWVzc2FnZSBhcmd1bWVudCdcbiAgICAgICk7XG4gICAgfVxuXG4gICAgaWYgKGZvcm1hdC5sZW5ndGggPCAxMCB8fCAoL15bc1xcV10qJC8pLnRlc3QoZm9ybWF0KSkge1xuICAgICAgdGhyb3cgbmV3IEVycm9yKFxuICAgICAgICAnVGhlIHdhcm5pbmcgZm9ybWF0IHNob3VsZCBiZSBhYmxlIHRvIHVuaXF1ZWx5IGlkZW50aWZ5IHRoaXMgJyArXG4gICAgICAgICd3YXJuaW5nLiBQbGVhc2UsIHVzZSBhIG1vcmUgZGVzY3JpcHRpdmUgZm9ybWF0IHRoYW46ICcgKyBmb3JtYXRcbiAgICAgICk7XG4gICAgfVxuXG4gICAgaWYgKCFjb25kaXRpb24pIHtcbiAgICAgIHZhciBhcmdJbmRleCA9IDA7XG4gICAgICB2YXIgbWVzc2FnZSA9ICdXYXJuaW5nOiAnICtcbiAgICAgICAgZm9ybWF0LnJlcGxhY2UoLyVzL2csIGZ1bmN0aW9uKCkge1xuICAgICAgICAgIHJldHVybiBhcmdzW2FyZ0luZGV4KytdO1xuICAgICAgICB9KTtcbiAgICAgIGlmICh0eXBlb2YgY29uc29sZSAhPT0gJ3VuZGVmaW5lZCcpIHtcbiAgICAgICAgY29uc29sZS5lcnJvcihtZXNzYWdlKTtcbiAgICAgIH1cbiAgICAgIHRyeSB7XG4gICAgICAgIC8vIFRoaXMgZXJyb3Igd2FzIHRocm93biBhcyBhIGNvbnZlbmllbmNlIHNvIHRoYXQgeW91IGNhbiB1c2UgdGhpcyBzdGFja1xuICAgICAgICAvLyB0byBmaW5kIHRoZSBjYWxsc2l0ZSB0aGF0IGNhdXNlZCB0aGlzIHdhcm5pbmcgdG8gZmlyZS5cbiAgICAgICAgdGhyb3cgbmV3IEVycm9yKG1lc3NhZ2UpO1xuICAgICAgfSBjYXRjaCh4KSB7fVxuICAgIH1cbiAgfTtcbn1cblxubW9kdWxlLmV4cG9ydHMgPSB3YXJuaW5nO1xuIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsYUFxQ0E7QUFDQTtBQUNBOyIsInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///601\n")},602:function(module,exports,__webpack_require__){"use strict";eval('\n\nObject.defineProperty(exports, "__esModule", {\n  value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _react = __webpack_require__(0);\n\nvar React = _interopRequireWildcard(_react);\n\nvar _propTypes = __webpack_require__(1);\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _types = __webpack_require__(597);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn\'t been initialised - super() hasn\'t been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar EnhancerProvider = function (_React$Component) {\n  _inherits(EnhancerProvider, _React$Component);\n\n  function EnhancerProvider() {\n    _classCallCheck(this, EnhancerProvider);\n\n    return _possibleConstructorReturn(this, (EnhancerProvider.__proto__ || Object.getPrototypeOf(EnhancerProvider)).apply(this, arguments));\n  }\n\n  _createClass(EnhancerProvider, [{\n    key: \'getChildContext\',\n    value: function getChildContext() {\n      var _ref;\n\n      return _ref = {}, _defineProperty(_ref, _types.ENHANCER_CONTEXT_NAME, this.props.enhancer), _defineProperty(_ref, _types.PROPS_DECORATOR_CONTEXT_NAME, this.props.propsDecorator), _ref;\n    }\n  }, {\n    key: \'render\',\n    value: function render() {\n      return React.Children.only(this.props.children);\n    }\n  }]);\n\n  return EnhancerProvider;\n}(React.Component);\n\nexports.default = EnhancerProvider;\n\n\nEnhancerProvider.propTypes = {\n  enhancer: _propTypes2.default.func,\n  propsDecorator: _propTypes2.default.func,\n  children: _propTypes2.default.element.isRequired\n};\n\nEnhancerProvider.childContextTypes = _types.ContextTypes;\n\nEnhancerProvider.displayName = \'EnhancerProvider\';\nmodule.exports = exports[\'default\'];//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNjAyLmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL3N1YnN0eWxlL2xpYi9FbmhhbmNlclByb3ZpZGVyLmpzP2RiNTQiXSwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnO1xuXG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHtcbiAgdmFsdWU6IHRydWVcbn0pO1xuXG52YXIgX2NyZWF0ZUNsYXNzID0gZnVuY3Rpb24gKCkgeyBmdW5jdGlvbiBkZWZpbmVQcm9wZXJ0aWVzKHRhcmdldCwgcHJvcHMpIHsgZm9yICh2YXIgaSA9IDA7IGkgPCBwcm9wcy5sZW5ndGg7IGkrKykgeyB2YXIgZGVzY3JpcHRvciA9IHByb3BzW2ldOyBkZXNjcmlwdG9yLmVudW1lcmFibGUgPSBkZXNjcmlwdG9yLmVudW1lcmFibGUgfHwgZmFsc2U7IGRlc2NyaXB0b3IuY29uZmlndXJhYmxlID0gdHJ1ZTsgaWYgKFwidmFsdWVcIiBpbiBkZXNjcmlwdG9yKSBkZXNjcmlwdG9yLndyaXRhYmxlID0gdHJ1ZTsgT2JqZWN0LmRlZmluZVByb3BlcnR5KHRhcmdldCwgZGVzY3JpcHRvci5rZXksIGRlc2NyaXB0b3IpOyB9IH0gcmV0dXJuIGZ1bmN0aW9uIChDb25zdHJ1Y3RvciwgcHJvdG9Qcm9wcywgc3RhdGljUHJvcHMpIHsgaWYgKHByb3RvUHJvcHMpIGRlZmluZVByb3BlcnRpZXMoQ29uc3RydWN0b3IucHJvdG90eXBlLCBwcm90b1Byb3BzKTsgaWYgKHN0YXRpY1Byb3BzKSBkZWZpbmVQcm9wZXJ0aWVzKENvbnN0cnVjdG9yLCBzdGF0aWNQcm9wcyk7IHJldHVybiBDb25zdHJ1Y3RvcjsgfTsgfSgpO1xuXG52YXIgX3JlYWN0ID0gcmVxdWlyZSgncmVhY3QnKTtcblxudmFyIFJlYWN0ID0gX2ludGVyb3BSZXF1aXJlV2lsZGNhcmQoX3JlYWN0KTtcblxudmFyIF9wcm9wVHlwZXMgPSByZXF1aXJlKCdwcm9wLXR5cGVzJyk7XG5cbnZhciBfcHJvcFR5cGVzMiA9IF9pbnRlcm9wUmVxdWlyZURlZmF1bHQoX3Byb3BUeXBlcyk7XG5cbnZhciBfdHlwZXMgPSByZXF1aXJlKCcuL3R5cGVzJyk7XG5cbmZ1bmN0aW9uIF9pbnRlcm9wUmVxdWlyZURlZmF1bHQob2JqKSB7IHJldHVybiBvYmogJiYgb2JqLl9fZXNNb2R1bGUgPyBvYmogOiB7IGRlZmF1bHQ6IG9iaiB9OyB9XG5cbmZ1bmN0aW9uIF9pbnRlcm9wUmVxdWlyZVdpbGRjYXJkKG9iaikgeyBpZiAob2JqICYmIG9iai5fX2VzTW9kdWxlKSB7IHJldHVybiBvYmo7IH0gZWxzZSB7IHZhciBuZXdPYmogPSB7fTsgaWYgKG9iaiAhPSBudWxsKSB7IGZvciAodmFyIGtleSBpbiBvYmopIHsgaWYgKE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChvYmosIGtleSkpIG5ld09ialtrZXldID0gb2JqW2tleV07IH0gfSBuZXdPYmouZGVmYXVsdCA9IG9iajsgcmV0dXJuIG5ld09iajsgfSB9XG5cbmZ1bmN0aW9uIF9kZWZpbmVQcm9wZXJ0eShvYmosIGtleSwgdmFsdWUpIHsgaWYgKGtleSBpbiBvYmopIHsgT2JqZWN0LmRlZmluZVByb3BlcnR5KG9iaiwga2V5LCB7IHZhbHVlOiB2YWx1ZSwgZW51bWVyYWJsZTogdHJ1ZSwgY29uZmlndXJhYmxlOiB0cnVlLCB3cml0YWJsZTogdHJ1ZSB9KTsgfSBlbHNlIHsgb2JqW2tleV0gPSB2YWx1ZTsgfSByZXR1cm4gb2JqOyB9XG5cbmZ1bmN0aW9uIF9jbGFzc0NhbGxDaGVjayhpbnN0YW5jZSwgQ29uc3RydWN0b3IpIHsgaWYgKCEoaW5zdGFuY2UgaW5zdGFuY2VvZiBDb25zdHJ1Y3RvcikpIHsgdGhyb3cgbmV3IFR5cGVFcnJvcihcIkNhbm5vdCBjYWxsIGEgY2xhc3MgYXMgYSBmdW5jdGlvblwiKTsgfSB9XG5cbmZ1bmN0aW9uIF9wb3NzaWJsZUNvbnN0cnVjdG9yUmV0dXJuKHNlbGYsIGNhbGwpIHsgaWYgKCFzZWxmKSB7IHRocm93IG5ldyBSZWZlcmVuY2VFcnJvcihcInRoaXMgaGFzbid0IGJlZW4gaW5pdGlhbGlzZWQgLSBzdXBlcigpIGhhc24ndCBiZWVuIGNhbGxlZFwiKTsgfSByZXR1cm4gY2FsbCAmJiAodHlwZW9mIGNhbGwgPT09IFwib2JqZWN0XCIgfHwgdHlwZW9mIGNhbGwgPT09IFwiZnVuY3Rpb25cIikgPyBjYWxsIDogc2VsZjsgfVxuXG5mdW5jdGlvbiBfaW5oZXJpdHMoc3ViQ2xhc3MsIHN1cGVyQ2xhc3MpIHsgaWYgKHR5cGVvZiBzdXBlckNsYXNzICE9PSBcImZ1bmN0aW9uXCIgJiYgc3VwZXJDbGFzcyAhPT0gbnVsbCkgeyB0aHJvdyBuZXcgVHlwZUVycm9yKFwiU3VwZXIgZXhwcmVzc2lvbiBtdXN0IGVpdGhlciBiZSBudWxsIG9yIGEgZnVuY3Rpb24sIG5vdCBcIiArIHR5cGVvZiBzdXBlckNsYXNzKTsgfSBzdWJDbGFzcy5wcm90b3R5cGUgPSBPYmplY3QuY3JlYXRlKHN1cGVyQ2xhc3MgJiYgc3VwZXJDbGFzcy5wcm90b3R5cGUsIHsgY29uc3RydWN0b3I6IHsgdmFsdWU6IHN1YkNsYXNzLCBlbnVtZXJhYmxlOiBmYWxzZSwgd3JpdGFibGU6IHRydWUsIGNvbmZpZ3VyYWJsZTogdHJ1ZSB9IH0pOyBpZiAoc3VwZXJDbGFzcykgT2JqZWN0LnNldFByb3RvdHlwZU9mID8gT2JqZWN0LnNldFByb3RvdHlwZU9mKHN1YkNsYXNzLCBzdXBlckNsYXNzKSA6IHN1YkNsYXNzLl9fcHJvdG9fXyA9IHN1cGVyQ2xhc3M7IH1cblxudmFyIEVuaGFuY2VyUHJvdmlkZXIgPSBmdW5jdGlvbiAoX1JlYWN0JENvbXBvbmVudCkge1xuICBfaW5oZXJpdHMoRW5oYW5jZXJQcm92aWRlciwgX1JlYWN0JENvbXBvbmVudCk7XG5cbiAgZnVuY3Rpb24gRW5oYW5jZXJQcm92aWRlcigpIHtcbiAgICBfY2xhc3NDYWxsQ2hlY2sodGhpcywgRW5oYW5jZXJQcm92aWRlcik7XG5cbiAgICByZXR1cm4gX3Bvc3NpYmxlQ29uc3RydWN0b3JSZXR1cm4odGhpcywgKEVuaGFuY2VyUHJvdmlkZXIuX19wcm90b19fIHx8IE9iamVjdC5nZXRQcm90b3R5cGVPZihFbmhhbmNlclByb3ZpZGVyKSkuYXBwbHkodGhpcywgYXJndW1lbnRzKSk7XG4gIH1cblxuICBfY3JlYXRlQ2xhc3MoRW5oYW5jZXJQcm92aWRlciwgW3tcbiAgICBrZXk6ICdnZXRDaGlsZENvbnRleHQnLFxuICAgIHZhbHVlOiBmdW5jdGlvbiBnZXRDaGlsZENvbnRleHQoKSB7XG4gICAgICB2YXIgX3JlZjtcblxuICAgICAgcmV0dXJuIF9yZWYgPSB7fSwgX2RlZmluZVByb3BlcnR5KF9yZWYsIF90eXBlcy5FTkhBTkNFUl9DT05URVhUX05BTUUsIHRoaXMucHJvcHMuZW5oYW5jZXIpLCBfZGVmaW5lUHJvcGVydHkoX3JlZiwgX3R5cGVzLlBST1BTX0RFQ09SQVRPUl9DT05URVhUX05BTUUsIHRoaXMucHJvcHMucHJvcHNEZWNvcmF0b3IpLCBfcmVmO1xuICAgIH1cbiAgfSwge1xuICAgIGtleTogJ3JlbmRlcicsXG4gICAgdmFsdWU6IGZ1bmN0aW9uIHJlbmRlcigpIHtcbiAgICAgIHJldHVybiBSZWFjdC5DaGlsZHJlbi5vbmx5KHRoaXMucHJvcHMuY2hpbGRyZW4pO1xuICAgIH1cbiAgfV0pO1xuXG4gIHJldHVybiBFbmhhbmNlclByb3ZpZGVyO1xufShSZWFjdC5Db21wb25lbnQpO1xuXG5leHBvcnRzLmRlZmF1bHQgPSBFbmhhbmNlclByb3ZpZGVyO1xuXG5cbkVuaGFuY2VyUHJvdmlkZXIucHJvcFR5cGVzID0ge1xuICBlbmhhbmNlcjogX3Byb3BUeXBlczIuZGVmYXVsdC5mdW5jLFxuICBwcm9wc0RlY29yYXRvcjogX3Byb3BUeXBlczIuZGVmYXVsdC5mdW5jLFxuICBjaGlsZHJlbjogX3Byb3BUeXBlczIuZGVmYXVsdC5lbGVtZW50LmlzUmVxdWlyZWRcbn07XG5cbkVuaGFuY2VyUHJvdmlkZXIuY2hpbGRDb250ZXh0VHlwZXMgPSBfdHlwZXMuQ29udGV4dFR5cGVzO1xuXG5FbmhhbmNlclByb3ZpZGVyLmRpc3BsYXlOYW1lID0gJ0VuaGFuY2VyUHJvdmlkZXInO1xubW9kdWxlLmV4cG9ydHMgPSBleHBvcnRzWydkZWZhdWx0J107Il0sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///602\n')},604:function(module,__webpack_exports__,__webpack_require__){"use strict";eval("\n// EXPORTS\n__webpack_require__.d(__webpack_exports__, \"a\", function() { return /* binding */ Mention; });\n__webpack_require__.d(__webpack_exports__, \"b\", function() { return /* binding */ MentionsInput$1; });\n\n// CONCATENATED MODULE: ./node_modules/react-mentions/node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js\nfunction _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) {\n    for (var i = 0, arr2 = new Array(arr.length); i < arr.length; i++) {\n      arr2[i] = arr[i];\n    }\n\n    return arr2;\n  }\n}\n// CONCATENATED MODULE: ./node_modules/react-mentions/node_modules/@babel/runtime/helpers/esm/iterableToArray.js\nfunction _iterableToArray(iter) {\n  if (Symbol.iterator in Object(iter) || Object.prototype.toString.call(iter) === \"[object Arguments]\") return Array.from(iter);\n}\n// CONCATENATED MODULE: ./node_modules/react-mentions/node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js\nfunction _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance\");\n}\n// CONCATENATED MODULE: ./node_modules/react-mentions/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\n\n\n\nfunction _toConsumableArray(arr) {\n  return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _nonIterableSpread();\n}\n// CONCATENATED MODULE: ./node_modules/react-mentions/node_modules/@babel/runtime/helpers/esm/extends.js\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n// CONCATENATED MODULE: ./node_modules/react-mentions/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n// CONCATENATED MODULE: ./node_modules/react-mentions/node_modules/@babel/runtime/helpers/esm/createClass.js\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\n// CONCATENATED MODULE: ./node_modules/react-mentions/node_modules/@babel/runtime/helpers/esm/typeof.js\nfunction _typeof2(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof2 = function _typeof2(obj) { return typeof obj; }; } else { _typeof2 = function _typeof2(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof2(obj); }\n\nfunction _typeof(obj) {\n  if (typeof Symbol === \"function\" && _typeof2(Symbol.iterator) === \"symbol\") {\n    _typeof = function _typeof(obj) {\n      return _typeof2(obj);\n    };\n  } else {\n    _typeof = function _typeof(obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : _typeof2(obj);\n    };\n  }\n\n  return _typeof(obj);\n}\n// CONCATENATED MODULE: ./node_modules/react-mentions/node_modules/@babel/runtime/helpers/esm/assertThisInitialized.js\nfunction _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}\n// CONCATENATED MODULE: ./node_modules/react-mentions/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn.js\n\n\nfunction _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  }\n\n  return _assertThisInitialized(self);\n}\n// CONCATENATED MODULE: ./node_modules/react-mentions/node_modules/@babel/runtime/helpers/esm/getPrototypeOf.js\nfunction _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}\n// CONCATENATED MODULE: ./node_modules/react-mentions/node_modules/@babel/runtime/helpers/esm/setPrototypeOf.js\nfunction _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}\n// CONCATENATED MODULE: ./node_modules/react-mentions/node_modules/@babel/runtime/helpers/esm/inherits.js\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) _setPrototypeOf(subClass, superClass);\n}\n// CONCATENATED MODULE: ./node_modules/react-mentions/node_modules/@babel/runtime/helpers/esm/defineProperty.js\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n// EXTERNAL MODULE: ./node_modules/react/index.js\nvar react = __webpack_require__(0);\nvar react_default = /*#__PURE__*/__webpack_require__.n(react);\n\n// EXTERNAL MODULE: ./node_modules/invariant/browser.js\nvar browser = __webpack_require__(591);\nvar browser_default = /*#__PURE__*/__webpack_require__.n(browser);\n\n// CONCATENATED MODULE: ./node_modules/react-mentions/node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js\nfunction _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}\n// CONCATENATED MODULE: ./node_modules/react-mentions/node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js\nfunction _iterableToArrayLimit(arr, i) {\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}\n// CONCATENATED MODULE: ./node_modules/react-mentions/node_modules/@babel/runtime/helpers/esm/nonIterableRest.js\nfunction _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance\");\n}\n// CONCATENATED MODULE: ./node_modules/react-mentions/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\n\n\n\nfunction _slicedToArray(arr, i) {\n  return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _nonIterableRest();\n}\n// EXTERNAL MODULE: ./node_modules/prop-types/index.js\nvar prop_types = __webpack_require__(1);\nvar prop_types_default = /*#__PURE__*/__webpack_require__.n(prop_types);\n\n// EXTERNAL MODULE: ./node_modules/substyle/lib/index.js\nvar lib = __webpack_require__(598);\nvar lib_default = /*#__PURE__*/__webpack_require__.n(lib);\n\n// EXTERNAL MODULE: ./node_modules/react-dom/index.js\nvar react_dom = __webpack_require__(58);\nvar react_dom_default = /*#__PURE__*/__webpack_require__.n(react_dom);\n\n// CONCATENATED MODULE: ./node_modules/react-mentions/dist/react-mentions.esm.js\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n// escape RegExp special characters https://stackoverflow.com/a/9310752/5142490\nvar escapeRegex = function escapeRegex(str) {\n  return str.replace(/[-[\\]{}()*+?.,\\\\^$|#\\s]/g, '\\\\$&');\n};\n\nvar PLACEHOLDERS = {\n  id: '__id__',\n  display: '__display__'\n};\n\nvar react_mentions_esm_findPositionOfCapturingGroup = function findPositionOfCapturingGroup(markup, parameterName) {\n  browser_default()(parameterName === 'id' || parameterName === 'display', \"Second arg must be either \\\"id\\\" or \\\"display\\\", got: \\\"\".concat(parameterName, \"\\\"\")); // find positions of placeholders in the markup\n\n  var indexDisplay = markup.indexOf(PLACEHOLDERS.display);\n  var indexId = markup.indexOf(PLACEHOLDERS.id); // set indices to null if not found\n\n  if (indexDisplay < 0) indexDisplay = null;\n  if (indexId < 0) indexId = null; // markup must contain one of the mandatory placeholders\n\n  browser_default()(indexDisplay !== null || indexId !== null, \"The markup '\".concat(markup, \"' does not contain either of the placeholders '__id__' or '__display__'\"));\n\n  if (indexDisplay !== null && indexId !== null) {\n    // both placeholders are used, return 0 or 1 depending on the position of the requested parameter\n    return parameterName === 'id' && indexId <= indexDisplay || parameterName === 'display' && indexDisplay <= indexId ? 0 : 1;\n  } // just one placeholder is being used, we'll use the captured string for both parameters\n\n\n  return 0;\n};\n\nvar react_mentions_esm_combineRegExps = function combineRegExps(regExps) {\n  var serializedRegexParser = /^\\/(.+)\\/(\\w+)?$/;\n  return new RegExp(regExps.map(function (regex) {\n    var _serializedRegexParse = serializedRegexParser.exec(regex.toString()),\n        _serializedRegexParse2 = _slicedToArray(_serializedRegexParse, 3),\n        regexString = _serializedRegexParse2[1],\n        regexFlags = _serializedRegexParse2[2];\n\n    browser_default()(!regexFlags, \"RegExp flags are not supported. Change /\".concat(regexString, \"/\").concat(regexFlags, \" into /\").concat(regexString, \"/\"));\n    return \"(\".concat(regexString, \")\");\n  }).join('|'), 'g');\n};\n\nvar countPlaceholders = function countPlaceholders(markup) {\n  var count = 0;\n  if (markup.indexOf('__id__') >= 0) count++;\n  if (markup.indexOf('__display__') >= 0) count++;\n  return count;\n};\n\nvar emptyFn = function emptyFn() {}; // Finds all occurrences of the markup in the value and calls the `markupIteratee` callback for each of them.\n// The optional `textIteratee` callback is called for each plain text ranges in between these markup occurrences.\n\n\nvar iterateMentionsMarkup = function iterateMentionsMarkup(value, config, markupIteratee) {\n  var textIteratee = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : emptyFn;\n  var regex = react_mentions_esm_combineRegExps(config.map(function (c) {\n    return c.regex;\n  }));\n  var accOffset = 2; // first is whole match, second is the for the capturing group of first regexp component\n\n  var captureGroupOffsets = config.map(function (_ref) {\n    var markup = _ref.markup;\n    var result = accOffset; // + 1 is for the capturing group we add around each regexp component in combineRegExps\n\n    accOffset += countPlaceholders(markup) + 1;\n    return result;\n  });\n  var match;\n  var start = 0;\n  var currentPlainTextIndex = 0; // detect all mention markup occurrences in the value and iterate the matches\n\n  while ((match = regex.exec(value)) !== null) {\n    var offset = captureGroupOffsets.find(function (o) {\n      return !!match[o];\n    }); // eslint-disable-line no-loop-func\n\n    var mentionChildIndex = captureGroupOffsets.indexOf(offset);\n    var _config$mentionChildI = config[mentionChildIndex],\n        markup = _config$mentionChildI.markup,\n        displayTransform = _config$mentionChildI.displayTransform;\n    var idPos = offset + react_mentions_esm_findPositionOfCapturingGroup(markup, 'id');\n    var displayPos = offset + react_mentions_esm_findPositionOfCapturingGroup(markup, 'display');\n    var id = match[idPos];\n    var display = displayTransform(id, match[displayPos]);\n    var substr = value.substring(start, match.index);\n    textIteratee(substr, start, currentPlainTextIndex);\n    currentPlainTextIndex += substr.length;\n    markupIteratee(match[0], match.index, currentPlainTextIndex, id, display, mentionChildIndex, start);\n    currentPlainTextIndex += display.length;\n    start = regex.lastIndex;\n  }\n\n  if (start < value.length) {\n    textIteratee(value.substring(start), start, currentPlainTextIndex);\n  }\n};\n\nvar getPlainText = function getPlainText(value, config) {\n  var result = '';\n  iterateMentionsMarkup(value, config, function (match, index, plainTextIndex, id, display) {\n    result += display;\n  }, function (plainText) {\n    result += plainText;\n  });\n  return result;\n};\n\n// in the marked up value string.\n// If the passed character index lies inside a mention, the value of `inMarkupCorrection` defines the\n// correction to apply:\n//   - 'START' to return the index of the mention markup's first char (default)\n//   - 'END' to return the index after its last char\n//   - 'NULL' to return null\n\nvar mapPlainTextIndex = function mapPlainTextIndex(value, config, indexInPlainText) {\n  var inMarkupCorrection = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 'START';\n\n  if (typeof indexInPlainText !== 'number') {\n    return indexInPlainText;\n  }\n\n  var result;\n\n  var textIteratee = function textIteratee(substr, index, substrPlainTextIndex) {\n    if (result !== undefined) return;\n\n    if (substrPlainTextIndex + substr.length >= indexInPlainText) {\n      // found the corresponding position in the current plain text range\n      result = index + indexInPlainText - substrPlainTextIndex;\n    }\n  };\n\n  var markupIteratee = function markupIteratee(markup, index, mentionPlainTextIndex, id, display, childIndex, lastMentionEndIndex) {\n    if (result !== undefined) return;\n\n    if (mentionPlainTextIndex + display.length > indexInPlainText) {\n      // found the corresponding position inside current match,\n      // return the index of the first or after the last char of the matching markup\n      // depending on whether the `inMarkupCorrection`\n      if (inMarkupCorrection === 'NULL') {\n        result = null;\n      } else {\n        result = index + (inMarkupCorrection === 'END' ? markup.length : 0);\n      }\n    }\n  };\n\n  iterateMentionsMarkup(value, config, markupIteratee, textIteratee); // when a mention is at the end of the value and we want to get the caret position\n  // at the end of the string, result is undefined\n\n  return result === undefined ? value.length : result;\n};\n\nvar spliceString = function spliceString(str, start, end, insert) {\n  return str.substring(0, start) + insert + str.substring(end);\n};\n\n// guided by the textarea text selection ranges before and after the change\n\nvar applyChangeToValue = function applyChangeToValue(value, plainTextValue, _ref, config) {\n  var selectionStartBefore = _ref.selectionStartBefore,\n      selectionEndBefore = _ref.selectionEndBefore,\n      selectionEndAfter = _ref.selectionEndAfter;\n  var oldPlainTextValue = getPlainText(value, config);\n  var lengthDelta = oldPlainTextValue.length - plainTextValue.length;\n\n  if (selectionStartBefore === 'undefined') {\n    selectionStartBefore = selectionEndAfter + lengthDelta;\n  }\n\n  if (selectionEndBefore === 'undefined') {\n    selectionEndBefore = selectionStartBefore;\n  } // Fixes an issue with replacing combined characters for complex input. Eg like acented letters on OSX\n\n\n  if (selectionStartBefore === selectionEndBefore && selectionEndBefore === selectionEndAfter && oldPlainTextValue.length === plainTextValue.length) {\n    selectionStartBefore = selectionStartBefore - 1;\n  } // extract the insertion from the new plain text value\n\n\n  var insert = plainTextValue.slice(selectionStartBefore, selectionEndAfter); // handling for Backspace key with no range selection\n\n  var spliceStart = Math.min(selectionStartBefore, selectionEndAfter);\n  var spliceEnd = selectionEndBefore;\n\n  if (selectionStartBefore === selectionEndAfter) {\n    // handling for Delete key with no range selection\n    spliceEnd = Math.max(selectionEndBefore, selectionStartBefore + lengthDelta);\n  }\n\n  var mappedSpliceStart = mapPlainTextIndex(value, config, spliceStart, 'START');\n  var mappedSpliceEnd = mapPlainTextIndex(value, config, spliceEnd, 'END');\n  var controlSpliceStart = mapPlainTextIndex(value, config, spliceStart, 'NULL');\n  var controlSpliceEnd = mapPlainTextIndex(value, config, spliceEnd, 'NULL');\n  var willRemoveMention = controlSpliceStart === null || controlSpliceEnd === null;\n  var newValue = spliceString(value, mappedSpliceStart, mappedSpliceEnd, insert);\n\n  if (!willRemoveMention) {\n    // test for auto-completion changes\n    var controlPlainTextValue = getPlainText(newValue, config);\n\n    if (controlPlainTextValue !== plainTextValue) {\n      // some auto-correction is going on\n      // find start of diff\n      spliceStart = 0;\n\n      while (plainTextValue[spliceStart] === controlPlainTextValue[spliceStart]) {\n        spliceStart++;\n      } // extract auto-corrected insertion\n\n\n      insert = plainTextValue.slice(spliceStart, selectionEndAfter); // find index of the unchanged remainder\n\n      spliceEnd = oldPlainTextValue.lastIndexOf(plainTextValue.substring(selectionEndAfter)); // re-map the corrected indices\n\n      mappedSpliceStart = mapPlainTextIndex(value, config, spliceStart, 'START');\n      mappedSpliceEnd = mapPlainTextIndex(value, config, spliceEnd, 'END');\n      newValue = spliceString(value, mappedSpliceStart, mappedSpliceEnd, insert);\n    }\n  }\n\n  return newValue;\n};\n\n// returns a the index of of the first char of the mention in the plain text.\n// If indexInPlainText does not lie inside a mention, returns indexInPlainText.\n\nvar findStartOfMentionInPlainText = function findStartOfMentionInPlainText(value, config, indexInPlainText) {\n  var result = indexInPlainText;\n  var foundMention = false;\n\n  var markupIteratee = function markupIteratee(markup, index, mentionPlainTextIndex, id, display, childIndex, lastMentionEndIndex) {\n    if (mentionPlainTextIndex <= indexInPlainText && mentionPlainTextIndex + display.length > indexInPlainText) {\n      result = mentionPlainTextIndex;\n      foundMention = true;\n    }\n  };\n\n  iterateMentionsMarkup(value, config, markupIteratee);\n\n  if (foundMention) {\n    return result;\n  }\n};\n\nvar getMentions = function getMentions(value, config) {\n  var mentions = [];\n  iterateMentionsMarkup(value, config, function (match, index, plainTextIndex, id, display, childIndex, start) {\n    mentions.push({\n      id: id,\n      display: display,\n      childIndex: childIndex,\n      index: index,\n      plainTextIndex: plainTextIndex\n    });\n  });\n  return mentions;\n};\n\nvar countSuggestions = function countSuggestions(suggestions) {\n  return Object.values(suggestions).reduce(function (acc, _ref) {\n    var results = _ref.results;\n    return acc + results.length;\n  }, 0);\n};\n\nvar getEndOfLastMention = function getEndOfLastMention(value, config) {\n  var mentions = getMentions(value, config);\n  var lastMention = mentions[mentions.length - 1];\n  return lastMention ? lastMention.plainTextIndex + lastMention.display.length : 0;\n};\n\nvar markupToRegex = function markupToRegex(markup) {\n  var escapedMarkup = escapeRegex(markup);\n  var charAfterDisplay = markup[markup.indexOf(PLACEHOLDERS.display) + PLACEHOLDERS.display.length];\n  var charAfterId = markup[markup.indexOf(PLACEHOLDERS.display) + PLACEHOLDERS.display.length];\n  return new RegExp(escapedMarkup.replace(PLACEHOLDERS.display, \"([^\".concat(escapeRegex(charAfterDisplay || ''), \"]+?)\")).replace(PLACEHOLDERS.id, \"([^\".concat(escapeRegex(charAfterId || ''), \"]+?)\")));\n};\n\nvar react_mentions_esm_readConfigFromChildren = function readConfigFromChildren(children) {\n  return react[\"Children\"].toArray(children).map(function (_ref) {\n    var _ref$props = _ref.props,\n        markup = _ref$props.markup,\n        regex = _ref$props.regex,\n        displayTransform = _ref$props.displayTransform;\n    return {\n      markup: markup,\n      regex: regex ? react_mentions_esm_coerceCapturingGroups(regex, markup) : markupToRegex(markup),\n      displayTransform: displayTransform || function (id, display) {\n        return display || id;\n      }\n    };\n  });\n}; // make sure that the custom regex defines the correct number of capturing groups\n\n\nvar react_mentions_esm_coerceCapturingGroups = function coerceCapturingGroups(regex, markup) {\n  var numberOfGroups = new RegExp(regex.toString() + '|').exec('').length - 1;\n  var numberOfPlaceholders = countPlaceholders(markup);\n  browser_default()(numberOfGroups === numberOfPlaceholders, \"Number of capturing groups in RegExp \".concat(regex.toString(), \" (\").concat(numberOfGroups, \") does not match the number of placeholders in the markup '\").concat(markup, \"' (\").concat(numberOfPlaceholders, \")\"));\n  return regex;\n};\n\nvar makeMentionsMarkup = function makeMentionsMarkup(markup, id, display) {\n  return markup.replace(PLACEHOLDERS.id, id).replace(PLACEHOLDERS.display, display);\n};\n\n// This contains all the latin letters and the regex that match these letters with diacritics\n// https://stackoverflow.com/questions/990904/remove-accents-diacritics-in-a-string-in-javascript\nvar lettersDiacritics = [{\n  base: 'A',\n  letters: /(&#65;|&#9398;|&#65313;|&#192;|&#193;|&#194;|&#7846;|&#7844;|&#7850;|&#7848;|&#195;|&#256;|&#258;|&#7856;|&#7854;|&#7860;|&#7858;|&#550;|&#480;|&#196;|&#478;|&#7842;|&#197;|&#506;|&#461;|&#512;|&#514;|&#7840;|&#7852;|&#7862;|&#7680;|&#260;|&#570;|&#11375;|[\\u0041\\u24B6\\uFF21\\u00C0\\u00C1\\u00C2\\u1EA6\\u1EA4\\u1EAA\\u1EA8\\u00C3\\u0100\\u0102\\u1EB0\\u1EAE\\u1EB4\\u1EB2\\u0226\\u01E0\\u00C4\\u01DE\\u1EA2\\u00C5\\u01FA\\u01CD\\u0200\\u0202\\u1EA0\\u1EAC\\u1EB6\\u1E00\\u0104\\u023A\\u2C6F])/g\n}, {\n  base: 'AA',\n  letters: /(&#42802;|[\\uA732])/g\n}, {\n  base: 'AE',\n  letters: /(&#198;|&#508;|&#482;|[\\u00C6\\u01FC\\u01E2])/g\n}, {\n  base: 'AO',\n  letters: /(&#42804;|[\\uA734])/g\n}, {\n  base: 'AU',\n  letters: /(&#42806;|[\\uA736])/g\n}, {\n  base: 'AV',\n  letters: /(&#42808;|&#42810;|[\\uA738\\uA73A])/g\n}, {\n  base: 'AY',\n  letters: /(&#42812;|[\\uA73C])/g\n}, {\n  base: 'B',\n  letters: /(&#66;|&#9399;|&#65314;|&#7682;|&#7684;|&#7686;|&#579;|&#386;|&#385;|[\\u0042\\u24B7\\uFF22\\u1E02\\u1E04\\u1E06\\u0243\\u0182\\u0181])/g\n}, {\n  base: 'C',\n  letters: /(&#67;|&#9400;|&#65315;|&#262;|&#264;|&#266;|&#268;|&#199;|&#7688;|&#391;|&#571;|&#42814;|[\\u0043\\u24B8\\uFF23\\u0106\\u0108\\u010A\\u010C\\u00C7\\u1E08\\u0187\\u023B\\uA73E])/g\n}, {\n  base: 'D',\n  letters: /(&#68;|&#9401;|&#65316;|&#7690;|&#270;|&#7692;|&#7696;|&#7698;|&#7694;|&#272;|&#395;|&#394;|&#393;|&#42873;|&#208;|[\\u0044\\u24B9\\uFF24\\u1E0A\\u010E\\u1E0C\\u1E10\\u1E12\\u1E0E\\u0110\\u018B\\u018A\\u0189\\uA779\\u00D0])/g\n}, {\n  base: 'DZ',\n  letters: /(&#497;|&#452;|[\\u01F1\\u01C4])/g\n}, {\n  base: 'Dz',\n  letters: /(&#498;|&#453;|[\\u01F2\\u01C5])/g\n}, {\n  base: 'E',\n  letters: /(&#69;|&#9402;|&#65317;|&#200;|&#201;|&#202;|&#7872;|&#7870;|&#7876;|&#7874;|&#7868;|&#274;|&#7700;|&#7702;|&#276;|&#278;|&#203;|&#7866;|&#282;|&#516;|&#518;|&#7864;|&#7878;|&#552;|&#7708;|&#280;|&#7704;|&#7706;|&#400;|&#398;|[\\u0045\\u24BA\\uFF25\\u00C8\\u00C9\\u00CA\\u1EC0\\u1EBE\\u1EC4\\u1EC2\\u1EBC\\u0112\\u1E14\\u1E16\\u0114\\u0116\\u00CB\\u1EBA\\u011A\\u0204\\u0206\\u1EB8\\u1EC6\\u0228\\u1E1C\\u0118\\u1E18\\u1E1A\\u0190\\u018E])/g\n}, {\n  base: 'F',\n  letters: /(&#70;|&#9403;|&#65318;|&#7710;|&#401;|&#42875;|[\\u0046\\u24BB\\uFF26\\u1E1E\\u0191\\uA77B])/g\n}, {\n  base: 'G',\n  letters: /(&#71;|&#9404;|&#65319;|&#500;|&#284;|&#7712;|&#286;|&#288;|&#486;|&#290;|&#484;|&#403;|&#42912;|&#42877;|&#42878;|[\\u0047\\u24BC\\uFF27\\u01F4\\u011C\\u1E20\\u011E\\u0120\\u01E6\\u0122\\u01E4\\u0193\\uA7A0\\uA77D\\uA77E])/g\n}, {\n  base: 'H',\n  letters: /(&#72;|&#9405;|&#65320;|&#292;|&#7714;|&#7718;|&#542;|&#7716;|&#7720;|&#7722;|&#294;|&#11367;|&#11381;|&#42893;|[\\u0048\\u24BD\\uFF28\\u0124\\u1E22\\u1E26\\u021E\\u1E24\\u1E28\\u1E2A\\u0126\\u2C67\\u2C75\\uA78D])/g\n}, {\n  base: 'I',\n  letters: /(&#73;|&#9406;|&#65321;|&#204;|&#205;|&#206;|&#296;|&#298;|&#300;|&#304;|&#207;|&#7726;|&#7880;|&#463;|&#520;|&#522;|&#7882;|&#302;|&#7724;|&#407;|[\\u0049\\u24BE\\uFF29\\u00CC\\u00CD\\u00CE\\u0128\\u012A\\u012C\\u0130\\u00CF\\u1E2E\\u1EC8\\u01CF\\u0208\\u020A\\u1ECA\\u012E\\u1E2C\\u0197])/g\n}, {\n  base: 'J',\n  letters: /(&#74;|&#9407;|&#65322;|&#308;|&#584;|[\\u004A\\u24BF\\uFF2A\\u0134\\u0248])/g\n}, {\n  base: 'K',\n  letters: /(&#75;|&#9408;|&#65323;|&#7728;|&#488;|&#7730;|&#310;|&#7732;|&#408;|&#11369;|&#42816;|&#42818;|&#42820;|&#42914;|[\\u004B\\u24C0\\uFF2B\\u1E30\\u01E8\\u1E32\\u0136\\u1E34\\u0198\\u2C69\\uA740\\uA742\\uA744\\uA7A2])/g\n}, {\n  base: 'L',\n  letters: /(&#76;|&#9409;|&#65324;|&#319;|&#313;|&#317;|&#7734;|&#7736;|&#315;|&#7740;|&#7738;|&#321;|&#573;|&#11362;|&#11360;|&#42824;|&#42822;|&#42880;|[\\u004C\\u24C1\\uFF2C\\u013F\\u0139\\u013D\\u1E36\\u1E38\\u013B\\u1E3C\\u1E3A\\u0141\\u023D\\u2C62\\u2C60\\uA748\\uA746\\uA780])/g\n}, {\n  base: 'LJ',\n  letters: /(&#455;|[\\u01C7])/g\n}, {\n  base: 'Lj',\n  letters: /(&#456;|[\\u01C8])/g\n}, {\n  base: 'M',\n  letters: /(&#77;|&#9410;|&#65325;|&#7742;|&#7744;|&#7746;|&#11374;|&#412;|[\\u004D\\u24C2\\uFF2D\\u1E3E\\u1E40\\u1E42\\u2C6E\\u019C])/g\n}, {\n  base: 'N',\n  letters: /(&#78;|&#9411;|&#65326;|&#504;|&#323;|&#209;|&#7748;|&#327;|&#7750;|&#325;|&#7754;|&#7752;|&#544;|&#413;|&#42896;|&#42916;|&#330;|[\\u004E\\u24C3\\uFF2E\\u01F8\\u0143\\u00D1\\u1E44\\u0147\\u1E46\\u0145\\u1E4A\\u1E48\\u0220\\u019D\\uA790\\uA7A4\\u014A])/g\n}, {\n  base: 'NJ',\n  letters: /(&#458;|[\\u01CA])/g\n}, {\n  base: 'Nj',\n  letters: /(&#459;|[\\u01CB])/g\n}, {\n  base: 'O',\n  letters: /(&#79;|&#9412;|&#65327;|&#210;|&#211;|&#212;|&#7890;|&#7888;|&#7894;|&#7892;|&#213;|&#7756;|&#556;|&#7758;|&#332;|&#7760;|&#7762;|&#334;|&#558;|&#560;|&#214;|&#554;|&#7886;|&#336;|&#465;|&#524;|&#526;|&#416;|&#7900;|&#7898;|&#7904;|&#7902;|&#7906;|&#7884;|&#7896;|&#490;|&#492;|&#216;|&#510;|&#390;|&#415;|&#42826;|&#42828;|[\\u004F\\u24C4\\uFF2F\\u00D2\\u00D3\\u00D4\\u1ED2\\u1ED0\\u1ED6\\u1ED4\\u00D5\\u1E4C\\u022C\\u1E4E\\u014C\\u1E50\\u1E52\\u014E\\u022E\\u0230\\u00D6\\u022A\\u1ECE\\u0150\\u01D1\\u020C\\u020E\\u01A0\\u1EDC\\u1EDA\\u1EE0\\u1EDE\\u1EE2\\u1ECC\\u1ED8\\u01EA\\u01EC\\u00D8\\u01FE\\u0186\\u019F\\uA74A\\uA74C])/g\n}, {\n  base: 'OE',\n  letters: /(&#338;|[\\u0152])/g\n}, {\n  base: 'OI',\n  letters: /(&#418;|[\\u01A2])/g\n}, {\n  base: 'OO',\n  letters: /(&#42830;|[\\uA74E])/g\n}, {\n  base: 'OU',\n  letters: /(&#546;|[\\u0222])/g\n}, {\n  base: 'P',\n  letters: /(&#80;|&#9413;|&#65328;|&#7764;|&#7766;|&#420;|&#11363;|&#42832;|&#42834;|&#42836;|[\\u0050\\u24C5\\uFF30\\u1E54\\u1E56\\u01A4\\u2C63\\uA750\\uA752\\uA754])/g\n}, {\n  base: 'Q',\n  letters: /(&#81;|&#9414;|&#65329;|&#42838;|&#42840;|&#586;|[\\u0051\\u24C6\\uFF31\\uA756\\uA758\\u024A])/g\n}, {\n  base: 'R',\n  letters: /(&#82;|&#9415;|&#65330;|&#340;|&#7768;|&#344;|&#528;|&#530;|&#7770;|&#7772;|&#342;|&#7774;|&#588;|&#11364;|&#42842;|&#42918;|&#42882;|[\\u0052\\u24C7\\uFF32\\u0154\\u1E58\\u0158\\u0210\\u0212\\u1E5A\\u1E5C\\u0156\\u1E5E\\u024C\\u2C64\\uA75A\\uA7A6\\uA782])/g\n}, {\n  base: 'S',\n  letters: /(&#83;|&#9416;|&#65331;|&#7838;|&#346;|&#7780;|&#348;|&#7776;|&#352;|&#7782;|&#7778;|&#7784;|&#536;|&#350;|&#11390;|&#42920;|&#42884;|[\\u0053\\u24C8\\uFF33\\u1E9E\\u015A\\u1E64\\u015C\\u1E60\\u0160\\u1E66\\u1E62\\u1E68\\u0218\\u015E\\u2C7E\\uA7A8\\uA784])/g\n}, {\n  base: 'T',\n  letters: /(&#84;|&#9417;|&#65332;|&#7786;|&#356;|&#7788;|&#538;|&#354;|&#7792;|&#7790;|&#358;|&#428;|&#430;|&#574;|&#42886;|[\\u0054\\u24C9\\uFF34\\u1E6A\\u0164\\u1E6C\\u021A\\u0162\\u1E70\\u1E6E\\u0166\\u01AC\\u01AE\\u023E\\uA786])/g\n}, {\n  base: 'TH',\n  letters: /(&#222;|[\\u00DE])/g\n}, {\n  base: 'TZ',\n  letters: /(&#42792;|[\\uA728])/g\n}, {\n  base: 'U',\n  letters: /(&#85;|&#9418;|&#65333;|&#217;|&#218;|&#219;|&#360;|&#7800;|&#362;|&#7802;|&#364;|&#220;|&#475;|&#471;|&#469;|&#473;|&#7910;|&#366;|&#368;|&#467;|&#532;|&#534;|&#431;|&#7914;|&#7912;|&#7918;|&#7916;|&#7920;|&#7908;|&#7794;|&#370;|&#7798;|&#7796;|&#580;|[\\u0055\\u24CA\\uFF35\\u00D9\\u00DA\\u00DB\\u0168\\u1E78\\u016A\\u1E7A\\u016C\\u00DC\\u01DB\\u01D7\\u01D5\\u01D9\\u1EE6\\u016E\\u0170\\u01D3\\u0214\\u0216\\u01AF\\u1EEA\\u1EE8\\u1EEE\\u1EEC\\u1EF0\\u1EE4\\u1E72\\u0172\\u1E76\\u1E74\\u0244])/g\n}, {\n  base: 'V',\n  letters: /(&#86;|&#9419;|&#65334;|&#7804;|&#7806;|&#434;|&#42846;|&#581;|[\\u0056\\u24CB\\uFF36\\u1E7C\\u1E7E\\u01B2\\uA75E\\u0245])/g\n}, {\n  base: 'VY',\n  letters: /(&#42848;|[\\uA760])/g\n}, {\n  base: 'W',\n  letters: /(&#87;|&#9420;|&#65335;|&#7808;|&#7810;|&#372;|&#7814;|&#7812;|&#7816;|&#11378;|[\\u0057\\u24CC\\uFF37\\u1E80\\u1E82\\u0174\\u1E86\\u1E84\\u1E88\\u2C72])/g\n}, {\n  base: 'X',\n  letters: /(&#88;|&#9421;|&#65336;|&#7818;|&#7820;|[\\u0058\\u24CD\\uFF38\\u1E8A\\u1E8C])/g\n}, {\n  base: 'Y',\n  letters: /(&#89;|&#9422;|&#65337;|&#7922;|&#221;|&#374;|&#7928;|&#562;|&#7822;|&#376;|&#7926;|&#7924;|&#435;|&#590;|&#7934;|[\\u0059\\u24CE\\uFF39\\u1EF2\\u00DD\\u0176\\u1EF8\\u0232\\u1E8E\\u0178\\u1EF6\\u1EF4\\u01B3\\u024E\\u1EFE])/g\n}, {\n  base: 'Z',\n  letters: /(&#90;|&#9423;|&#65338;|&#377;|&#7824;|&#379;|&#381;|&#7826;|&#7828;|&#437;|&#548;|&#11391;|&#11371;|&#42850;|[\\u005A\\u24CF\\uFF3A\\u0179\\u1E90\\u017B\\u017D\\u1E92\\u1E94\\u01B5\\u0224\\u2C7F\\u2C6B\\uA762])/g\n}, {\n  base: 'a',\n  letters: /(&#97;|&#9424;|&#65345;|&#7834;|&#224;|&#225;|&#226;|&#7847;|&#7845;|&#7851;|&#7849;|&#227;|&#257;|&#259;|&#7857;|&#7855;|&#7861;|&#7859;|&#551;|&#481;|&#228;|&#479;|&#7843;|&#229;|&#507;|&#462;|&#513;|&#515;|&#7841;|&#7853;|&#7863;|&#7681;|&#261;|&#11365;|&#592;|[\\u0061\\u24D0\\uFF41\\u1E9A\\u00E0\\u00E1\\u00E2\\u1EA7\\u1EA5\\u1EAB\\u1EA9\\u00E3\\u0101\\u0103\\u1EB1\\u1EAF\\u1EB5\\u1EB3\\u0227\\u01E1\\u00E4\\u01DF\\u1EA3\\u00E5\\u01FB\\u01CE\\u0201\\u0203\\u1EA1\\u1EAD\\u1EB7\\u1E01\\u0105\\u2C65\\u0250])/g\n}, {\n  base: 'aa',\n  letters: /(&#42803;|[\\uA733])/g\n}, {\n  base: 'ae',\n  letters: /(&#230;|&#509;|&#483;|[\\u00E6\\u01FD\\u01E3])/g\n}, {\n  base: 'ao',\n  letters: /(&#42805;|[\\uA735])/g\n}, {\n  base: 'au',\n  letters: /(&#42807;|[\\uA737])/g\n}, {\n  base: 'av',\n  letters: /(&#42809;|&#42811;|[\\uA739\\uA73B])/g\n}, {\n  base: 'ay',\n  letters: /(&#42813;|[\\uA73D])/g\n}, {\n  base: 'b',\n  letters: /(&#98;|&#9425;|&#65346;|&#7683;|&#7685;|&#7687;|&#384;|&#387;|&#595;|[\\u0062\\u24D1\\uFF42\\u1E03\\u1E05\\u1E07\\u0180\\u0183\\u0253])/g\n}, {\n  base: 'c',\n  letters: /(&#99;|&#9426;|&#65347;|&#263;|&#265;|&#267;|&#269;|&#231;|&#7689;|&#392;|&#572;|&#42815;|&#8580;|[\\u0063\\u24D2\\uFF43\\u0107\\u0109\\u010B\\u010D\\u00E7\\u1E09\\u0188\\u023C\\uA73F\\u2184])/g\n}, {\n  base: 'd',\n  letters: /(&#100;|&#9427;|&#65348;|&#7691;|&#271;|&#7693;|&#7697;|&#7699;|&#7695;|&#273;|&#396;|&#598;|&#599;|&#42874;|&#240;|[\\u0064\\u24D3\\uFF44\\u1E0B\\u010F\\u1E0D\\u1E11\\u1E13\\u1E0F\\u0111\\u018C\\u0256\\u0257\\uA77A\\u00F0])/g\n}, {\n  base: 'dz',\n  letters: /(&#499;|&#454;|[\\u01F3\\u01C6])/g\n}, {\n  base: 'e',\n  letters: /(&#101;|&#9428;|&#65349;|&#232;|&#233;|&#234;|&#7873;|&#7871;|&#7877;|&#7875;|&#7869;|&#275;|&#7701;|&#7703;|&#277;|&#279;|&#235;|&#7867;|&#283;|&#517;|&#519;|&#7865;|&#7879;|&#553;|&#7709;|&#281;|&#7705;|&#7707;|&#583;|&#603;|&#477;|[\\u0065\\u24D4\\uFF45\\u00E8\\u00E9\\u00EA\\u1EC1\\u1EBF\\u1EC5\\u1EC3\\u1EBD\\u0113\\u1E15\\u1E17\\u0115\\u0117\\u00EB\\u1EBB\\u011B\\u0205\\u0207\\u1EB9\\u1EC7\\u0229\\u1E1D\\u0119\\u1E19\\u1E1B\\u0247\\u025B\\u01DD])/g\n}, {\n  base: 'f',\n  letters: /(&#102;|&#9429;|&#65350;|&#7711;|&#402;|&#42876;|[\\u0066\\u24D5\\uFF46\\u1E1F\\u0192\\uA77C])/g\n}, {\n  base: 'g',\n  letters: /(&#103;|&#9430;|&#65351;|&#501;|&#285;|&#7713;|&#287;|&#289;|&#487;|&#291;|&#485;|&#608;|&#42913;|&#7545;|&#42879;|[\\u0067\\u24D6\\uFF47\\u01F5\\u011D\\u1E21\\u011F\\u0121\\u01E7\\u0123\\u01E5\\u0260\\uA7A1\\u1D79\\uA77F])/g\n}, {\n  base: 'h',\n  letters: /(&#104;|&#9431;|&#65352;|&#293;|&#7715;|&#7719;|&#543;|&#7717;|&#7721;|&#7723;|&#7830;|&#295;|&#11368;|&#11382;|&#613;|[\\u0068\\u24D7\\uFF48\\u0125\\u1E23\\u1E27\\u021F\\u1E25\\u1E29\\u1E2B\\u1E96\\u0127\\u2C68\\u2C76\\u0265])/g\n}, {\n  base: 'hv',\n  letters: /(&#405;|[\\u0195])/g\n}, {\n  base: 'i',\n  letters: /(&#105;|&#9432;|&#65353;|&#236;|&#237;|&#238;|&#297;|&#299;|&#301;|&#239;|&#7727;|&#7881;|&#464;|&#521;|&#523;|&#7883;|&#303;|&#7725;|&#616;|&#305;|[\\u0069\\u24D8\\uFF49\\u00EC\\u00ED\\u00EE\\u0129\\u012B\\u012D\\u00EF\\u1E2F\\u1EC9\\u01D0\\u0209\\u020B\\u1ECB\\u012F\\u1E2D\\u0268\\u0131])/g\n}, {\n  base: 'ij',\n  letters: /(&#307;|[\\u0133])/g\n}, {\n  base: 'j',\n  letters: /(&#106;|&#9433;|&#65354;|&#309;|&#496;|&#585;|[\\u006A\\u24D9\\uFF4A\\u0135\\u01F0\\u0249])/g\n}, {\n  base: 'k',\n  letters: /(&#107;|&#9434;|&#65355;|&#7729;|&#489;|&#7731;|&#311;|&#7733;|&#409;|&#11370;|&#42817;|&#42819;|&#42821;|&#42915;|[\\u006B\\u24DA\\uFF4B\\u1E31\\u01E9\\u1E33\\u0137\\u1E35\\u0199\\u2C6A\\uA741\\uA743\\uA745\\uA7A3])/g\n}, {\n  base: 'l',\n  letters: /(&#108;|&#9435;|&#65356;|&#320;|&#314;|&#318;|&#7735;|&#7737;|&#316;|&#7741;|&#7739;|&#322;|&#410;|&#619;|&#11361;|&#42825;|&#42881;|&#42823;|[\\u006C\\u24DB\\uFF4C\\u0140\\u013A\\u013E\\u1E37\\u1E39\\u013C\\u1E3D\\u1E3B\\u0142\\u019A\\u026B\\u2C61\\uA749\\uA781\\uA747])/g\n}, {\n  base: 'lj',\n  letters: /(&#457;|[\\u01C9])/g\n}, {\n  base: 'm',\n  letters: /(&#109;|&#9436;|&#65357;|&#7743;|&#7745;|&#7747;|&#625;|&#623;|[\\u006D\\u24DC\\uFF4D\\u1E3F\\u1E41\\u1E43\\u0271\\u026F])/g\n}, {\n  base: 'n',\n  letters: /(&#110;|&#9437;|&#65358;|&#505;|&#324;|&#241;|&#7749;|&#328;|&#7751;|&#326;|&#7755;|&#7753;|&#414;|&#626;|&#329;|&#42897;|&#42917;|&#331;|[\\u006E\\u24DD\\uFF4E\\u01F9\\u0144\\u00F1\\u1E45\\u0148\\u1E47\\u0146\\u1E4B\\u1E49\\u019E\\u0272\\u0149\\uA791\\uA7A5\\u014B])/g\n}, {\n  base: 'nj',\n  letters: /(&#460;|[\\u01CC])/g\n}, {\n  base: 'o',\n  letters: /(&#111;|&#9438;|&#65359;|&#242;|&#243;|&#244;|&#7891;|&#7889;|&#7895;|&#7893;|&#245;|&#7757;|&#557;|&#7759;|&#333;|&#7761;|&#7763;|&#335;|&#559;|&#561;|&#246;|&#555;|&#7887;|&#337;|&#466;|&#525;|&#527;|&#417;|&#7901;|&#7899;|&#7905;|&#7903;|&#7907;|&#7885;|&#7897;|&#491;|&#493;|&#248;|&#511;|&#596;|&#42827;|&#42829;|&#629;|[\\u006F\\u24DE\\uFF4F\\u00F2\\u00F3\\u00F4\\u1ED3\\u1ED1\\u1ED7\\u1ED5\\u00F5\\u1E4D\\u022D\\u1E4F\\u014D\\u1E51\\u1E53\\u014F\\u022F\\u0231\\u00F6\\u022B\\u1ECF\\u0151\\u01D2\\u020D\\u020F\\u01A1\\u1EDD\\u1EDB\\u1EE1\\u1EDF\\u1EE3\\u1ECD\\u1ED9\\u01EB\\u01ED\\u00F8\\u01FF\\u0254\\uA74B\\uA74D\\u0275])/g\n}, {\n  base: 'oe',\n  letters: /(&#339;|[\\u0153])/g\n}, {\n  base: 'oi',\n  letters: /(&#419;|[\\u01A3])/g\n}, {\n  base: 'ou',\n  letters: /(&#547;|[\\u0223])/g\n}, {\n  base: 'oo',\n  letters: /(&#42831;|[\\uA74F])/g\n}, {\n  base: 'p',\n  letters: /(&#112;|&#9439;|&#65360;|&#7765;|&#7767;|&#421;|&#7549;|&#42833;|&#42835;|&#42837;|[\\u0070\\u24DF\\uFF50\\u1E55\\u1E57\\u01A5\\u1D7D\\uA751\\uA753\\uA755])/g\n}, {\n  base: 'q',\n  letters: /(&#113;|&#9440;|&#65361;|&#587;|&#42839;|&#42841;|[\\u0071\\u24E0\\uFF51\\u024B\\uA757\\uA759])/g\n}, {\n  base: 'r',\n  letters: /(&#114;|&#9441;|&#65362;|&#341;|&#7769;|&#345;|&#529;|&#531;|&#7771;|&#7773;|&#343;|&#7775;|&#589;|&#637;|&#42843;|&#42919;|&#42883;|[\\u0072\\u24E1\\uFF52\\u0155\\u1E59\\u0159\\u0211\\u0213\\u1E5B\\u1E5D\\u0157\\u1E5F\\u024D\\u027D\\uA75B\\uA7A7\\uA783])/g\n}, {\n  base: 's',\n  letters: /(&#115;|&#9442;|&#65363;|&#347;|&#7781;|&#349;|&#7777;|&#353;|&#7783;|&#7779;|&#7785;|&#537;|&#351;|&#575;|&#42921;|&#42885;|&#7835;|&#383;|[\\u0073\\u24E2\\uFF53\\u015B\\u1E65\\u015D\\u1E61\\u0161\\u1E67\\u1E63\\u1E69\\u0219\\u015F\\u023F\\uA7A9\\uA785\\u1E9B\\u017F])/g\n}, {\n  base: 'ss',\n  letters: /(&#223;|[\\u00DF])/g\n}, {\n  base: 't',\n  letters: /(&#116;|&#9443;|&#65364;|&#7787;|&#7831;|&#357;|&#7789;|&#539;|&#355;|&#7793;|&#7791;|&#359;|&#429;|&#648;|&#11366;|&#42887;|[\\u0074\\u24E3\\uFF54\\u1E6B\\u1E97\\u0165\\u1E6D\\u021B\\u0163\\u1E71\\u1E6F\\u0167\\u01AD\\u0288\\u2C66\\uA787])/g\n}, {\n  base: 'th',\n  letters: /(&#254;|[\\u00FE])/g\n}, {\n  base: 'tz',\n  letters: /(&#42793;|[\\uA729])/g\n}, {\n  base: 'u',\n  letters: /(&#117;|&#9444;|&#65365;|&#249;|&#250;|&#251;|&#361;|&#7801;|&#363;|&#7803;|&#365;|&#252;|&#476;|&#472;|&#470;|&#474;|&#7911;|&#367;|&#369;|&#468;|&#533;|&#535;|&#432;|&#7915;|&#7913;|&#7919;|&#7917;|&#7921;|&#7909;|&#7795;|&#371;|&#7799;|&#7797;|&#649;|[\\u0075\\u24E4\\uFF55\\u00F9\\u00FA\\u00FB\\u0169\\u1E79\\u016B\\u1E7B\\u016D\\u00FC\\u01DC\\u01D8\\u01D6\\u01DA\\u1EE7\\u016F\\u0171\\u01D4\\u0215\\u0217\\u01B0\\u1EEB\\u1EE9\\u1EEF\\u1EED\\u1EF1\\u1EE5\\u1E73\\u0173\\u1E77\\u1E75\\u0289])/g\n}, {\n  base: 'v',\n  letters: /(&#118;|&#9445;|&#65366;|&#7805;|&#7807;|&#651;|&#42847;|&#652;|[\\u0076\\u24E5\\uFF56\\u1E7D\\u1E7F\\u028B\\uA75F\\u028C])/g\n}, {\n  base: 'vy',\n  letters: /(&#42849;|[\\uA761])/g\n}, {\n  base: 'w',\n  letters: /(&#119;|&#9446;|&#65367;|&#7809;|&#7811;|&#373;|&#7815;|&#7813;|&#7832;|&#7817;|&#11379;|[\\u0077\\u24E6\\uFF57\\u1E81\\u1E83\\u0175\\u1E87\\u1E85\\u1E98\\u1E89\\u2C73])/g\n}, {\n  base: 'x',\n  letters: /(&#120;|&#9447;|&#65368;|&#7819;|&#7821;|[\\u0078\\u24E7\\uFF58\\u1E8B\\u1E8D])/g\n}, {\n  base: 'y',\n  letters: /(&#121;|&#9448;|&#65369;|&#7923;|&#253;|&#375;|&#7929;|&#563;|&#7823;|&#255;|&#7927;|&#7833;|&#7925;|&#436;|&#591;|&#7935;|[\\u0079\\u24E8\\uFF59\\u1EF3\\u00FD\\u0177\\u1EF9\\u0233\\u1E8F\\u00FF\\u1EF7\\u1E99\\u1EF5\\u01B4\\u024F\\u1EFF])/g\n}, {\n  base: 'z',\n  letters: /(&#122;|&#9449;|&#65370;|&#378;|&#7825;|&#380;|&#382;|&#7827;|&#7829;|&#438;|&#549;|&#576;|&#11372;|&#42851;|[\\u007A\\u24E9\\uFF5A\\u017A\\u1E91\\u017C\\u017E\\u1E93\\u1E95\\u01B6\\u0225\\u0240\\u2C6C\\uA763])/g\n}];\n\nvar removeAccents = function removeAccents(str) {\n  var formattedStr = str;\n  lettersDiacritics.forEach(function (letterDiacritics) {\n    formattedStr = formattedStr.replace(letterDiacritics.letters, letterDiacritics.base);\n  });\n  return formattedStr;\n};\n\nvar normalizeString = function normalizeString(str) {\n  return removeAccents(str).toLowerCase();\n};\n\nvar getSubstringIndex = function getSubstringIndex(str, substr, ignoreAccents) {\n  if (!ignoreAccents) {\n    return str.toLowerCase().indexOf(substr.toLowerCase());\n  }\n\n  return normalizeString(str).indexOf(normalizeString(substr));\n};\n\nvar isObjectEqual = function isObjectEqual(obj1, obj2) {\n  if (!obj1 || !obj2) {\n    return false;\n  }\n\n  var keys1 = Object.keys(obj1);\n  var keys2 = Object.keys(obj2);\n\n  if (keys1.length !== keys2.length) {\n    return false;\n  }\n\n  for (var i = 0; i < keys1.length; i++) {\n    var key = keys1[i];\n\n    if (obj1[key] !== obj2[key]) {\n      return false;\n    }\n  }\n\n  return true;\n};\n\nvar isNumber = function isNumber(val) {\n  return typeof val === 'number';\n};\n\nvar keys = function keys(obj) {\n  return obj === Object(obj) ? Object.keys(obj) : [];\n};\n\nvar omit = function omit(obj) {\n  var _ref;\n\n  for (var _len = arguments.length, rest = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n    rest[_key - 1] = arguments[_key];\n  }\n\n  var keys = (_ref = []).concat.apply(_ref, rest);\n\n  return Object.keys(obj).reduce(function (acc, k) {\n    if (obj.hasOwnProperty(k) && !keys.includes(k) && obj[k] !== undefined) {\n      acc[k] = obj[k];\n    }\n\n    return acc;\n  }, {});\n};\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nvar _generateComponentKey = function _generateComponentKey(usedKeys, id) {\n  if (!usedKeys.hasOwnProperty(id)) {\n    usedKeys[id] = 0;\n  } else {\n    usedKeys[id]++;\n  }\n\n  return id + '_' + usedKeys[id];\n};\n\nvar react_mentions_esm_Highlighter = /*#__PURE__*/function (_Component) {\n  _inherits(Highlighter, _Component);\n\n  function Highlighter() {\n    var _this;\n\n    _classCallCheck(this, Highlighter);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Highlighter).apply(this, arguments));\n    _this.state = {\n      lastPosition: {}\n    };\n    return _this;\n  }\n\n  _createClass(Highlighter, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.notifyCaretPosition();\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate() {\n      this.notifyCaretPosition();\n    }\n  }, {\n    key: \"notifyCaretPosition\",\n    value: function notifyCaretPosition() {\n      if (!this.caretRef) {\n        return;\n      }\n\n      var position = {\n        left: this.caretRef.offsetLeft,\n        top: this.caretRef.offsetTop\n      };\n      var lastPosition = this.state.lastPosition;\n\n      if (isObjectEqual(lastPosition, position)) {\n        return;\n      }\n\n      this.setState({\n        lastPosition: position\n      });\n      this.props.onCaretPositionChange(position);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$props = this.props,\n          selection = _this$props.selection,\n          value = _this$props.value,\n          style = _this$props.style,\n          inputStyle = _this$props.inputStyle,\n          children = _this$props.children;\n      var config = react_mentions_esm_readConfigFromChildren(children); // If there's a caret (i.e. no range selection), map the caret position into the marked up value\n\n      var caretPositionInMarkup;\n\n      if (selection.start === selection.end) {\n        caretPositionInMarkup = mapPlainTextIndex(value, config, selection.start, 'START');\n      }\n\n      var resultComponents = [];\n      var componentKeys = {}; // start by appending directly to the resultComponents\n\n      var components = resultComponents;\n      var substringComponentKey = 0;\n\n      var textIteratee = function textIteratee(substr, index, indexInPlainText) {\n        // check whether the caret element has to be inserted inside the current plain substring\n        if (isNumber(caretPositionInMarkup) && caretPositionInMarkup >= index && caretPositionInMarkup <= index + substr.length) {\n          // if yes, split substr at the caret position and insert the caret component\n          var splitIndex = caretPositionInMarkup - index;\n          components.push(_this2.renderSubstring(substr.substring(0, splitIndex), substringComponentKey)); // add all following substrings and mention components as children of the caret component\n\n          components = [_this2.renderSubstring(substr.substring(splitIndex), substringComponentKey)];\n        } else {\n          // otherwise just push the plain text substring\n          components.push(_this2.renderSubstring(substr, substringComponentKey));\n        }\n\n        substringComponentKey++;\n      };\n\n      var mentionIteratee = function mentionIteratee(markup, index, indexInPlainText, id, display, mentionChildIndex, lastMentionEndIndex) {\n        // generate a component key based on the id\n        var key = _generateComponentKey(componentKeys, id);\n\n        components.push(_this2.getMentionComponentForMatch(id, display, mentionChildIndex, key));\n      };\n\n      iterateMentionsMarkup(value, config, mentionIteratee, textIteratee); // append a span containing a space, to ensure the last text line has the correct height\n\n      components.push(' ');\n\n      if (components !== resultComponents) {\n        // if a caret component is to be rendered, add all components that followed as its children\n        resultComponents.push(this.renderHighlighterCaret(components));\n      }\n\n      return react_default.a.createElement(\"div\", _extends({}, style, {\n        style: _objectSpread({}, inputStyle, {}, style.style)\n      }), resultComponents);\n    }\n  }, {\n    key: \"renderSubstring\",\n    value: function renderSubstring(string, key) {\n      // set substring span to hidden, so that Emojis are not shown double in Mobile Safari\n      return react_default.a.createElement(\"span\", _extends({}, this.props.style('substring'), {\n        key: key\n      }), string);\n    } // Returns a clone of the Mention child applicable for the specified type to be rendered inside the highlighter\n\n  }, {\n    key: \"getMentionComponentForMatch\",\n    value: function getMentionComponentForMatch(id, display, mentionChildIndex, key) {\n      var props = {\n        id: id,\n        display: display,\n        key: key\n      };\n      var child = react[\"Children\"].toArray(this.props.children)[mentionChildIndex];\n      return react_default.a.cloneElement(child, props);\n    } // Renders an component to be inserted in the highlighter at the current caret position\n\n  }, {\n    key: \"renderHighlighterCaret\",\n    value: function renderHighlighterCaret(children) {\n      var _this3 = this;\n\n      return react_default.a.createElement(\"span\", _extends({}, this.props.style('caret'), {\n        ref: function ref(el) {\n          _this3.caretRef = el;\n        },\n        key: \"caret\"\n      }), children);\n    }\n  }]);\n\n  return Highlighter;\n}(react[\"Component\"]);\n\n_defineProperty(react_mentions_esm_Highlighter, \"propTypes\", {\n  selection: prop_types_default.a.shape({\n    start: prop_types_default.a.number,\n    end: prop_types_default.a.number\n  }).isRequired,\n  value: prop_types_default.a.string.isRequired,\n  onCaretPositionChange: prop_types_default.a.func.isRequired,\n  inputStyle: prop_types_default.a.object,\n  children: prop_types_default.a.oneOfType([prop_types_default.a.element, prop_types_default.a.arrayOf(prop_types_default.a.element)]).isRequired\n});\n\n_defineProperty(react_mentions_esm_Highlighter, \"defaultProps\", {\n  value: '',\n  inputStyle: {}\n});\n\nvar styled = Object(lib[\"defaultStyle\"])({\n  position: 'relative',\n  width: 'inherit',\n  color: 'transparent',\n  overflow: 'hidden',\n  whiteSpace: 'pre-wrap',\n  wordWrap: 'break-word',\n  '&singleLine': {\n    whiteSpace: 'pre',\n    wordWrap: null\n  },\n  substring: {\n    visibility: 'hidden'\n  }\n}, function (props) {\n  return {\n    '&singleLine': props.singleLine\n  };\n});\nvar Highlighter$1 = styled(react_mentions_esm_Highlighter);\n\nvar react_mentions_esm_Suggestion = /*#__PURE__*/function (_Component) {\n  _inherits(Suggestion, _Component);\n\n  function Suggestion() {\n    _classCallCheck(this, Suggestion);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(Suggestion).apply(this, arguments));\n  }\n\n  _createClass(Suggestion, [{\n    key: \"render\",\n    value: function render() {\n      var rest = omit(this.props, 'style', keys(Suggestion.propTypes));\n      return react_default.a.createElement(\"li\", _extends({}, rest, this.props.style), this.renderContent());\n    }\n  }, {\n    key: \"renderContent\",\n    value: function renderContent() {\n      var _this$props = this.props,\n          query = _this$props.query,\n          renderSuggestion = _this$props.renderSuggestion,\n          suggestion = _this$props.suggestion,\n          index = _this$props.index,\n          focused = _this$props.focused;\n      var display = this.getDisplay();\n      var highlightedDisplay = this.renderHighlightedDisplay(display, query);\n\n      if (renderSuggestion) {\n        return renderSuggestion(suggestion, query, highlightedDisplay, index, focused);\n      }\n\n      return highlightedDisplay;\n    }\n  }, {\n    key: \"getDisplay\",\n    value: function getDisplay() {\n      var suggestion = this.props.suggestion;\n\n      if (suggestion instanceof String) {\n        return suggestion;\n      }\n\n      var id = suggestion.id,\n          display = suggestion.display;\n\n      if (id === undefined || !display) {\n        return id;\n      }\n\n      return display;\n    }\n  }, {\n    key: \"renderHighlightedDisplay\",\n    value: function renderHighlightedDisplay(display) {\n      var _this$props2 = this.props,\n          ignoreAccents = _this$props2.ignoreAccents,\n          query = _this$props2.query,\n          style = _this$props2.style;\n      var i = getSubstringIndex(display, query, ignoreAccents);\n\n      if (i === -1) {\n        return react_default.a.createElement(\"span\", style('display'), display);\n      }\n\n      return react_default.a.createElement(\"span\", style('display'), display.substring(0, i), react_default.a.createElement(\"b\", style('highlight'), display.substring(i, i + query.length)), display.substring(i + query.length));\n    }\n  }]);\n\n  return Suggestion;\n}(react[\"Component\"]);\n\n_defineProperty(react_mentions_esm_Suggestion, \"propTypes\", {\n  id: prop_types_default.a.oneOfType([prop_types_default.a.string, prop_types_default.a.number]).isRequired,\n  query: prop_types_default.a.string.isRequired,\n  index: prop_types_default.a.number.isRequired,\n  ignoreAccents: prop_types_default.a.bool,\n  suggestion: prop_types_default.a.oneOfType([prop_types_default.a.string, prop_types_default.a.shape({\n    id: prop_types_default.a.oneOfType([prop_types_default.a.string, prop_types_default.a.number]).isRequired,\n    display: prop_types_default.a.string\n  })]).isRequired,\n  renderSuggestion: prop_types_default.a.func,\n  focused: prop_types_default.a.bool\n});\n\nvar styled$1 = Object(lib[\"defaultStyle\"])({\n  cursor: 'pointer'\n}, function (props) {\n  return {\n    '&focused': props.focused\n  };\n});\nvar Suggestion$1 = styled$1(react_mentions_esm_Suggestion);\n\nfunction LoadingIndicator(_ref) {\n  var style = _ref.style;\n  var spinnerStyle = style('spinner');\n  return react_default.a.createElement(\"div\", style, react_default.a.createElement(\"div\", spinnerStyle, react_default.a.createElement(\"div\", spinnerStyle(['element', 'element1'])), react_default.a.createElement(\"div\", spinnerStyle(['element', 'element2'])), react_default.a.createElement(\"div\", spinnerStyle(['element', 'element3'])), react_default.a.createElement(\"div\", spinnerStyle(['element', 'element4'])), react_default.a.createElement(\"div\", spinnerStyle(['element', 'element5']))));\n}\n\nvar LoadingIndicator$1 = lib_default()(LoadingIndicator);\n\nfunction ownKeys$1(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread$1(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys$1(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys$1(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nvar react_mentions_esm_SuggestionsOverlay = /*#__PURE__*/function (_Component) {\n  _inherits(SuggestionsOverlay, _Component);\n\n  function SuggestionsOverlay() {\n    _classCallCheck(this, SuggestionsOverlay);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(SuggestionsOverlay).apply(this, arguments));\n  }\n\n  _createClass(SuggestionsOverlay, [{\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate() {\n      if (!this.suggestionsRef || this.suggestionsRef.offsetHeight >= this.suggestionsRef.scrollHeight || !this.props.scrollFocusedIntoView) {\n        return;\n      }\n\n      var scrollTop = this.suggestionsRef.scrollTop;\n\n      var _this$suggestionsRef$ = this.suggestionsRef.children[this.props.focusIndex].getBoundingClientRect(),\n          top = _this$suggestionsRef$.top,\n          bottom = _this$suggestionsRef$.bottom;\n\n      var _this$suggestionsRef$2 = this.suggestionsRef.getBoundingClientRect(),\n          topContainer = _this$suggestionsRef$2.top;\n\n      top = top - topContainer + scrollTop;\n      bottom = bottom - topContainer + scrollTop;\n\n      if (top < scrollTop) {\n        this.suggestionsRef.scrollTop = top;\n      } else if (bottom > this.suggestionsRef.offsetHeight) {\n        this.suggestionsRef.scrollTop = bottom - this.suggestionsRef.offsetHeight;\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this = this;\n\n      var _this$props = this.props,\n          suggestions = _this$props.suggestions,\n          isLoading = _this$props.isLoading,\n          style = _this$props.style,\n          onMouseDown = _this$props.onMouseDown; // do not show suggestions until there is some data\n\n      if (countSuggestions(suggestions) === 0 && !isLoading) {\n        return null;\n      }\n\n      return react_default.a.createElement(\"div\", _extends({}, style, {\n        onMouseDown: onMouseDown\n      }), react_default.a.createElement(\"ul\", _extends({\n        ref: function ref(el) {\n          _this.suggestionsRef = el;\n        }\n      }, style('list')), this.renderSuggestions()), this.renderLoadingIndicator());\n    }\n  }, {\n    key: \"renderSuggestions\",\n    value: function renderSuggestions() {\n      var _this2 = this;\n\n      return Object.values(this.props.suggestions).reduce(function (accResults, _ref) {\n        var results = _ref.results,\n            queryInfo = _ref.queryInfo;\n        return [].concat(_toConsumableArray(accResults), _toConsumableArray(results.map(function (result, index) {\n          return _this2.renderSuggestion(result, queryInfo, accResults.length + index);\n        })));\n      }, []);\n    }\n  }, {\n    key: \"renderSuggestion\",\n    value: function renderSuggestion(result, queryInfo, index) {\n      var _this3 = this;\n\n      var id = this.getID(result);\n      var isFocused = index === this.props.focusIndex;\n      var childIndex = queryInfo.childIndex,\n          query = queryInfo.query;\n      var renderSuggestion = react[\"Children\"].toArray(this.props.children)[childIndex].props.renderSuggestion;\n      var ignoreAccents = this.props.ignoreAccents;\n      return react_default.a.createElement(Suggestion$1, {\n        style: this.props.style('item'),\n        key: \"\".concat(childIndex, \"-\").concat(id),\n        id: id,\n        query: query,\n        index: index,\n        ignoreAccents: ignoreAccents,\n        renderSuggestion: renderSuggestion,\n        suggestion: result,\n        focused: isFocused,\n        onClick: function onClick() {\n          return _this3.select(result, queryInfo);\n        },\n        onMouseEnter: function onMouseEnter() {\n          return _this3.handleMouseEnter(index);\n        }\n      });\n    }\n  }, {\n    key: \"getID\",\n    value: function getID(suggestion) {\n      if (suggestion instanceof String) {\n        return suggestion;\n      }\n\n      return suggestion.id;\n    }\n  }, {\n    key: \"renderLoadingIndicator\",\n    value: function renderLoadingIndicator() {\n      if (!this.props.isLoading) {\n        return;\n      }\n\n      return react_default.a.createElement(LoadingIndicator$1, {\n        style: this.props.style('loadingIndicator')\n      });\n    }\n  }, {\n    key: \"handleMouseEnter\",\n    value: function handleMouseEnter(index, ev) {\n      if (this.props.onMouseEnter) {\n        this.props.onMouseEnter(index);\n      }\n    }\n  }, {\n    key: \"select\",\n    value: function select(suggestion, queryInfo) {\n      this.props.onSelect(suggestion, queryInfo);\n    }\n  }]);\n\n  return SuggestionsOverlay;\n}(react[\"Component\"]);\n\n_defineProperty(react_mentions_esm_SuggestionsOverlay, \"propTypes\", {\n  suggestions: prop_types_default.a.object.isRequired,\n  focusIndex: prop_types_default.a.number,\n  scrollFocusedIntoView: prop_types_default.a.bool,\n  isLoading: prop_types_default.a.bool,\n  onSelect: prop_types_default.a.func,\n  ignoreAccents: prop_types_default.a.bool,\n  children: prop_types_default.a.oneOfType([prop_types_default.a.element, prop_types_default.a.arrayOf(prop_types_default.a.element)]).isRequired\n});\n\n_defineProperty(react_mentions_esm_SuggestionsOverlay, \"defaultProps\", {\n  suggestions: {},\n  onSelect: function onSelect() {\n    return null;\n  }\n});\n\nvar styled$2 = Object(lib[\"defaultStyle\"])(function (_ref2) {\n  var position = _ref2.position;\n  return _objectSpread$1({\n    position: 'absolute',\n    zIndex: 1,\n    backgroundColor: 'white',\n    marginTop: 14,\n    minWidth: 100\n  }, position, {\n    list: {\n      margin: 0,\n      padding: 0,\n      listStyleType: 'none'\n    }\n  });\n});\nvar SuggestionsOverlay$1 = styled$2(react_mentions_esm_SuggestionsOverlay);\n\nfunction ownKeys$2(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread$2(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys$2(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys$2(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\nvar makeTriggerRegex = function makeTriggerRegex(trigger) {\n  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n  if (trigger instanceof RegExp) {\n    return trigger;\n  } else {\n    var allowSpaceInQuery = options.allowSpaceInQuery;\n    var escapedTriggerChar = escapeRegex(trigger); // first capture group is the part to be replaced on completion\n    // second capture group is for extracting the search query\n\n    return new RegExp(\"(?:^|\\\\s)(\".concat(escapedTriggerChar, \"([^\").concat(allowSpaceInQuery ? '' : '\\\\s').concat(escapedTriggerChar, \"]*))$\"));\n  }\n};\n\nvar getDataProvider = function getDataProvider(data, ignoreAccents) {\n  if (data instanceof Array) {\n    // if data is an array, create a function to query that\n    return function (query, callback) {\n      var results = [];\n\n      for (var i = 0, l = data.length; i < l; ++i) {\n        var display = data[i].display || data[i].id;\n\n        if (getSubstringIndex(display, query, ignoreAccents) >= 0) {\n          results.push(data[i]);\n        }\n      }\n\n      return results;\n    };\n  } else {\n    // expect data to be a query function\n    return data;\n  }\n};\n\nvar KEY = {\n  TAB: 9,\n  RETURN: 13,\n  ESC: 27,\n  UP: 38,\n  DOWN: 40\n};\nvar isComposing = false;\nvar propTypes = {\n  /**\n   * If set to `true` a regular text input element will be rendered\n   * instead of a textarea\n   */\n  singleLine: prop_types_default.a.bool,\n  allowSpaceInQuery: prop_types_default.a.bool,\n  EXPERIMENTAL_cutCopyPaste: prop_types_default.a.bool,\n  allowSuggestionsAboveCursor: prop_types_default.a.bool,\n  ignoreAccents: prop_types_default.a.bool,\n  value: prop_types_default.a.string,\n  onKeyDown: prop_types_default.a.func,\n  onSelect: prop_types_default.a.func,\n  onBlur: prop_types_default.a.func,\n  onChange: prop_types_default.a.func,\n  suggestionsPortalHost: typeof Element === 'undefined' ? prop_types_default.a.any : prop_types_default.a.PropTypes.instanceOf(Element),\n  inputRef: prop_types_default.a.oneOfType([prop_types_default.a.func, prop_types_default.a.shape({\n    current: typeof Element === 'undefined' ? prop_types_default.a.any : prop_types_default.a.instanceOf(Element)\n  })]),\n  children: prop_types_default.a.oneOfType([prop_types_default.a.element, prop_types_default.a.arrayOf(prop_types_default.a.element)]).isRequired\n};\n\nvar react_mentions_esm_MentionsInput = /*#__PURE__*/function (_React$Component) {\n  _inherits(MentionsInput, _React$Component);\n\n  function MentionsInput(_props) {\n    var _this;\n\n    _classCallCheck(this, MentionsInput);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(MentionsInput).call(this, _props));\n\n    _defineProperty(_assertThisInitialized(_this), \"getInputProps\", function (isTextarea) {\n      var _this$props = _this.props,\n          readOnly = _this$props.readOnly,\n          disabled = _this$props.disabled,\n          style = _this$props.style; // pass all props that we don't use through to the input control\n\n      var props = omit(_this.props, 'style', keys(propTypes));\n      return _objectSpread$2({}, props, {}, style('input'), {\n        value: _this.getPlainText()\n      }, !readOnly && !disabled && {\n        onChange: _this.handleChange,\n        onSelect: _this.handleSelect,\n        onKeyDown: _this.handleKeyDown,\n        onBlur: _this.handleBlur,\n        onCompositionStart: _this.handleCompositionStart,\n        onCompositionEnd: _this.handleCompositionEnd,\n        onScroll: _this.updateHighlighterScroll\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"renderControl\", function () {\n      var _this$props2 = _this.props,\n          singleLine = _this$props2.singleLine,\n          style = _this$props2.style;\n\n      var inputProps = _this.getInputProps(!singleLine);\n\n      return react_default.a.createElement(\"div\", style('control'), _this.renderHighlighter(inputProps.style), singleLine ? _this.renderInput(inputProps) : _this.renderTextarea(inputProps));\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"renderInput\", function (props) {\n      return react_default.a.createElement(\"input\", _extends({\n        type: \"text\",\n        ref: _this.setInputRef\n      }, props));\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"renderTextarea\", function (props) {\n      return react_default.a.createElement(\"textarea\", _extends({\n        ref: _this.setInputRef\n      }, props));\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"setInputRef\", function (el) {\n      _this.inputRef = el;\n      var inputRef = _this.props.inputRef;\n\n      if (typeof inputRef === 'function') {\n        inputRef(el);\n      } else if (inputRef) {\n        inputRef.current = el;\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"renderSuggestionsOverlay\", function () {\n      if (!isNumber(_this.state.selectionStart)) {\n        // do not show suggestions when the input does not have the focus\n        return null;\n      }\n\n      var suggestionsNode = react_default.a.createElement(SuggestionsOverlay$1, {\n        style: _this.props.style('suggestions'),\n        position: _this.state.suggestionsPosition,\n        focusIndex: _this.state.focusIndex,\n        scrollFocusedIntoView: _this.state.scrollFocusedIntoView,\n        ref: function ref(el) {\n          _this.suggestionsRef = el;\n        },\n        suggestions: _this.state.suggestions,\n        onSelect: _this.addMention,\n        onMouseDown: _this.handleSuggestionsMouseDown,\n        onMouseEnter: function onMouseEnter(focusIndex) {\n          return _this.setState({\n            focusIndex: focusIndex,\n            scrollFocusedIntoView: false\n          });\n        },\n        isLoading: _this.isLoading(),\n        ignoreAccents: _this.props.ignoreAccents\n      }, _this.props.children);\n\n      if (_this.props.suggestionsPortalHost) {\n        return react_dom_default.a.createPortal(suggestionsNode, _this.props.suggestionsPortalHost);\n      } else {\n        return suggestionsNode;\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"renderHighlighter\", function (inputStyle) {\n      var _this$state = _this.state,\n          selectionStart = _this$state.selectionStart,\n          selectionEnd = _this$state.selectionEnd;\n      var _this$props3 = _this.props,\n          singleLine = _this$props3.singleLine,\n          children = _this$props3.children,\n          value = _this$props3.value,\n          style = _this$props3.style;\n      return react_default.a.createElement(Highlighter$1, {\n        ref: function ref(el) {\n          _this.highlighterRef = el;\n        },\n        style: style('highlighter'),\n        inputStyle: inputStyle,\n        value: value,\n        singleLine: singleLine,\n        selection: {\n          start: selectionStart,\n          end: selectionEnd\n        },\n        onCaretPositionChange: function onCaretPositionChange(position) {\n          return _this.setState({\n            caretPosition: position\n          });\n        }\n      }, children);\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"getPlainText\", function () {\n      return getPlainText(_this.props.value || '', react_mentions_esm_readConfigFromChildren(_this.props.children));\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"executeOnChange\", function (event) {\n      for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n        args[_key - 1] = arguments[_key];\n      }\n\n      if (_this.props.onChange) {\n        var _this$props4;\n\n        return (_this$props4 = _this.props).onChange.apply(_this$props4, [event].concat(args));\n      }\n\n      if (_this.props.valueLink) {\n        var _this$props$valueLink;\n\n        return (_this$props$valueLink = _this.props.valueLink).requestChange.apply(_this$props$valueLink, [event.target.value].concat(args));\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleChange\", function (ev) {\n      // if we are inside iframe, we need to find activeElement within its contentDocument\n      var currentDocument = document.activeElement && document.activeElement.contentDocument || document;\n\n      if (currentDocument.activeElement !== ev.target) {\n        // fix an IE bug (blur from empty input element with placeholder attribute trigger \"input\" event)\n        return;\n      }\n\n      var value = _this.props.value || '';\n      var config = react_mentions_esm_readConfigFromChildren(_this.props.children);\n      var newPlainTextValue = ev.target.value; // Derive the new value to set by applying the local change in the textarea's plain text\n\n      var newValue = applyChangeToValue(value, newPlainTextValue, {\n        selectionStartBefore: _this.state.selectionStart,\n        selectionEndBefore: _this.state.selectionEnd,\n        selectionEndAfter: ev.target.selectionEnd\n      }, config); // In case a mention is deleted, also adjust the new plain text value\n\n      newPlainTextValue = getPlainText(newValue, config); // Save current selection after change to be able to restore caret position after rerendering\n\n      var selectionStart = ev.target.selectionStart;\n      var selectionEnd = ev.target.selectionEnd;\n      var setSelectionAfterMentionChange = false; // Adjust selection range in case a mention will be deleted by the characters outside of the\n      // selection range that are automatically deleted\n\n      var startOfMention = findStartOfMentionInPlainText(value, config, selectionStart);\n\n      if (startOfMention !== undefined && _this.state.selectionEnd > startOfMention) {\n        // only if a deletion has taken place\n        selectionStart = startOfMention;\n        selectionEnd = selectionStart;\n        setSelectionAfterMentionChange = true;\n      }\n\n      _this.setState({\n        selectionStart: selectionStart,\n        selectionEnd: selectionEnd,\n        setSelectionAfterMentionChange: setSelectionAfterMentionChange\n      });\n\n      var mentions = getMentions(newValue, config); // Propagate change\n      // let handleChange = this.getOnChange(this.props) || emptyFunction;\n\n      var eventMock = {\n        target: {\n          value: newValue\n        }\n      }; // this.props.onChange.call(this, eventMock, newValue, newPlainTextValue, mentions);\n\n      _this.executeOnChange(eventMock, newValue, newPlainTextValue, mentions);\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleSelect\", function (ev) {\n      // this function will be called when we hit `enter` and `tab` to select a mention in the suggestion overlay.\n      // due to the current requirement, we want to keep the `@` symbol after a mention is selected. (this requirement is done by using the displayTransform prop).\n      // the requirement makes this check necessary because otherwise, the `@` symbol will make this function think that the mention hasn't been chosen, and the suggestion overlay will show up, \n      // which is not what we want to see(the overlay should disappear after the focused mention is selected).\n      if (_this.selectFocusedCalled) {\n        _this.selectFocusedCalled = false;\n        return;\n      } // keep track of selection range / caret position\n\n\n      _this.setState({\n        selectionStart: ev.target.selectionStart,\n        selectionEnd: ev.target.selectionEnd\n      }); // do nothing while a IME composition session is active\n\n\n      if (isComposing) return; // refresh suggestions queries\n\n      var el = _this.inputRef;\n\n      if (ev.target.selectionStart === ev.target.selectionEnd) {\n        _this.updateMentionsQueries(el.value, ev.target.selectionStart);\n      } else {\n        _this.clearSuggestions();\n      } // sync highlighters scroll position\n\n\n      _this.updateHighlighterScroll();\n\n      _this.props.onSelect(ev);\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleKeyDown\", function (ev) {\n      // do not intercept key events if the suggestions overlay is not shown\n      var suggestionsCount = countSuggestions(_this.state.suggestions);\n      var suggestionsComp = _this.suggestionsRef;\n\n      if (suggestionsCount === 0 || !suggestionsComp) {\n        _this.props.onKeyDown(ev);\n\n        return;\n      }\n\n      if (Object.values(KEY).indexOf(ev.keyCode) >= 0) {\n        ev.preventDefault();\n      }\n\n      switch (ev.keyCode) {\n        case KEY.ESC:\n          {\n            _this.clearSuggestions();\n\n            return;\n          }\n\n        case KEY.DOWN:\n          {\n            _this.shiftFocus(+1);\n\n            return;\n          }\n\n        case KEY.UP:\n          {\n            _this.shiftFocus(-1);\n\n            return;\n          }\n\n        case KEY.RETURN:\n          {\n            _this.selectFocused();\n\n            return;\n          }\n\n        case KEY.TAB:\n          {\n            _this.selectFocused();\n\n            return;\n          }\n\n        default:\n          {\n            return;\n          }\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"shiftFocus\", function (delta) {\n      var suggestionsCount = countSuggestions(_this.state.suggestions);\n\n      _this.setState({\n        focusIndex: (suggestionsCount + _this.state.focusIndex + delta) % suggestionsCount,\n        scrollFocusedIntoView: true\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"selectFocused\", function () {\n      var _this$state2 = _this.state,\n          suggestions = _this$state2.suggestions,\n          focusIndex = _this$state2.focusIndex;\n      var _Object$values$reduce = Object.values(suggestions).reduce(function (acc, _ref) {\n        var results = _ref.results,\n            queryInfo = _ref.queryInfo;\n        return [].concat(_toConsumableArray(acc), _toConsumableArray(results.map(function (result) {\n          return {\n            result: result,\n            queryInfo: queryInfo\n          };\n        })));\n      }, [])[focusIndex],\n          result = _Object$values$reduce.result,\n          queryInfo = _Object$values$reduce.queryInfo;\n      _this.selectFocusedCalled = true;\n\n      _this.addMention(result, queryInfo);\n\n      _this.setState({\n        focusIndex: 0\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleBlur\", function (ev) {\n      var clickedSuggestion = _this._suggestionsMouseDown;\n      _this._suggestionsMouseDown = false; // only reset selection if the mousedown happened on an element\n      // other than the suggestions overlay\n\n      if (!clickedSuggestion) {\n        _this.setState({\n          selectionStart: null,\n          selectionEnd: null\n        });\n      }\n\n      window.setTimeout(function () {\n        _this.updateHighlighterScroll();\n      }, 1);\n\n      _this.props.onBlur(ev, clickedSuggestion);\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleSuggestionsMouseDown\", function (ev) {\n      // currently buttons in WVUI will be unmounted when the textarea blurs out,\n      // which we don't want to see when clicking on a mention suggest\n      // so we call preventDefault to prevent the textarea from blurring out\n      ev.preventDefault();\n      _this.selectFocusedCalled = true;\n      _this._suggestionsMouseDown = true;\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"updateSuggestionsPosition\", function () {\n      var caretPosition = _this.state.caretPosition;\n      var _this$props5 = _this.props,\n          suggestionsPortalHost = _this$props5.suggestionsPortalHost,\n          allowSuggestionsAboveCursor = _this$props5.allowSuggestionsAboveCursor;\n\n      if (!caretPosition || !_this.suggestionsRef) {\n        return;\n      }\n\n      var suggestions = react_dom_default.a.findDOMNode(_this.suggestionsRef);\n      var highlighter = react_dom_default.a.findDOMNode(_this.highlighterRef); // first get viewport-relative position (highlighter is offsetParent of caret):\n\n      var caretOffsetParentRect = highlighter.getBoundingClientRect();\n      var caretHeight = getComputedStyleLengthProp(highlighter, 'font-size');\n      var viewportRelative = {\n        left: caretOffsetParentRect.left + caretPosition.left,\n        top: caretOffsetParentRect.top + caretPosition.top + caretHeight\n      };\n      var viewportHeight = Math.max(document.documentElement.clientHeight, window.innerHeight || 0);\n\n      if (!suggestions) {\n        return;\n      }\n\n      var position = {}; // if suggestions menu is in a portal, update position to be releative to its portal node\n\n      if (suggestionsPortalHost) {\n        position.position = 'fixed';\n        var left = viewportRelative.left;\n        var top = viewportRelative.top; // absolute/fixed positioned elements are positioned according to their entire box including margins; so we remove margins here:\n\n        left -= getComputedStyleLengthProp(suggestions, 'margin-left');\n        top -= getComputedStyleLengthProp(suggestions, 'margin-top'); // take into account highlighter/textinput scrolling:\n\n        left -= highlighter.scrollLeft;\n        top -= highlighter.scrollTop; // guard for mentions suggestions list clipped by right edge of window\n\n        var viewportWidth = Math.max(document.documentElement.clientWidth, window.innerWidth || 0);\n\n        if (left + suggestions.offsetWidth > viewportWidth) {\n          position.left = Math.max(0, viewportWidth - suggestions.offsetWidth);\n        } else {\n          position.left = left;\n        } // guard for mentions suggestions list clipped by bottom edge of window if allowSuggestionsAboveCursor set to true.\n        // Move the list up above the caret if it's getting cut off by the bottom of the window, provided that the list height\n        // is small enough to NOT cover up the caret\n\n\n        if (allowSuggestionsAboveCursor && top + suggestions.offsetHeight > viewportHeight && suggestions.offsetHeight < top - caretHeight) {\n          position.top = Math.max(0, top - suggestions.offsetHeight - caretHeight);\n        } else {\n          position.top = top;\n        }\n      } else {\n        var _left = caretPosition.left - highlighter.scrollLeft;\n\n        var _top = caretPosition.top - highlighter.scrollTop; // guard for mentions suggestions list clipped by right edge of window\n\n\n        if (_left + suggestions.offsetWidth > _this.containerRef.offsetWidth) {\n          position.right = 0;\n        } else {\n          position.left = _left;\n        } // guard for mentions suggestions list clipped by bottom edge of window if allowSuggestionsAboveCursor set to true.\n        // move the list up above the caret if it's getting cut off by the bottom of the window, provided that the list height\n        // is small enough to NOT cover up the caret\n\n\n        if (allowSuggestionsAboveCursor && viewportRelative.top - highlighter.scrollTop + suggestions.offsetHeight > viewportHeight && suggestions.offsetHeight < caretOffsetParentRect.top - caretHeight - highlighter.scrollTop) {\n          position.top = _top - suggestions.offsetHeight - caretHeight;\n        } else {\n          position.top = _top;\n        }\n      }\n\n      if (isObjectEqual(position, _this.state.suggestionsPosition)) {\n        return;\n      }\n\n      _this.setState({\n        suggestionsPosition: position\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"updateHighlighterScroll\", function () {\n      if (!_this.inputRef || !_this.highlighterRef) {\n        // since the invocation of this function is deferred,\n        // the whole component may have been unmounted in the meanwhile\n        return;\n      }\n\n      var input = _this.inputRef;\n      var highlighter = react_dom_default.a.findDOMNode(_this.highlighterRef);\n      highlighter.scrollLeft = input.scrollLeft;\n      highlighter.scrollTop = input.scrollTop;\n      highlighter.height = input.height;\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleCompositionStart\", function () {\n      isComposing = true;\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleCompositionEnd\", function () {\n      isComposing = false;\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"setSelection\", function (selectionStart, selectionEnd) {\n      if (selectionStart === null || selectionEnd === null) return;\n      var el = _this.inputRef;\n\n      if (el.setSelectionRange) {\n        el.setSelectionRange(selectionStart, selectionEnd);\n      } else if (el.createTextRange) {\n        var range = el.createTextRange();\n        range.collapse(true);\n        range.moveEnd('character', selectionEnd);\n        range.moveStart('character', selectionStart);\n        range.select();\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"updateMentionsQueries\", function (plainTextValue, caretPosition) {\n      // Invalidate previous queries. Async results for previous queries will be neglected.\n      _this._queryId++;\n      _this.suggestions = {};\n\n      _this.setState({\n        suggestions: {}\n      });\n\n      var value = _this.props.value || '';\n      var children = _this.props.children;\n      var config = react_mentions_esm_readConfigFromChildren(children);\n      var positionInValue = mapPlainTextIndex(value, config, caretPosition, 'NULL'); // If caret is inside of mention, do not query\n\n      if (positionInValue === null) {\n        return;\n      } // Extract substring in between the end of the previous mention and the caret\n\n\n      var substringStartIndex = getEndOfLastMention(value.substring(0, positionInValue), config);\n      var substring = plainTextValue.substring(substringStartIndex, caretPosition); // Check if suggestions have to be shown:\n      // Match the trigger patterns of all Mention children on the extracted substring\n\n      react_default.a.Children.forEach(children, function (child, childIndex) {\n        if (!child) {\n          return;\n        }\n\n        var regex = makeTriggerRegex(child.props.trigger, _this.props);\n        var match = substring.match(regex);\n\n        if (match) {\n          var querySequenceStart = substringStartIndex + substring.indexOf(match[1], match.index);\n\n          _this.queryData(match[2], childIndex, querySequenceStart, querySequenceStart + match[1].length, plainTextValue);\n        }\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"clearSuggestions\", function () {\n      // Invalidate previous queries. Async results for previous queries will be neglected.\n      _this._queryId++;\n      _this.suggestions = {};\n\n      _this.setState({\n        suggestions: {},\n        focusIndex: 0\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"queryData\", function (query, childIndex, querySequenceStart, querySequenceEnd, plainTextValue) {\n      var _this$props6 = _this.props,\n          children = _this$props6.children,\n          ignoreAccents = _this$props6.ignoreAccents;\n      var mentionChild = react[\"Children\"].toArray(children)[childIndex];\n      var provideData = getDataProvider(mentionChild.props.data, ignoreAccents);\n      var syncResult = provideData(query, _this.updateSuggestions.bind(null, _this._queryId, childIndex, query, querySequenceStart, querySequenceEnd, plainTextValue));\n\n      if (syncResult instanceof Array) {\n        _this.updateSuggestions(_this._queryId, childIndex, query, querySequenceStart, querySequenceEnd, plainTextValue, syncResult);\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"updateSuggestions\", function (queryId, childIndex, query, querySequenceStart, querySequenceEnd, plainTextValue, results) {\n      // neglect async results from previous queries\n      if (queryId !== _this._queryId) return; // save in property so that multiple sync state updates from different mentions sources\n      // won't overwrite each other\n\n      _this.suggestions = _objectSpread$2({}, _this.suggestions, _defineProperty({}, childIndex, {\n        queryInfo: {\n          childIndex: childIndex,\n          query: query,\n          querySequenceStart: querySequenceStart,\n          querySequenceEnd: querySequenceEnd,\n          plainTextValue: plainTextValue\n        },\n        results: results\n      }));\n      var focusIndex = _this.state.focusIndex;\n      var suggestionsCount = countSuggestions(_this.suggestions);\n\n      _this.setState({\n        suggestions: _this.suggestions,\n        focusIndex: focusIndex >= suggestionsCount ? Math.max(suggestionsCount - 1, 0) : focusIndex\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"addMention\", function (_ref2, _ref3) {\n      var id = _ref2.id,\n          display = _ref2.display;\n      var childIndex = _ref3.childIndex,\n          querySequenceStart = _ref3.querySequenceStart,\n          querySequenceEnd = _ref3.querySequenceEnd,\n          plainTextValue = _ref3.plainTextValue;\n      // Insert mention in the marked up value at the correct position\n      var value = _this.props.value || '';\n      var config = react_mentions_esm_readConfigFromChildren(_this.props.children);\n      var mentionsChild = react[\"Children\"].toArray(_this.props.children)[childIndex];\n      var _mentionsChild$props = mentionsChild.props,\n          markup = _mentionsChild$props.markup,\n          displayTransform = _mentionsChild$props.displayTransform,\n          appendSpaceOnAdd = _mentionsChild$props.appendSpaceOnAdd,\n          onAdd = _mentionsChild$props.onAdd;\n      var start = mapPlainTextIndex(value, config, querySequenceStart, 'START');\n      var end = start + querySequenceEnd - querySequenceStart;\n      var insert = makeMentionsMarkup(markup, id, display);\n\n      if (appendSpaceOnAdd) {\n        insert += ' ';\n      }\n\n      var newValue = spliceString(value, start, end, insert); // Refocus input and set caret position to end of mention\n\n      _this.inputRef.focus();\n\n      var displayValue = displayTransform(id, display);\n\n      if (appendSpaceOnAdd) {\n        displayValue += ' ';\n      }\n\n      var newCaretPosition = querySequenceStart + displayValue.length;\n\n      _this.setState({\n        selectionStart: newCaretPosition,\n        selectionEnd: newCaretPosition,\n        setSelectionAfterMentionChange: true\n      }); // Propagate change\n\n\n      var eventMock = {\n        target: {\n          value: newValue\n        }\n      };\n      var mentions = getMentions(newValue, config);\n      var newPlainTextValue = spliceString(plainTextValue, querySequenceStart, querySequenceEnd, displayValue);\n\n      _this.executeOnChange(eventMock, newValue, newPlainTextValue, mentions);\n\n      if (onAdd) {\n        onAdd(id, display);\n      } // Make sure the suggestions overlay is closed\n\n\n      _this.clearSuggestions();\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"isLoading\", function () {\n      var isLoading = false;\n      react_default.a.Children.forEach(_this.props.children, function (child) {\n        isLoading = isLoading || child && child.props.isLoading;\n      });\n      return isLoading;\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_queryId\", 0);\n\n    _this.suggestions = {};\n    _this.handleCopy = _this.handleCopy.bind(_assertThisInitialized(_this));\n    _this.handleCut = _this.handleCut.bind(_assertThisInitialized(_this));\n    _this.handlePaste = _this.handlePaste.bind(_assertThisInitialized(_this)); // a boolean variable that indicates whether this.selectFocused is just called\n\n    _this.selectFocusedCalled = false;\n    _this.state = {\n      focusIndex: 0,\n      selectionStart: null,\n      selectionEnd: null,\n      suggestions: {},\n      caretPosition: null,\n      suggestionsPosition: null\n    };\n    return _this;\n  }\n\n  _createClass(MentionsInput, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var EXPERIMENTAL_cutCopyPaste = this.props.EXPERIMENTAL_cutCopyPaste;\n\n      if (EXPERIMENTAL_cutCopyPaste) {\n        document.addEventListener('copy', this.handleCopy);\n        document.addEventListener('cut', this.handleCut);\n        document.addEventListener('paste', this.handlePaste);\n      }\n\n      this.updateSuggestionsPosition();\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps, prevState) {\n      // Update position of suggestions unless this componentDidUpdate was\n      // triggered by an update to suggestionsPosition.\n      if (prevState.suggestionsPosition === this.state.suggestionsPosition) {\n        this.updateSuggestionsPosition();\n      } // maintain selection in case a mention is added/removed causing\n      // the cursor to jump to the end\n\n\n      if (this.state.setSelectionAfterMentionChange) {\n        this.setState({\n          setSelectionAfterMentionChange: false\n        });\n        this.setSelection(this.state.selectionStart, this.state.selectionEnd);\n      }\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      var EXPERIMENTAL_cutCopyPaste = this.props.EXPERIMENTAL_cutCopyPaste;\n\n      if (EXPERIMENTAL_cutCopyPaste) {\n        document.removeEventListener('copy', this.handleCopy);\n        document.removeEventListener('cut', this.handleCut);\n        document.removeEventListener('paste', this.handlePaste);\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return react_default.a.createElement(\"div\", _extends({\n        ref: function ref(el) {\n          _this2.containerRef = el;\n        }\n      }, this.props.style), this.renderControl(), this.renderSuggestionsOverlay());\n    }\n  }, {\n    key: \"handlePaste\",\n    value: function handlePaste(event) {\n      if (event.target !== this.inputRef) {\n        return;\n      }\n\n      if (!this.supportsClipboardActions(event)) {\n        return;\n      }\n\n      event.preventDefault();\n      var _this$state3 = this.state,\n          selectionStart = _this$state3.selectionStart,\n          selectionEnd = _this$state3.selectionEnd;\n      var _this$props7 = this.props,\n          value = _this$props7.value,\n          children = _this$props7.children;\n      var config = react_mentions_esm_readConfigFromChildren(children);\n      var markupStartIndex = mapPlainTextIndex(value, config, selectionStart, 'START');\n      var markupEndIndex = mapPlainTextIndex(value, config, selectionEnd, 'END');\n      var pastedMentions = event.clipboardData.getData('text/react-mentions');\n      var pastedData = event.clipboardData.getData('text/plain');\n      var newValue = spliceString(value, markupStartIndex, markupEndIndex, pastedMentions || pastedData).replace(/\\r/g, '');\n      var newPlainTextValue = getPlainText(newValue, config);\n      var eventMock = {\n        target: _objectSpread$2({}, event.target, {\n          value: newValue\n        })\n      };\n      this.executeOnChange(eventMock, newValue, newPlainTextValue, getMentions(newValue, config));\n    }\n  }, {\n    key: \"saveSelectionToClipboard\",\n    value: function saveSelectionToClipboard(event) {\n      var _this$state4 = this.state,\n          selectionStart = _this$state4.selectionStart,\n          selectionEnd = _this$state4.selectionEnd;\n      var _this$props8 = this.props,\n          children = _this$props8.children,\n          value = _this$props8.value;\n      var config = react_mentions_esm_readConfigFromChildren(children);\n      var markupStartIndex = mapPlainTextIndex(value, config, selectionStart, 'START');\n      var markupEndIndex = mapPlainTextIndex(value, config, selectionEnd, 'END');\n      event.clipboardData.setData('text/plain', event.target.value.slice(selectionStart, selectionEnd));\n      event.clipboardData.setData('text/react-mentions', value.slice(markupStartIndex, markupEndIndex));\n    }\n  }, {\n    key: \"supportsClipboardActions\",\n    value: function supportsClipboardActions(event) {\n      return !!event.clipboardData;\n    }\n  }, {\n    key: \"handleCopy\",\n    value: function handleCopy(event) {\n      if (event.target !== this.inputRef) {\n        return;\n      }\n\n      if (!this.supportsClipboardActions(event)) {\n        return;\n      }\n\n      event.preventDefault();\n      this.saveSelectionToClipboard(event);\n    }\n  }, {\n    key: \"handleCut\",\n    value: function handleCut(event) {\n      if (event.target !== this.inputRef) {\n        return;\n      }\n\n      if (!this.supportsClipboardActions(event)) {\n        return;\n      }\n\n      event.preventDefault();\n      this.saveSelectionToClipboard(event);\n      var _this$state5 = this.state,\n          selectionStart = _this$state5.selectionStart,\n          selectionEnd = _this$state5.selectionEnd;\n      var _this$props9 = this.props,\n          children = _this$props9.children,\n          value = _this$props9.value;\n      var config = react_mentions_esm_readConfigFromChildren(children);\n      var markupStartIndex = mapPlainTextIndex(value, config, selectionStart, 'START');\n      var markupEndIndex = mapPlainTextIndex(value, config, selectionEnd, 'END');\n      var newValue = [value.slice(0, markupStartIndex), value.slice(markupEndIndex)].join('');\n      var newPlainTextValue = getPlainText(newValue, config);\n      var eventMock = {\n        target: _objectSpread$2({}, event.target, {\n          value: newPlainTextValue\n        })\n      };\n      this.executeOnChange(eventMock, newValue, newPlainTextValue, getMentions(value, config));\n    } // Handle input element's change event\n\n  }]);\n\n  return MentionsInput;\n}(react_default.a.Component);\n/**\n * Returns the computed length property value for the provided element.\n * Note: According to spec and testing, can count on length values coming back in pixels. See https://developer.mozilla.org/en-US/docs/Web/CSS/used_value#Difference_from_computed_value\n */\n\n\n_defineProperty(react_mentions_esm_MentionsInput, \"propTypes\", propTypes);\n\n_defineProperty(react_mentions_esm_MentionsInput, \"defaultProps\", {\n  ignoreAccents: false,\n  singleLine: false,\n  allowSuggestionsAboveCursor: false,\n  onKeyDown: function onKeyDown() {\n    return null;\n  },\n  onSelect: function onSelect() {\n    return null;\n  },\n  onBlur: function onBlur() {\n    return null;\n  }\n});\n\nvar getComputedStyleLengthProp = function getComputedStyleLengthProp(forElement, propertyName) {\n  var length = parseFloat(window.getComputedStyle(forElement, null).getPropertyValue(propertyName));\n  return isFinite(length) ? length : 0;\n};\n\nvar isMobileSafari = typeof navigator !== 'undefined' && /iPhone|iPad|iPod/i.test(navigator.userAgent);\nvar styled$3 = Object(lib[\"defaultStyle\"])({\n  position: 'relative',\n  overflowY: 'visible',\n  input: {\n    display: 'block',\n    position: 'absolute',\n    top: 0,\n    left: 0,\n    boxSizing: 'border-box',\n    backgroundColor: 'transparent',\n    width: 'inherit',\n    fontFamily: 'inherit',\n    fontSize: 'inherit',\n    letterSpacing: 'inherit'\n  },\n  '&multiLine': {\n    input: _objectSpread$2({\n      width: '100%',\n      height: '100%',\n      bottom: 0,\n      overflow: 'hidden',\n      resize: 'none'\n    }, isMobileSafari ? {\n      marginTop: 1,\n      marginLeft: -3\n    } : null)\n  }\n}, function (_ref4) {\n  var singleLine = _ref4.singleLine;\n  return {\n    '&singleLine': singleLine,\n    '&multiLine': !singleLine\n  };\n});\nvar MentionsInput$1 = styled$3(react_mentions_esm_MentionsInput);\n\nvar styled$4 = Object(lib[\"defaultStyle\"])({\n  fontWeight: 'inherit'\n});\nvar Mention = styled$4(function (_ref) {\n  var display = _ref.display,\n      style = _ref.style;\n  return react_default.a.createElement(\"strong\", style, display);\n});\nMention.propTypes = {\n  /**\n   * Called when a new mention is added in the input\n   *\n   * Example:\n   *\n   * ```js\n   * function(id, display) {\n   *   console.log(\"user \" + display + \" was mentioned!\");\n   * }\n   * ```\n   */\n  onAdd: prop_types_default.a.func,\n  onRemove: prop_types_default.a.func,\n  renderSuggestion: prop_types_default.a.func,\n  trigger: prop_types_default.a.oneOfType([prop_types_default.a.string, prop_types_default.a.instanceOf(RegExp)]),\n  markup: prop_types_default.a.string,\n  displayTransform: prop_types_default.a.func,\n\n  /**\n   * If set to `true` spaces will not interrupt matching suggestions\n   */\n  allowSpaceInQuery: prop_types_default.a.bool,\n  isLoading: prop_types_default.a.bool\n};\nMention.defaultProps = {\n  trigger: '@',\n  markup: '@[__display__](__id__)',\n  displayTransform: function displayTransform(id, display) {\n    return display || id;\n  },\n  onAdd: function onAdd() {\n    return null;\n  },\n  onRemove: function onRemove() {\n    return null;\n  },\n  renderSuggestion: null,\n  isLoading: false,\n  appendSpaceOnAdd: false\n};\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNjA0LmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL3JlYWN0LW1lbnRpb25zL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9hcnJheVdpdGhvdXRIb2xlcy5qcz9iODcwIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9yZWFjdC1tZW50aW9ucy9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vaXRlcmFibGVUb0FycmF5LmpzP2M2ODEiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL3JlYWN0LW1lbnRpb25zL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9ub25JdGVyYWJsZVNwcmVhZC5qcz8wMzUzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9yZWFjdC1tZW50aW9ucy9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vdG9Db25zdW1hYmxlQXJyYXkuanM/ZTcwOSIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvcmVhY3QtbWVudGlvbnMvbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL2V4dGVuZHMuanM/MTg5ZCIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvcmVhY3QtbWVudGlvbnMvbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL2NsYXNzQ2FsbENoZWNrLmpzP2VjM2MiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL3JlYWN0LW1lbnRpb25zL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9jcmVhdGVDbGFzcy5qcz8wMzNkIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9yZWFjdC1tZW50aW9ucy9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vdHlwZW9mLmpzP2E4YzEiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL3JlYWN0LW1lbnRpb25zL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9hc3NlcnRUaGlzSW5pdGlhbGl6ZWQuanM/ZmRiOSIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvcmVhY3QtbWVudGlvbnMvbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL3Bvc3NpYmxlQ29uc3RydWN0b3JSZXR1cm4uanM/OTFmZiIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvcmVhY3QtbWVudGlvbnMvbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL2dldFByb3RvdHlwZU9mLmpzPzg5N2YiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL3JlYWN0LW1lbnRpb25zL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9zZXRQcm90b3R5cGVPZi5qcz85Mjc4Iiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9yZWFjdC1tZW50aW9ucy9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vaW5oZXJpdHMuanM/MmJiZiIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvcmVhY3QtbWVudGlvbnMvbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL2RlZmluZVByb3BlcnR5LmpzP2QwZDEiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL3JlYWN0LW1lbnRpb25zL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9hcnJheVdpdGhIb2xlcy5qcz84MjVkIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9yZWFjdC1tZW50aW9ucy9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vaXRlcmFibGVUb0FycmF5TGltaXQuanM/NDRkMiIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvcmVhY3QtbWVudGlvbnMvbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL25vbkl0ZXJhYmxlUmVzdC5qcz9mMGVmIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9yZWFjdC1tZW50aW9ucy9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vc2xpY2VkVG9BcnJheS5qcz85YmIwIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9yZWFjdC1tZW50aW9ucy9kaXN0L3JlYWN0LW1lbnRpb25zLmVzbS5qcz8zMmE2Il0sInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIF9hcnJheVdpdGhvdXRIb2xlcyhhcnIpIHtcbiAgaWYgKEFycmF5LmlzQXJyYXkoYXJyKSkge1xuICAgIGZvciAodmFyIGkgPSAwLCBhcnIyID0gbmV3IEFycmF5KGFyci5sZW5ndGgpOyBpIDwgYXJyLmxlbmd0aDsgaSsrKSB7XG4gICAgICBhcnIyW2ldID0gYXJyW2ldO1xuICAgIH1cblxuICAgIHJldHVybiBhcnIyO1xuICB9XG59IiwiZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gX2l0ZXJhYmxlVG9BcnJheShpdGVyKSB7XG4gIGlmIChTeW1ib2wuaXRlcmF0b3IgaW4gT2JqZWN0KGl0ZXIpIHx8IE9iamVjdC5wcm90b3R5cGUudG9TdHJpbmcuY2FsbChpdGVyKSA9PT0gXCJbb2JqZWN0IEFyZ3VtZW50c11cIikgcmV0dXJuIEFycmF5LmZyb20oaXRlcik7XG59IiwiZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gX25vbkl0ZXJhYmxlU3ByZWFkKCkge1xuICB0aHJvdyBuZXcgVHlwZUVycm9yKFwiSW52YWxpZCBhdHRlbXB0IHRvIHNwcmVhZCBub24taXRlcmFibGUgaW5zdGFuY2VcIik7XG59IiwiaW1wb3J0IGFycmF5V2l0aG91dEhvbGVzIGZyb20gXCIuL2FycmF5V2l0aG91dEhvbGVzXCI7XG5pbXBvcnQgaXRlcmFibGVUb0FycmF5IGZyb20gXCIuL2l0ZXJhYmxlVG9BcnJheVwiO1xuaW1wb3J0IG5vbkl0ZXJhYmxlU3ByZWFkIGZyb20gXCIuL25vbkl0ZXJhYmxlU3ByZWFkXCI7XG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBfdG9Db25zdW1hYmxlQXJyYXkoYXJyKSB7XG4gIHJldHVybiBhcnJheVdpdGhvdXRIb2xlcyhhcnIpIHx8IGl0ZXJhYmxlVG9BcnJheShhcnIpIHx8IG5vbkl0ZXJhYmxlU3ByZWFkKCk7XG59IiwiZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gX2V4dGVuZHMoKSB7XG4gIF9leHRlbmRzID0gT2JqZWN0LmFzc2lnbiB8fCBmdW5jdGlvbiAodGFyZ2V0KSB7XG4gICAgZm9yICh2YXIgaSA9IDE7IGkgPCBhcmd1bWVudHMubGVuZ3RoOyBpKyspIHtcbiAgICAgIHZhciBzb3VyY2UgPSBhcmd1bWVudHNbaV07XG5cbiAgICAgIGZvciAodmFyIGtleSBpbiBzb3VyY2UpIHtcbiAgICAgICAgaWYgKE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChzb3VyY2UsIGtleSkpIHtcbiAgICAgICAgICB0YXJnZXRba2V5XSA9IHNvdXJjZVtrZXldO1xuICAgICAgICB9XG4gICAgICB9XG4gICAgfVxuXG4gICAgcmV0dXJuIHRhcmdldDtcbiAgfTtcblxuICByZXR1cm4gX2V4dGVuZHMuYXBwbHkodGhpcywgYXJndW1lbnRzKTtcbn0iLCJleHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBfY2xhc3NDYWxsQ2hlY2soaW5zdGFuY2UsIENvbnN0cnVjdG9yKSB7XG4gIGlmICghKGluc3RhbmNlIGluc3RhbmNlb2YgQ29uc3RydWN0b3IpKSB7XG4gICAgdGhyb3cgbmV3IFR5cGVFcnJvcihcIkNhbm5vdCBjYWxsIGEgY2xhc3MgYXMgYSBmdW5jdGlvblwiKTtcbiAgfVxufSIsImZ1bmN0aW9uIF9kZWZpbmVQcm9wZXJ0aWVzKHRhcmdldCwgcHJvcHMpIHtcbiAgZm9yICh2YXIgaSA9IDA7IGkgPCBwcm9wcy5sZW5ndGg7IGkrKykge1xuICAgIHZhciBkZXNjcmlwdG9yID0gcHJvcHNbaV07XG4gICAgZGVzY3JpcHRvci5lbnVtZXJhYmxlID0gZGVzY3JpcHRvci5lbnVtZXJhYmxlIHx8IGZhbHNlO1xuICAgIGRlc2NyaXB0b3IuY29uZmlndXJhYmxlID0gdHJ1ZTtcbiAgICBpZiAoXCJ2YWx1ZVwiIGluIGRlc2NyaXB0b3IpIGRlc2NyaXB0b3Iud3JpdGFibGUgPSB0cnVlO1xuICAgIE9iamVjdC5kZWZpbmVQcm9wZXJ0eSh0YXJnZXQsIGRlc2NyaXB0b3Iua2V5LCBkZXNjcmlwdG9yKTtcbiAgfVxufVxuXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBfY3JlYXRlQ2xhc3MoQ29uc3RydWN0b3IsIHByb3RvUHJvcHMsIHN0YXRpY1Byb3BzKSB7XG4gIGlmIChwcm90b1Byb3BzKSBfZGVmaW5lUHJvcGVydGllcyhDb25zdHJ1Y3Rvci5wcm90b3R5cGUsIHByb3RvUHJvcHMpO1xuICBpZiAoc3RhdGljUHJvcHMpIF9kZWZpbmVQcm9wZXJ0aWVzKENvbnN0cnVjdG9yLCBzdGF0aWNQcm9wcyk7XG4gIHJldHVybiBDb25zdHJ1Y3Rvcjtcbn0iLCJmdW5jdGlvbiBfdHlwZW9mMihvYmopIHsgaWYgKHR5cGVvZiBTeW1ib2wgPT09IFwiZnVuY3Rpb25cIiAmJiB0eXBlb2YgU3ltYm9sLml0ZXJhdG9yID09PSBcInN5bWJvbFwiKSB7IF90eXBlb2YyID0gZnVuY3Rpb24gX3R5cGVvZjIob2JqKSB7IHJldHVybiB0eXBlb2Ygb2JqOyB9OyB9IGVsc2UgeyBfdHlwZW9mMiA9IGZ1bmN0aW9uIF90eXBlb2YyKG9iaikgeyByZXR1cm4gb2JqICYmIHR5cGVvZiBTeW1ib2wgPT09IFwiZnVuY3Rpb25cIiAmJiBvYmouY29uc3RydWN0b3IgPT09IFN5bWJvbCAmJiBvYmogIT09IFN5bWJvbC5wcm90b3R5cGUgPyBcInN5bWJvbFwiIDogdHlwZW9mIG9iajsgfTsgfSByZXR1cm4gX3R5cGVvZjIob2JqKTsgfVxuXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBfdHlwZW9mKG9iaikge1xuICBpZiAodHlwZW9mIFN5bWJvbCA9PT0gXCJmdW5jdGlvblwiICYmIF90eXBlb2YyKFN5bWJvbC5pdGVyYXRvcikgPT09IFwic3ltYm9sXCIpIHtcbiAgICBfdHlwZW9mID0gZnVuY3Rpb24gX3R5cGVvZihvYmopIHtcbiAgICAgIHJldHVybiBfdHlwZW9mMihvYmopO1xuICAgIH07XG4gIH0gZWxzZSB7XG4gICAgX3R5cGVvZiA9IGZ1bmN0aW9uIF90eXBlb2Yob2JqKSB7XG4gICAgICByZXR1cm4gb2JqICYmIHR5cGVvZiBTeW1ib2wgPT09IFwiZnVuY3Rpb25cIiAmJiBvYmouY29uc3RydWN0b3IgPT09IFN5bWJvbCAmJiBvYmogIT09IFN5bWJvbC5wcm90b3R5cGUgPyBcInN5bWJvbFwiIDogX3R5cGVvZjIob2JqKTtcbiAgICB9O1xuICB9XG5cbiAgcmV0dXJuIF90eXBlb2Yob2JqKTtcbn0iLCJleHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBfYXNzZXJ0VGhpc0luaXRpYWxpemVkKHNlbGYpIHtcbiAgaWYgKHNlbGYgPT09IHZvaWQgMCkge1xuICAgIHRocm93IG5ldyBSZWZlcmVuY2VFcnJvcihcInRoaXMgaGFzbid0IGJlZW4gaW5pdGlhbGlzZWQgLSBzdXBlcigpIGhhc24ndCBiZWVuIGNhbGxlZFwiKTtcbiAgfVxuXG4gIHJldHVybiBzZWxmO1xufSIsImltcG9ydCBfdHlwZW9mIGZyb20gXCIuLi8uLi9oZWxwZXJzL2VzbS90eXBlb2ZcIjtcbmltcG9ydCBhc3NlcnRUaGlzSW5pdGlhbGl6ZWQgZnJvbSBcIi4vYXNzZXJ0VGhpc0luaXRpYWxpemVkXCI7XG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBfcG9zc2libGVDb25zdHJ1Y3RvclJldHVybihzZWxmLCBjYWxsKSB7XG4gIGlmIChjYWxsICYmIChfdHlwZW9mKGNhbGwpID09PSBcIm9iamVjdFwiIHx8IHR5cGVvZiBjYWxsID09PSBcImZ1bmN0aW9uXCIpKSB7XG4gICAgcmV0dXJuIGNhbGw7XG4gIH1cblxuICByZXR1cm4gYXNzZXJ0VGhpc0luaXRpYWxpemVkKHNlbGYpO1xufSIsImV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIF9nZXRQcm90b3R5cGVPZihvKSB7XG4gIF9nZXRQcm90b3R5cGVPZiA9IE9iamVjdC5zZXRQcm90b3R5cGVPZiA/IE9iamVjdC5nZXRQcm90b3R5cGVPZiA6IGZ1bmN0aW9uIF9nZXRQcm90b3R5cGVPZihvKSB7XG4gICAgcmV0dXJuIG8uX19wcm90b19fIHx8IE9iamVjdC5nZXRQcm90b3R5cGVPZihvKTtcbiAgfTtcbiAgcmV0dXJuIF9nZXRQcm90b3R5cGVPZihvKTtcbn0iLCJleHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBfc2V0UHJvdG90eXBlT2YobywgcCkge1xuICBfc2V0UHJvdG90eXBlT2YgPSBPYmplY3Quc2V0UHJvdG90eXBlT2YgfHwgZnVuY3Rpb24gX3NldFByb3RvdHlwZU9mKG8sIHApIHtcbiAgICBvLl9fcHJvdG9fXyA9IHA7XG4gICAgcmV0dXJuIG87XG4gIH07XG5cbiAgcmV0dXJuIF9zZXRQcm90b3R5cGVPZihvLCBwKTtcbn0iLCJpbXBvcnQgc2V0UHJvdG90eXBlT2YgZnJvbSBcIi4vc2V0UHJvdG90eXBlT2ZcIjtcbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIF9pbmhlcml0cyhzdWJDbGFzcywgc3VwZXJDbGFzcykge1xuICBpZiAodHlwZW9mIHN1cGVyQ2xhc3MgIT09IFwiZnVuY3Rpb25cIiAmJiBzdXBlckNsYXNzICE9PSBudWxsKSB7XG4gICAgdGhyb3cgbmV3IFR5cGVFcnJvcihcIlN1cGVyIGV4cHJlc3Npb24gbXVzdCBlaXRoZXIgYmUgbnVsbCBvciBhIGZ1bmN0aW9uXCIpO1xuICB9XG5cbiAgc3ViQ2xhc3MucHJvdG90eXBlID0gT2JqZWN0LmNyZWF0ZShzdXBlckNsYXNzICYmIHN1cGVyQ2xhc3MucHJvdG90eXBlLCB7XG4gICAgY29uc3RydWN0b3I6IHtcbiAgICAgIHZhbHVlOiBzdWJDbGFzcyxcbiAgICAgIHdyaXRhYmxlOiB0cnVlLFxuICAgICAgY29uZmlndXJhYmxlOiB0cnVlXG4gICAgfVxuICB9KTtcbiAgaWYgKHN1cGVyQ2xhc3MpIHNldFByb3RvdHlwZU9mKHN1YkNsYXNzLCBzdXBlckNsYXNzKTtcbn0iLCJleHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBfZGVmaW5lUHJvcGVydHkob2JqLCBrZXksIHZhbHVlKSB7XG4gIGlmIChrZXkgaW4gb2JqKSB7XG4gICAgT2JqZWN0LmRlZmluZVByb3BlcnR5KG9iaiwga2V5LCB7XG4gICAgICB2YWx1ZTogdmFsdWUsXG4gICAgICBlbnVtZXJhYmxlOiB0cnVlLFxuICAgICAgY29uZmlndXJhYmxlOiB0cnVlLFxuICAgICAgd3JpdGFibGU6IHRydWVcbiAgICB9KTtcbiAgfSBlbHNlIHtcbiAgICBvYmpba2V5XSA9IHZhbHVlO1xuICB9XG5cbiAgcmV0dXJuIG9iajtcbn0iLCJleHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBfYXJyYXlXaXRoSG9sZXMoYXJyKSB7XG4gIGlmIChBcnJheS5pc0FycmF5KGFycikpIHJldHVybiBhcnI7XG59IiwiZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gX2l0ZXJhYmxlVG9BcnJheUxpbWl0KGFyciwgaSkge1xuICB2YXIgX2FyciA9IFtdO1xuICB2YXIgX24gPSB0cnVlO1xuICB2YXIgX2QgPSBmYWxzZTtcbiAgdmFyIF9lID0gdW5kZWZpbmVkO1xuXG4gIHRyeSB7XG4gICAgZm9yICh2YXIgX2kgPSBhcnJbU3ltYm9sLml0ZXJhdG9yXSgpLCBfczsgIShfbiA9IChfcyA9IF9pLm5leHQoKSkuZG9uZSk7IF9uID0gdHJ1ZSkge1xuICAgICAgX2Fyci5wdXNoKF9zLnZhbHVlKTtcblxuICAgICAgaWYgKGkgJiYgX2Fyci5sZW5ndGggPT09IGkpIGJyZWFrO1xuICAgIH1cbiAgfSBjYXRjaCAoZXJyKSB7XG4gICAgX2QgPSB0cnVlO1xuICAgIF9lID0gZXJyO1xuICB9IGZpbmFsbHkge1xuICAgIHRyeSB7XG4gICAgICBpZiAoIV9uICYmIF9pW1wicmV0dXJuXCJdICE9IG51bGwpIF9pW1wicmV0dXJuXCJdKCk7XG4gICAgfSBmaW5hbGx5IHtcbiAgICAgIGlmIChfZCkgdGhyb3cgX2U7XG4gICAgfVxuICB9XG5cbiAgcmV0dXJuIF9hcnI7XG59IiwiZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gX25vbkl0ZXJhYmxlUmVzdCgpIHtcbiAgdGhyb3cgbmV3IFR5cGVFcnJvcihcIkludmFsaWQgYXR0ZW1wdCB0byBkZXN0cnVjdHVyZSBub24taXRlcmFibGUgaW5zdGFuY2VcIik7XG59IiwiaW1wb3J0IGFycmF5V2l0aEhvbGVzIGZyb20gXCIuL2FycmF5V2l0aEhvbGVzXCI7XG5pbXBvcnQgaXRlcmFibGVUb0FycmF5TGltaXQgZnJvbSBcIi4vaXRlcmFibGVUb0FycmF5TGltaXRcIjtcbmltcG9ydCBub25JdGVyYWJsZVJlc3QgZnJvbSBcIi4vbm9uSXRlcmFibGVSZXN0XCI7XG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBfc2xpY2VkVG9BcnJheShhcnIsIGkpIHtcbiAgcmV0dXJuIGFycmF5V2l0aEhvbGVzKGFycikgfHwgaXRlcmFibGVUb0FycmF5TGltaXQoYXJyLCBpKSB8fCBub25JdGVyYWJsZVJlc3QoKTtcbn0iLCJpbXBvcnQgX3RvQ29uc3VtYWJsZUFycmF5IGZyb20gJ0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL3RvQ29uc3VtYWJsZUFycmF5JztcbmltcG9ydCBfZXh0ZW5kcyBmcm9tICdAYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9leHRlbmRzJztcbmltcG9ydCBfY2xhc3NDYWxsQ2hlY2sgZnJvbSAnQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vY2xhc3NDYWxsQ2hlY2snO1xuaW1wb3J0IF9jcmVhdGVDbGFzcyBmcm9tICdAYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9jcmVhdGVDbGFzcyc7XG5pbXBvcnQgX3Bvc3NpYmxlQ29uc3RydWN0b3JSZXR1cm4gZnJvbSAnQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vcG9zc2libGVDb25zdHJ1Y3RvclJldHVybic7XG5pbXBvcnQgX2dldFByb3RvdHlwZU9mIGZyb20gJ0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL2dldFByb3RvdHlwZU9mJztcbmltcG9ydCBfYXNzZXJ0VGhpc0luaXRpYWxpemVkIGZyb20gJ0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL2Fzc2VydFRoaXNJbml0aWFsaXplZCc7XG5pbXBvcnQgX2luaGVyaXRzIGZyb20gJ0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL2luaGVyaXRzJztcbmltcG9ydCBfZGVmaW5lUHJvcGVydHkgZnJvbSAnQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vZGVmaW5lUHJvcGVydHknO1xuaW1wb3J0IFJlYWN0LCB7IENoaWxkcmVuLCBDb21wb25lbnQgfSBmcm9tICdyZWFjdCc7XG5pbXBvcnQgaW52YXJpYW50IGZyb20gJ2ludmFyaWFudCc7XG5pbXBvcnQgX3NsaWNlZFRvQXJyYXkgZnJvbSAnQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vc2xpY2VkVG9BcnJheSc7XG5pbXBvcnQgUHJvcFR5cGVzIGZyb20gJ3Byb3AtdHlwZXMnO1xuaW1wb3J0IHN1YnN0eWxlLCB7IGRlZmF1bHRTdHlsZSB9IGZyb20gJ3N1YnN0eWxlJztcbmltcG9ydCBSZWFjdERPTSBmcm9tICdyZWFjdC1kb20nO1xuXG4vLyBlc2NhcGUgUmVnRXhwIHNwZWNpYWwgY2hhcmFjdGVycyBodHRwczovL3N0YWNrb3ZlcmZsb3cuY29tL2EvOTMxMDc1Mi81MTQyNDkwXG52YXIgZXNjYXBlUmVnZXggPSBmdW5jdGlvbiBlc2NhcGVSZWdleChzdHIpIHtcbiAgcmV0dXJuIHN0ci5yZXBsYWNlKC9bLVtcXF17fSgpKis/LixcXFxcXiR8I1xcc10vZywgJ1xcXFwkJicpO1xufTtcblxudmFyIFBMQUNFSE9MREVSUyA9IHtcbiAgaWQ6ICdfX2lkX18nLFxuICBkaXNwbGF5OiAnX19kaXNwbGF5X18nXG59O1xuXG52YXIgZmluZFBvc2l0aW9uT2ZDYXB0dXJpbmdHcm91cCA9IGZ1bmN0aW9uIGZpbmRQb3NpdGlvbk9mQ2FwdHVyaW5nR3JvdXAobWFya3VwLCBwYXJhbWV0ZXJOYW1lKSB7XG4gIGludmFyaWFudChwYXJhbWV0ZXJOYW1lID09PSAnaWQnIHx8IHBhcmFtZXRlck5hbWUgPT09ICdkaXNwbGF5JywgXCJTZWNvbmQgYXJnIG11c3QgYmUgZWl0aGVyIFxcXCJpZFxcXCIgb3IgXFxcImRpc3BsYXlcXFwiLCBnb3Q6IFxcXCJcIi5jb25jYXQocGFyYW1ldGVyTmFtZSwgXCJcXFwiXCIpKTsgLy8gZmluZCBwb3NpdGlvbnMgb2YgcGxhY2Vob2xkZXJzIGluIHRoZSBtYXJrdXBcblxuICB2YXIgaW5kZXhEaXNwbGF5ID0gbWFya3VwLmluZGV4T2YoUExBQ0VIT0xERVJTLmRpc3BsYXkpO1xuICB2YXIgaW5kZXhJZCA9IG1hcmt1cC5pbmRleE9mKFBMQUNFSE9MREVSUy5pZCk7IC8vIHNldCBpbmRpY2VzIHRvIG51bGwgaWYgbm90IGZvdW5kXG5cbiAgaWYgKGluZGV4RGlzcGxheSA8IDApIGluZGV4RGlzcGxheSA9IG51bGw7XG4gIGlmIChpbmRleElkIDwgMCkgaW5kZXhJZCA9IG51bGw7IC8vIG1hcmt1cCBtdXN0IGNvbnRhaW4gb25lIG9mIHRoZSBtYW5kYXRvcnkgcGxhY2Vob2xkZXJzXG5cbiAgaW52YXJpYW50KGluZGV4RGlzcGxheSAhPT0gbnVsbCB8fCBpbmRleElkICE9PSBudWxsLCBcIlRoZSBtYXJrdXAgJ1wiLmNvbmNhdChtYXJrdXAsIFwiJyBkb2VzIG5vdCBjb250YWluIGVpdGhlciBvZiB0aGUgcGxhY2Vob2xkZXJzICdfX2lkX18nIG9yICdfX2Rpc3BsYXlfXydcIikpO1xuXG4gIGlmIChpbmRleERpc3BsYXkgIT09IG51bGwgJiYgaW5kZXhJZCAhPT0gbnVsbCkge1xuICAgIC8vIGJvdGggcGxhY2Vob2xkZXJzIGFyZSB1c2VkLCByZXR1cm4gMCBvciAxIGRlcGVuZGluZyBvbiB0aGUgcG9zaXRpb24gb2YgdGhlIHJlcXVlc3RlZCBwYXJhbWV0ZXJcbiAgICByZXR1cm4gcGFyYW1ldGVyTmFtZSA9PT0gJ2lkJyAmJiBpbmRleElkIDw9IGluZGV4RGlzcGxheSB8fCBwYXJhbWV0ZXJOYW1lID09PSAnZGlzcGxheScgJiYgaW5kZXhEaXNwbGF5IDw9IGluZGV4SWQgPyAwIDogMTtcbiAgfSAvLyBqdXN0IG9uZSBwbGFjZWhvbGRlciBpcyBiZWluZyB1c2VkLCB3ZSdsbCB1c2UgdGhlIGNhcHR1cmVkIHN0cmluZyBmb3IgYm90aCBwYXJhbWV0ZXJzXG5cblxuICByZXR1cm4gMDtcbn07XG5cbnZhciBjb21iaW5lUmVnRXhwcyA9IGZ1bmN0aW9uIGNvbWJpbmVSZWdFeHBzKHJlZ0V4cHMpIHtcbiAgdmFyIHNlcmlhbGl6ZWRSZWdleFBhcnNlciA9IC9eXFwvKC4rKVxcLyhcXHcrKT8kLztcbiAgcmV0dXJuIG5ldyBSZWdFeHAocmVnRXhwcy5tYXAoZnVuY3Rpb24gKHJlZ2V4KSB7XG4gICAgdmFyIF9zZXJpYWxpemVkUmVnZXhQYXJzZSA9IHNlcmlhbGl6ZWRSZWdleFBhcnNlci5leGVjKHJlZ2V4LnRvU3RyaW5nKCkpLFxuICAgICAgICBfc2VyaWFsaXplZFJlZ2V4UGFyc2UyID0gX3NsaWNlZFRvQXJyYXkoX3NlcmlhbGl6ZWRSZWdleFBhcnNlLCAzKSxcbiAgICAgICAgcmVnZXhTdHJpbmcgPSBfc2VyaWFsaXplZFJlZ2V4UGFyc2UyWzFdLFxuICAgICAgICByZWdleEZsYWdzID0gX3NlcmlhbGl6ZWRSZWdleFBhcnNlMlsyXTtcblxuICAgIGludmFyaWFudCghcmVnZXhGbGFncywgXCJSZWdFeHAgZmxhZ3MgYXJlIG5vdCBzdXBwb3J0ZWQuIENoYW5nZSAvXCIuY29uY2F0KHJlZ2V4U3RyaW5nLCBcIi9cIikuY29uY2F0KHJlZ2V4RmxhZ3MsIFwiIGludG8gL1wiKS5jb25jYXQocmVnZXhTdHJpbmcsIFwiL1wiKSk7XG4gICAgcmV0dXJuIFwiKFwiLmNvbmNhdChyZWdleFN0cmluZywgXCIpXCIpO1xuICB9KS5qb2luKCd8JyksICdnJyk7XG59O1xuXG52YXIgY291bnRQbGFjZWhvbGRlcnMgPSBmdW5jdGlvbiBjb3VudFBsYWNlaG9sZGVycyhtYXJrdXApIHtcbiAgdmFyIGNvdW50ID0gMDtcbiAgaWYgKG1hcmt1cC5pbmRleE9mKCdfX2lkX18nKSA+PSAwKSBjb3VudCsrO1xuICBpZiAobWFya3VwLmluZGV4T2YoJ19fZGlzcGxheV9fJykgPj0gMCkgY291bnQrKztcbiAgcmV0dXJuIGNvdW50O1xufTtcblxudmFyIGVtcHR5Rm4gPSBmdW5jdGlvbiBlbXB0eUZuKCkge307IC8vIEZpbmRzIGFsbCBvY2N1cnJlbmNlcyBvZiB0aGUgbWFya3VwIGluIHRoZSB2YWx1ZSBhbmQgY2FsbHMgdGhlIGBtYXJrdXBJdGVyYXRlZWAgY2FsbGJhY2sgZm9yIGVhY2ggb2YgdGhlbS5cbi8vIFRoZSBvcHRpb25hbCBgdGV4dEl0ZXJhdGVlYCBjYWxsYmFjayBpcyBjYWxsZWQgZm9yIGVhY2ggcGxhaW4gdGV4dCByYW5nZXMgaW4gYmV0d2VlbiB0aGVzZSBtYXJrdXAgb2NjdXJyZW5jZXMuXG5cblxudmFyIGl0ZXJhdGVNZW50aW9uc01hcmt1cCA9IGZ1bmN0aW9uIGl0ZXJhdGVNZW50aW9uc01hcmt1cCh2YWx1ZSwgY29uZmlnLCBtYXJrdXBJdGVyYXRlZSkge1xuICB2YXIgdGV4dEl0ZXJhdGVlID0gYXJndW1lbnRzLmxlbmd0aCA+IDMgJiYgYXJndW1lbnRzWzNdICE9PSB1bmRlZmluZWQgPyBhcmd1bWVudHNbM10gOiBlbXB0eUZuO1xuICB2YXIgcmVnZXggPSBjb21iaW5lUmVnRXhwcyhjb25maWcubWFwKGZ1bmN0aW9uIChjKSB7XG4gICAgcmV0dXJuIGMucmVnZXg7XG4gIH0pKTtcbiAgdmFyIGFjY09mZnNldCA9IDI7IC8vIGZpcnN0IGlzIHdob2xlIG1hdGNoLCBzZWNvbmQgaXMgdGhlIGZvciB0aGUgY2FwdHVyaW5nIGdyb3VwIG9mIGZpcnN0IHJlZ2V4cCBjb21wb25lbnRcblxuICB2YXIgY2FwdHVyZUdyb3VwT2Zmc2V0cyA9IGNvbmZpZy5tYXAoZnVuY3Rpb24gKF9yZWYpIHtcbiAgICB2YXIgbWFya3VwID0gX3JlZi5tYXJrdXA7XG4gICAgdmFyIHJlc3VsdCA9IGFjY09mZnNldDsgLy8gKyAxIGlzIGZvciB0aGUgY2FwdHVyaW5nIGdyb3VwIHdlIGFkZCBhcm91bmQgZWFjaCByZWdleHAgY29tcG9uZW50IGluIGNvbWJpbmVSZWdFeHBzXG5cbiAgICBhY2NPZmZzZXQgKz0gY291bnRQbGFjZWhvbGRlcnMobWFya3VwKSArIDE7XG4gICAgcmV0dXJuIHJlc3VsdDtcbiAgfSk7XG4gIHZhciBtYXRjaDtcbiAgdmFyIHN0YXJ0ID0gMDtcbiAgdmFyIGN1cnJlbnRQbGFpblRleHRJbmRleCA9IDA7IC8vIGRldGVjdCBhbGwgbWVudGlvbiBtYXJrdXAgb2NjdXJyZW5jZXMgaW4gdGhlIHZhbHVlIGFuZCBpdGVyYXRlIHRoZSBtYXRjaGVzXG5cbiAgd2hpbGUgKChtYXRjaCA9IHJlZ2V4LmV4ZWModmFsdWUpKSAhPT0gbnVsbCkge1xuICAgIHZhciBvZmZzZXQgPSBjYXB0dXJlR3JvdXBPZmZzZXRzLmZpbmQoZnVuY3Rpb24gKG8pIHtcbiAgICAgIHJldHVybiAhIW1hdGNoW29dO1xuICAgIH0pOyAvLyBlc2xpbnQtZGlzYWJsZS1saW5lIG5vLWxvb3AtZnVuY1xuXG4gICAgdmFyIG1lbnRpb25DaGlsZEluZGV4ID0gY2FwdHVyZUdyb3VwT2Zmc2V0cy5pbmRleE9mKG9mZnNldCk7XG4gICAgdmFyIF9jb25maWckbWVudGlvbkNoaWxkSSA9IGNvbmZpZ1ttZW50aW9uQ2hpbGRJbmRleF0sXG4gICAgICAgIG1hcmt1cCA9IF9jb25maWckbWVudGlvbkNoaWxkSS5tYXJrdXAsXG4gICAgICAgIGRpc3BsYXlUcmFuc2Zvcm0gPSBfY29uZmlnJG1lbnRpb25DaGlsZEkuZGlzcGxheVRyYW5zZm9ybTtcbiAgICB2YXIgaWRQb3MgPSBvZmZzZXQgKyBmaW5kUG9zaXRpb25PZkNhcHR1cmluZ0dyb3VwKG1hcmt1cCwgJ2lkJyk7XG4gICAgdmFyIGRpc3BsYXlQb3MgPSBvZmZzZXQgKyBmaW5kUG9zaXRpb25PZkNhcHR1cmluZ0dyb3VwKG1hcmt1cCwgJ2Rpc3BsYXknKTtcbiAgICB2YXIgaWQgPSBtYXRjaFtpZFBvc107XG4gICAgdmFyIGRpc3BsYXkgPSBkaXNwbGF5VHJhbnNmb3JtKGlkLCBtYXRjaFtkaXNwbGF5UG9zXSk7XG4gICAgdmFyIHN1YnN0ciA9IHZhbHVlLnN1YnN0cmluZyhzdGFydCwgbWF0Y2guaW5kZXgpO1xuICAgIHRleHRJdGVyYXRlZShzdWJzdHIsIHN0YXJ0LCBjdXJyZW50UGxhaW5UZXh0SW5kZXgpO1xuICAgIGN1cnJlbnRQbGFpblRleHRJbmRleCArPSBzdWJzdHIubGVuZ3RoO1xuICAgIG1hcmt1cEl0ZXJhdGVlKG1hdGNoWzBdLCBtYXRjaC5pbmRleCwgY3VycmVudFBsYWluVGV4dEluZGV4LCBpZCwgZGlzcGxheSwgbWVudGlvbkNoaWxkSW5kZXgsIHN0YXJ0KTtcbiAgICBjdXJyZW50UGxhaW5UZXh0SW5kZXggKz0gZGlzcGxheS5sZW5ndGg7XG4gICAgc3RhcnQgPSByZWdleC5sYXN0SW5kZXg7XG4gIH1cblxuICBpZiAoc3RhcnQgPCB2YWx1ZS5sZW5ndGgpIHtcbiAgICB0ZXh0SXRlcmF0ZWUodmFsdWUuc3Vic3RyaW5nKHN0YXJ0KSwgc3RhcnQsIGN1cnJlbnRQbGFpblRleHRJbmRleCk7XG4gIH1cbn07XG5cbnZhciBnZXRQbGFpblRleHQgPSBmdW5jdGlvbiBnZXRQbGFpblRleHQodmFsdWUsIGNvbmZpZykge1xuICB2YXIgcmVzdWx0ID0gJyc7XG4gIGl0ZXJhdGVNZW50aW9uc01hcmt1cCh2YWx1ZSwgY29uZmlnLCBmdW5jdGlvbiAobWF0Y2gsIGluZGV4LCBwbGFpblRleHRJbmRleCwgaWQsIGRpc3BsYXkpIHtcbiAgICByZXN1bHQgKz0gZGlzcGxheTtcbiAgfSwgZnVuY3Rpb24gKHBsYWluVGV4dCkge1xuICAgIHJlc3VsdCArPSBwbGFpblRleHQ7XG4gIH0pO1xuICByZXR1cm4gcmVzdWx0O1xufTtcblxuLy8gaW4gdGhlIG1hcmtlZCB1cCB2YWx1ZSBzdHJpbmcuXG4vLyBJZiB0aGUgcGFzc2VkIGNoYXJhY3RlciBpbmRleCBsaWVzIGluc2lkZSBhIG1lbnRpb24sIHRoZSB2YWx1ZSBvZiBgaW5NYXJrdXBDb3JyZWN0aW9uYCBkZWZpbmVzIHRoZVxuLy8gY29ycmVjdGlvbiB0byBhcHBseTpcbi8vICAgLSAnU1RBUlQnIHRvIHJldHVybiB0aGUgaW5kZXggb2YgdGhlIG1lbnRpb24gbWFya3VwJ3MgZmlyc3QgY2hhciAoZGVmYXVsdClcbi8vICAgLSAnRU5EJyB0byByZXR1cm4gdGhlIGluZGV4IGFmdGVyIGl0cyBsYXN0IGNoYXJcbi8vICAgLSAnTlVMTCcgdG8gcmV0dXJuIG51bGxcblxudmFyIG1hcFBsYWluVGV4dEluZGV4ID0gZnVuY3Rpb24gbWFwUGxhaW5UZXh0SW5kZXgodmFsdWUsIGNvbmZpZywgaW5kZXhJblBsYWluVGV4dCkge1xuICB2YXIgaW5NYXJrdXBDb3JyZWN0aW9uID0gYXJndW1lbnRzLmxlbmd0aCA+IDMgJiYgYXJndW1lbnRzWzNdICE9PSB1bmRlZmluZWQgPyBhcmd1bWVudHNbM10gOiAnU1RBUlQnO1xuXG4gIGlmICh0eXBlb2YgaW5kZXhJblBsYWluVGV4dCAhPT0gJ251bWJlcicpIHtcbiAgICByZXR1cm4gaW5kZXhJblBsYWluVGV4dDtcbiAgfVxuXG4gIHZhciByZXN1bHQ7XG5cbiAgdmFyIHRleHRJdGVyYXRlZSA9IGZ1bmN0aW9uIHRleHRJdGVyYXRlZShzdWJzdHIsIGluZGV4LCBzdWJzdHJQbGFpblRleHRJbmRleCkge1xuICAgIGlmIChyZXN1bHQgIT09IHVuZGVmaW5lZCkgcmV0dXJuO1xuXG4gICAgaWYgKHN1YnN0clBsYWluVGV4dEluZGV4ICsgc3Vic3RyLmxlbmd0aCA+PSBpbmRleEluUGxhaW5UZXh0KSB7XG4gICAgICAvLyBmb3VuZCB0aGUgY29ycmVzcG9uZGluZyBwb3NpdGlvbiBpbiB0aGUgY3VycmVudCBwbGFpbiB0ZXh0IHJhbmdlXG4gICAgICByZXN1bHQgPSBpbmRleCArIGluZGV4SW5QbGFpblRleHQgLSBzdWJzdHJQbGFpblRleHRJbmRleDtcbiAgICB9XG4gIH07XG5cbiAgdmFyIG1hcmt1cEl0ZXJhdGVlID0gZnVuY3Rpb24gbWFya3VwSXRlcmF0ZWUobWFya3VwLCBpbmRleCwgbWVudGlvblBsYWluVGV4dEluZGV4LCBpZCwgZGlzcGxheSwgY2hpbGRJbmRleCwgbGFzdE1lbnRpb25FbmRJbmRleCkge1xuICAgIGlmIChyZXN1bHQgIT09IHVuZGVmaW5lZCkgcmV0dXJuO1xuXG4gICAgaWYgKG1lbnRpb25QbGFpblRleHRJbmRleCArIGRpc3BsYXkubGVuZ3RoID4gaW5kZXhJblBsYWluVGV4dCkge1xuICAgICAgLy8gZm91bmQgdGhlIGNvcnJlc3BvbmRpbmcgcG9zaXRpb24gaW5zaWRlIGN1cnJlbnQgbWF0Y2gsXG4gICAgICAvLyByZXR1cm4gdGhlIGluZGV4IG9mIHRoZSBmaXJzdCBvciBhZnRlciB0aGUgbGFzdCBjaGFyIG9mIHRoZSBtYXRjaGluZyBtYXJrdXBcbiAgICAgIC8vIGRlcGVuZGluZyBvbiB3aGV0aGVyIHRoZSBgaW5NYXJrdXBDb3JyZWN0aW9uYFxuICAgICAgaWYgKGluTWFya3VwQ29ycmVjdGlvbiA9PT0gJ05VTEwnKSB7XG4gICAgICAgIHJlc3VsdCA9IG51bGw7XG4gICAgICB9IGVsc2Uge1xuICAgICAgICByZXN1bHQgPSBpbmRleCArIChpbk1hcmt1cENvcnJlY3Rpb24gPT09ICdFTkQnID8gbWFya3VwLmxlbmd0aCA6IDApO1xuICAgICAgfVxuICAgIH1cbiAgfTtcblxuICBpdGVyYXRlTWVudGlvbnNNYXJrdXAodmFsdWUsIGNvbmZpZywgbWFya3VwSXRlcmF0ZWUsIHRleHRJdGVyYXRlZSk7IC8vIHdoZW4gYSBtZW50aW9uIGlzIGF0IHRoZSBlbmQgb2YgdGhlIHZhbHVlIGFuZCB3ZSB3YW50IHRvIGdldCB0aGUgY2FyZXQgcG9zaXRpb25cbiAgLy8gYXQgdGhlIGVuZCBvZiB0aGUgc3RyaW5nLCByZXN1bHQgaXMgdW5kZWZpbmVkXG5cbiAgcmV0dXJuIHJlc3VsdCA9PT0gdW5kZWZpbmVkID8gdmFsdWUubGVuZ3RoIDogcmVzdWx0O1xufTtcblxudmFyIHNwbGljZVN0cmluZyA9IGZ1bmN0aW9uIHNwbGljZVN0cmluZyhzdHIsIHN0YXJ0LCBlbmQsIGluc2VydCkge1xuICByZXR1cm4gc3RyLnN1YnN0cmluZygwLCBzdGFydCkgKyBpbnNlcnQgKyBzdHIuc3Vic3RyaW5nKGVuZCk7XG59O1xuXG4vLyBndWlkZWQgYnkgdGhlIHRleHRhcmVhIHRleHQgc2VsZWN0aW9uIHJhbmdlcyBiZWZvcmUgYW5kIGFmdGVyIHRoZSBjaGFuZ2VcblxudmFyIGFwcGx5Q2hhbmdlVG9WYWx1ZSA9IGZ1bmN0aW9uIGFwcGx5Q2hhbmdlVG9WYWx1ZSh2YWx1ZSwgcGxhaW5UZXh0VmFsdWUsIF9yZWYsIGNvbmZpZykge1xuICB2YXIgc2VsZWN0aW9uU3RhcnRCZWZvcmUgPSBfcmVmLnNlbGVjdGlvblN0YXJ0QmVmb3JlLFxuICAgICAgc2VsZWN0aW9uRW5kQmVmb3JlID0gX3JlZi5zZWxlY3Rpb25FbmRCZWZvcmUsXG4gICAgICBzZWxlY3Rpb25FbmRBZnRlciA9IF9yZWYuc2VsZWN0aW9uRW5kQWZ0ZXI7XG4gIHZhciBvbGRQbGFpblRleHRWYWx1ZSA9IGdldFBsYWluVGV4dCh2YWx1ZSwgY29uZmlnKTtcbiAgdmFyIGxlbmd0aERlbHRhID0gb2xkUGxhaW5UZXh0VmFsdWUubGVuZ3RoIC0gcGxhaW5UZXh0VmFsdWUubGVuZ3RoO1xuXG4gIGlmIChzZWxlY3Rpb25TdGFydEJlZm9yZSA9PT0gJ3VuZGVmaW5lZCcpIHtcbiAgICBzZWxlY3Rpb25TdGFydEJlZm9yZSA9IHNlbGVjdGlvbkVuZEFmdGVyICsgbGVuZ3RoRGVsdGE7XG4gIH1cblxuICBpZiAoc2VsZWN0aW9uRW5kQmVmb3JlID09PSAndW5kZWZpbmVkJykge1xuICAgIHNlbGVjdGlvbkVuZEJlZm9yZSA9IHNlbGVjdGlvblN0YXJ0QmVmb3JlO1xuICB9IC8vIEZpeGVzIGFuIGlzc3VlIHdpdGggcmVwbGFjaW5nIGNvbWJpbmVkIGNoYXJhY3RlcnMgZm9yIGNvbXBsZXggaW5wdXQuIEVnIGxpa2UgYWNlbnRlZCBsZXR0ZXJzIG9uIE9TWFxuXG5cbiAgaWYgKHNlbGVjdGlvblN0YXJ0QmVmb3JlID09PSBzZWxlY3Rpb25FbmRCZWZvcmUgJiYgc2VsZWN0aW9uRW5kQmVmb3JlID09PSBzZWxlY3Rpb25FbmRBZnRlciAmJiBvbGRQbGFpblRleHRWYWx1ZS5sZW5ndGggPT09IHBsYWluVGV4dFZhbHVlLmxlbmd0aCkge1xuICAgIHNlbGVjdGlvblN0YXJ0QmVmb3JlID0gc2VsZWN0aW9uU3RhcnRCZWZvcmUgLSAxO1xuICB9IC8vIGV4dHJhY3QgdGhlIGluc2VydGlvbiBmcm9tIHRoZSBuZXcgcGxhaW4gdGV4dCB2YWx1ZVxuXG5cbiAgdmFyIGluc2VydCA9IHBsYWluVGV4dFZhbHVlLnNsaWNlKHNlbGVjdGlvblN0YXJ0QmVmb3JlLCBzZWxlY3Rpb25FbmRBZnRlcik7IC8vIGhhbmRsaW5nIGZvciBCYWNrc3BhY2Uga2V5IHdpdGggbm8gcmFuZ2Ugc2VsZWN0aW9uXG5cbiAgdmFyIHNwbGljZVN0YXJ0ID0gTWF0aC5taW4oc2VsZWN0aW9uU3RhcnRCZWZvcmUsIHNlbGVjdGlvbkVuZEFmdGVyKTtcbiAgdmFyIHNwbGljZUVuZCA9IHNlbGVjdGlvbkVuZEJlZm9yZTtcblxuICBpZiAoc2VsZWN0aW9uU3RhcnRCZWZvcmUgPT09IHNlbGVjdGlvbkVuZEFmdGVyKSB7XG4gICAgLy8gaGFuZGxpbmcgZm9yIERlbGV0ZSBrZXkgd2l0aCBubyByYW5nZSBzZWxlY3Rpb25cbiAgICBzcGxpY2VFbmQgPSBNYXRoLm1heChzZWxlY3Rpb25FbmRCZWZvcmUsIHNlbGVjdGlvblN0YXJ0QmVmb3JlICsgbGVuZ3RoRGVsdGEpO1xuICB9XG5cbiAgdmFyIG1hcHBlZFNwbGljZVN0YXJ0ID0gbWFwUGxhaW5UZXh0SW5kZXgodmFsdWUsIGNvbmZpZywgc3BsaWNlU3RhcnQsICdTVEFSVCcpO1xuICB2YXIgbWFwcGVkU3BsaWNlRW5kID0gbWFwUGxhaW5UZXh0SW5kZXgodmFsdWUsIGNvbmZpZywgc3BsaWNlRW5kLCAnRU5EJyk7XG4gIHZhciBjb250cm9sU3BsaWNlU3RhcnQgPSBtYXBQbGFpblRleHRJbmRleCh2YWx1ZSwgY29uZmlnLCBzcGxpY2VTdGFydCwgJ05VTEwnKTtcbiAgdmFyIGNvbnRyb2xTcGxpY2VFbmQgPSBtYXBQbGFpblRleHRJbmRleCh2YWx1ZSwgY29uZmlnLCBzcGxpY2VFbmQsICdOVUxMJyk7XG4gIHZhciB3aWxsUmVtb3ZlTWVudGlvbiA9IGNvbnRyb2xTcGxpY2VTdGFydCA9PT0gbnVsbCB8fCBjb250cm9sU3BsaWNlRW5kID09PSBudWxsO1xuICB2YXIgbmV3VmFsdWUgPSBzcGxpY2VTdHJpbmcodmFsdWUsIG1hcHBlZFNwbGljZVN0YXJ0LCBtYXBwZWRTcGxpY2VFbmQsIGluc2VydCk7XG5cbiAgaWYgKCF3aWxsUmVtb3ZlTWVudGlvbikge1xuICAgIC8vIHRlc3QgZm9yIGF1dG8tY29tcGxldGlvbiBjaGFuZ2VzXG4gICAgdmFyIGNvbnRyb2xQbGFpblRleHRWYWx1ZSA9IGdldFBsYWluVGV4dChuZXdWYWx1ZSwgY29uZmlnKTtcblxuICAgIGlmIChjb250cm9sUGxhaW5UZXh0VmFsdWUgIT09IHBsYWluVGV4dFZhbHVlKSB7XG4gICAgICAvLyBzb21lIGF1dG8tY29ycmVjdGlvbiBpcyBnb2luZyBvblxuICAgICAgLy8gZmluZCBzdGFydCBvZiBkaWZmXG4gICAgICBzcGxpY2VTdGFydCA9IDA7XG5cbiAgICAgIHdoaWxlIChwbGFpblRleHRWYWx1ZVtzcGxpY2VTdGFydF0gPT09IGNvbnRyb2xQbGFpblRleHRWYWx1ZVtzcGxpY2VTdGFydF0pIHtcbiAgICAgICAgc3BsaWNlU3RhcnQrKztcbiAgICAgIH0gLy8gZXh0cmFjdCBhdXRvLWNvcnJlY3RlZCBpbnNlcnRpb25cblxuXG4gICAgICBpbnNlcnQgPSBwbGFpblRleHRWYWx1ZS5zbGljZShzcGxpY2VTdGFydCwgc2VsZWN0aW9uRW5kQWZ0ZXIpOyAvLyBmaW5kIGluZGV4IG9mIHRoZSB1bmNoYW5nZWQgcmVtYWluZGVyXG5cbiAgICAgIHNwbGljZUVuZCA9IG9sZFBsYWluVGV4dFZhbHVlLmxhc3RJbmRleE9mKHBsYWluVGV4dFZhbHVlLnN1YnN0cmluZyhzZWxlY3Rpb25FbmRBZnRlcikpOyAvLyByZS1tYXAgdGhlIGNvcnJlY3RlZCBpbmRpY2VzXG5cbiAgICAgIG1hcHBlZFNwbGljZVN0YXJ0ID0gbWFwUGxhaW5UZXh0SW5kZXgodmFsdWUsIGNvbmZpZywgc3BsaWNlU3RhcnQsICdTVEFSVCcpO1xuICAgICAgbWFwcGVkU3BsaWNlRW5kID0gbWFwUGxhaW5UZXh0SW5kZXgodmFsdWUsIGNvbmZpZywgc3BsaWNlRW5kLCAnRU5EJyk7XG4gICAgICBuZXdWYWx1ZSA9IHNwbGljZVN0cmluZyh2YWx1ZSwgbWFwcGVkU3BsaWNlU3RhcnQsIG1hcHBlZFNwbGljZUVuZCwgaW5zZXJ0KTtcbiAgICB9XG4gIH1cblxuICByZXR1cm4gbmV3VmFsdWU7XG59O1xuXG4vLyByZXR1cm5zIGEgdGhlIGluZGV4IG9mIG9mIHRoZSBmaXJzdCBjaGFyIG9mIHRoZSBtZW50aW9uIGluIHRoZSBwbGFpbiB0ZXh0LlxuLy8gSWYgaW5kZXhJblBsYWluVGV4dCBkb2VzIG5vdCBsaWUgaW5zaWRlIGEgbWVudGlvbiwgcmV0dXJucyBpbmRleEluUGxhaW5UZXh0LlxuXG52YXIgZmluZFN0YXJ0T2ZNZW50aW9uSW5QbGFpblRleHQgPSBmdW5jdGlvbiBmaW5kU3RhcnRPZk1lbnRpb25JblBsYWluVGV4dCh2YWx1ZSwgY29uZmlnLCBpbmRleEluUGxhaW5UZXh0KSB7XG4gIHZhciByZXN1bHQgPSBpbmRleEluUGxhaW5UZXh0O1xuICB2YXIgZm91bmRNZW50aW9uID0gZmFsc2U7XG5cbiAgdmFyIG1hcmt1cEl0ZXJhdGVlID0gZnVuY3Rpb24gbWFya3VwSXRlcmF0ZWUobWFya3VwLCBpbmRleCwgbWVudGlvblBsYWluVGV4dEluZGV4LCBpZCwgZGlzcGxheSwgY2hpbGRJbmRleCwgbGFzdE1lbnRpb25FbmRJbmRleCkge1xuICAgIGlmIChtZW50aW9uUGxhaW5UZXh0SW5kZXggPD0gaW5kZXhJblBsYWluVGV4dCAmJiBtZW50aW9uUGxhaW5UZXh0SW5kZXggKyBkaXNwbGF5Lmxlbmd0aCA+IGluZGV4SW5QbGFpblRleHQpIHtcbiAgICAgIHJlc3VsdCA9IG1lbnRpb25QbGFpblRleHRJbmRleDtcbiAgICAgIGZvdW5kTWVudGlvbiA9IHRydWU7XG4gICAgfVxuICB9O1xuXG4gIGl0ZXJhdGVNZW50aW9uc01hcmt1cCh2YWx1ZSwgY29uZmlnLCBtYXJrdXBJdGVyYXRlZSk7XG5cbiAgaWYgKGZvdW5kTWVudGlvbikge1xuICAgIHJldHVybiByZXN1bHQ7XG4gIH1cbn07XG5cbnZhciBnZXRNZW50aW9ucyA9IGZ1bmN0aW9uIGdldE1lbnRpb25zKHZhbHVlLCBjb25maWcpIHtcbiAgdmFyIG1lbnRpb25zID0gW107XG4gIGl0ZXJhdGVNZW50aW9uc01hcmt1cCh2YWx1ZSwgY29uZmlnLCBmdW5jdGlvbiAobWF0Y2gsIGluZGV4LCBwbGFpblRleHRJbmRleCwgaWQsIGRpc3BsYXksIGNoaWxkSW5kZXgsIHN0YXJ0KSB7XG4gICAgbWVudGlvbnMucHVzaCh7XG4gICAgICBpZDogaWQsXG4gICAgICBkaXNwbGF5OiBkaXNwbGF5LFxuICAgICAgY2hpbGRJbmRleDogY2hpbGRJbmRleCxcbiAgICAgIGluZGV4OiBpbmRleCxcbiAgICAgIHBsYWluVGV4dEluZGV4OiBwbGFpblRleHRJbmRleFxuICAgIH0pO1xuICB9KTtcbiAgcmV0dXJuIG1lbnRpb25zO1xufTtcblxudmFyIGNvdW50U3VnZ2VzdGlvbnMgPSBmdW5jdGlvbiBjb3VudFN1Z2dlc3Rpb25zKHN1Z2dlc3Rpb25zKSB7XG4gIHJldHVybiBPYmplY3QudmFsdWVzKHN1Z2dlc3Rpb25zKS5yZWR1Y2UoZnVuY3Rpb24gKGFjYywgX3JlZikge1xuICAgIHZhciByZXN1bHRzID0gX3JlZi5yZXN1bHRzO1xuICAgIHJldHVybiBhY2MgKyByZXN1bHRzLmxlbmd0aDtcbiAgfSwgMCk7XG59O1xuXG52YXIgZ2V0RW5kT2ZMYXN0TWVudGlvbiA9IGZ1bmN0aW9uIGdldEVuZE9mTGFzdE1lbnRpb24odmFsdWUsIGNvbmZpZykge1xuICB2YXIgbWVudGlvbnMgPSBnZXRNZW50aW9ucyh2YWx1ZSwgY29uZmlnKTtcbiAgdmFyIGxhc3RNZW50aW9uID0gbWVudGlvbnNbbWVudGlvbnMubGVuZ3RoIC0gMV07XG4gIHJldHVybiBsYXN0TWVudGlvbiA/IGxhc3RNZW50aW9uLnBsYWluVGV4dEluZGV4ICsgbGFzdE1lbnRpb24uZGlzcGxheS5sZW5ndGggOiAwO1xufTtcblxudmFyIG1hcmt1cFRvUmVnZXggPSBmdW5jdGlvbiBtYXJrdXBUb1JlZ2V4KG1hcmt1cCkge1xuICB2YXIgZXNjYXBlZE1hcmt1cCA9IGVzY2FwZVJlZ2V4KG1hcmt1cCk7XG4gIHZhciBjaGFyQWZ0ZXJEaXNwbGF5ID0gbWFya3VwW21hcmt1cC5pbmRleE9mKFBMQUNFSE9MREVSUy5kaXNwbGF5KSArIFBMQUNFSE9MREVSUy5kaXNwbGF5Lmxlbmd0aF07XG4gIHZhciBjaGFyQWZ0ZXJJZCA9IG1hcmt1cFttYXJrdXAuaW5kZXhPZihQTEFDRUhPTERFUlMuZGlzcGxheSkgKyBQTEFDRUhPTERFUlMuZGlzcGxheS5sZW5ndGhdO1xuICByZXR1cm4gbmV3IFJlZ0V4cChlc2NhcGVkTWFya3VwLnJlcGxhY2UoUExBQ0VIT0xERVJTLmRpc3BsYXksIFwiKFteXCIuY29uY2F0KGVzY2FwZVJlZ2V4KGNoYXJBZnRlckRpc3BsYXkgfHwgJycpLCBcIl0rPylcIikpLnJlcGxhY2UoUExBQ0VIT0xERVJTLmlkLCBcIihbXlwiLmNvbmNhdChlc2NhcGVSZWdleChjaGFyQWZ0ZXJJZCB8fCAnJyksIFwiXSs/KVwiKSkpO1xufTtcblxudmFyIHJlYWRDb25maWdGcm9tQ2hpbGRyZW4gPSBmdW5jdGlvbiByZWFkQ29uZmlnRnJvbUNoaWxkcmVuKGNoaWxkcmVuKSB7XG4gIHJldHVybiBDaGlsZHJlbi50b0FycmF5KGNoaWxkcmVuKS5tYXAoZnVuY3Rpb24gKF9yZWYpIHtcbiAgICB2YXIgX3JlZiRwcm9wcyA9IF9yZWYucHJvcHMsXG4gICAgICAgIG1hcmt1cCA9IF9yZWYkcHJvcHMubWFya3VwLFxuICAgICAgICByZWdleCA9IF9yZWYkcHJvcHMucmVnZXgsXG4gICAgICAgIGRpc3BsYXlUcmFuc2Zvcm0gPSBfcmVmJHByb3BzLmRpc3BsYXlUcmFuc2Zvcm07XG4gICAgcmV0dXJuIHtcbiAgICAgIG1hcmt1cDogbWFya3VwLFxuICAgICAgcmVnZXg6IHJlZ2V4ID8gY29lcmNlQ2FwdHVyaW5nR3JvdXBzKHJlZ2V4LCBtYXJrdXApIDogbWFya3VwVG9SZWdleChtYXJrdXApLFxuICAgICAgZGlzcGxheVRyYW5zZm9ybTogZGlzcGxheVRyYW5zZm9ybSB8fCBmdW5jdGlvbiAoaWQsIGRpc3BsYXkpIHtcbiAgICAgICAgcmV0dXJuIGRpc3BsYXkgfHwgaWQ7XG4gICAgICB9XG4gICAgfTtcbiAgfSk7XG59OyAvLyBtYWtlIHN1cmUgdGhhdCB0aGUgY3VzdG9tIHJlZ2V4IGRlZmluZXMgdGhlIGNvcnJlY3QgbnVtYmVyIG9mIGNhcHR1cmluZyBncm91cHNcblxuXG52YXIgY29lcmNlQ2FwdHVyaW5nR3JvdXBzID0gZnVuY3Rpb24gY29lcmNlQ2FwdHVyaW5nR3JvdXBzKHJlZ2V4LCBtYXJrdXApIHtcbiAgdmFyIG51bWJlck9mR3JvdXBzID0gbmV3IFJlZ0V4cChyZWdleC50b1N0cmluZygpICsgJ3wnKS5leGVjKCcnKS5sZW5ndGggLSAxO1xuICB2YXIgbnVtYmVyT2ZQbGFjZWhvbGRlcnMgPSBjb3VudFBsYWNlaG9sZGVycyhtYXJrdXApO1xuICBpbnZhcmlhbnQobnVtYmVyT2ZHcm91cHMgPT09IG51bWJlck9mUGxhY2Vob2xkZXJzLCBcIk51bWJlciBvZiBjYXB0dXJpbmcgZ3JvdXBzIGluIFJlZ0V4cCBcIi5jb25jYXQocmVnZXgudG9TdHJpbmcoKSwgXCIgKFwiKS5jb25jYXQobnVtYmVyT2ZHcm91cHMsIFwiKSBkb2VzIG5vdCBtYXRjaCB0aGUgbnVtYmVyIG9mIHBsYWNlaG9sZGVycyBpbiB0aGUgbWFya3VwICdcIikuY29uY2F0KG1hcmt1cCwgXCInIChcIikuY29uY2F0KG51bWJlck9mUGxhY2Vob2xkZXJzLCBcIilcIikpO1xuICByZXR1cm4gcmVnZXg7XG59O1xuXG52YXIgbWFrZU1lbnRpb25zTWFya3VwID0gZnVuY3Rpb24gbWFrZU1lbnRpb25zTWFya3VwKG1hcmt1cCwgaWQsIGRpc3BsYXkpIHtcbiAgcmV0dXJuIG1hcmt1cC5yZXBsYWNlKFBMQUNFSE9MREVSUy5pZCwgaWQpLnJlcGxhY2UoUExBQ0VIT0xERVJTLmRpc3BsYXksIGRpc3BsYXkpO1xufTtcblxuLy8gVGhpcyBjb250YWlucyBhbGwgdGhlIGxhdGluIGxldHRlcnMgYW5kIHRoZSByZWdleCB0aGF0IG1hdGNoIHRoZXNlIGxldHRlcnMgd2l0aCBkaWFjcml0aWNzXG4vLyBodHRwczovL3N0YWNrb3ZlcmZsb3cuY29tL3F1ZXN0aW9ucy85OTA5MDQvcmVtb3ZlLWFjY2VudHMtZGlhY3JpdGljcy1pbi1hLXN0cmluZy1pbi1qYXZhc2NyaXB0XG52YXIgbGV0dGVyc0RpYWNyaXRpY3MgPSBbe1xuICBiYXNlOiAnQScsXG4gIGxldHRlcnM6IC8oJiM2NTt8JiM5Mzk4O3wmIzY1MzEzO3wmIzE5Mjt8JiMxOTM7fCYjMTk0O3wmIzc4NDY7fCYjNzg0NDt8JiM3ODUwO3wmIzc4NDg7fCYjMTk1O3wmIzI1Njt8JiMyNTg7fCYjNzg1Njt8JiM3ODU0O3wmIzc4NjA7fCYjNzg1ODt8JiM1NTA7fCYjNDgwO3wmIzE5Njt8JiM0Nzg7fCYjNzg0Mjt8JiMxOTc7fCYjNTA2O3wmIzQ2MTt8JiM1MTI7fCYjNTE0O3wmIzc4NDA7fCYjNzg1Mjt8JiM3ODYyO3wmIzc2ODA7fCYjMjYwO3wmIzU3MDt8JiMxMTM3NTt8W1xcdTAwNDFcXHUyNEI2XFx1RkYyMVxcdTAwQzBcXHUwMEMxXFx1MDBDMlxcdTFFQTZcXHUxRUE0XFx1MUVBQVxcdTFFQThcXHUwMEMzXFx1MDEwMFxcdTAxMDJcXHUxRUIwXFx1MUVBRVxcdTFFQjRcXHUxRUIyXFx1MDIyNlxcdTAxRTBcXHUwMEM0XFx1MDFERVxcdTFFQTJcXHUwMEM1XFx1MDFGQVxcdTAxQ0RcXHUwMjAwXFx1MDIwMlxcdTFFQTBcXHUxRUFDXFx1MUVCNlxcdTFFMDBcXHUwMTA0XFx1MDIzQVxcdTJDNkZdKS9nXG59LCB7XG4gIGJhc2U6ICdBQScsXG4gIGxldHRlcnM6IC8oJiM0MjgwMjt8W1xcdUE3MzJdKS9nXG59LCB7XG4gIGJhc2U6ICdBRScsXG4gIGxldHRlcnM6IC8oJiMxOTg7fCYjNTA4O3wmIzQ4Mjt8W1xcdTAwQzZcXHUwMUZDXFx1MDFFMl0pL2dcbn0sIHtcbiAgYmFzZTogJ0FPJyxcbiAgbGV0dGVyczogLygmIzQyODA0O3xbXFx1QTczNF0pL2dcbn0sIHtcbiAgYmFzZTogJ0FVJyxcbiAgbGV0dGVyczogLygmIzQyODA2O3xbXFx1QTczNl0pL2dcbn0sIHtcbiAgYmFzZTogJ0FWJyxcbiAgbGV0dGVyczogLygmIzQyODA4O3wmIzQyODEwO3xbXFx1QTczOFxcdUE3M0FdKS9nXG59LCB7XG4gIGJhc2U6ICdBWScsXG4gIGxldHRlcnM6IC8oJiM0MjgxMjt8W1xcdUE3M0NdKS9nXG59LCB7XG4gIGJhc2U6ICdCJyxcbiAgbGV0dGVyczogLygmIzY2O3wmIzkzOTk7fCYjNjUzMTQ7fCYjNzY4Mjt8JiM3Njg0O3wmIzc2ODY7fCYjNTc5O3wmIzM4Njt8JiMzODU7fFtcXHUwMDQyXFx1MjRCN1xcdUZGMjJcXHUxRTAyXFx1MUUwNFxcdTFFMDZcXHUwMjQzXFx1MDE4MlxcdTAxODFdKS9nXG59LCB7XG4gIGJhc2U6ICdDJyxcbiAgbGV0dGVyczogLygmIzY3O3wmIzk0MDA7fCYjNjUzMTU7fCYjMjYyO3wmIzI2NDt8JiMyNjY7fCYjMjY4O3wmIzE5OTt8JiM3Njg4O3wmIzM5MTt8JiM1NzE7fCYjNDI4MTQ7fFtcXHUwMDQzXFx1MjRCOFxcdUZGMjNcXHUwMTA2XFx1MDEwOFxcdTAxMEFcXHUwMTBDXFx1MDBDN1xcdTFFMDhcXHUwMTg3XFx1MDIzQlxcdUE3M0VdKS9nXG59LCB7XG4gIGJhc2U6ICdEJyxcbiAgbGV0dGVyczogLygmIzY4O3wmIzk0MDE7fCYjNjUzMTY7fCYjNzY5MDt8JiMyNzA7fCYjNzY5Mjt8JiM3Njk2O3wmIzc2OTg7fCYjNzY5NDt8JiMyNzI7fCYjMzk1O3wmIzM5NDt8JiMzOTM7fCYjNDI4NzM7fCYjMjA4O3xbXFx1MDA0NFxcdTI0QjlcXHVGRjI0XFx1MUUwQVxcdTAxMEVcXHUxRTBDXFx1MUUxMFxcdTFFMTJcXHUxRTBFXFx1MDExMFxcdTAxOEJcXHUwMThBXFx1MDE4OVxcdUE3NzlcXHUwMEQwXSkvZ1xufSwge1xuICBiYXNlOiAnRFonLFxuICBsZXR0ZXJzOiAvKCYjNDk3O3wmIzQ1Mjt8W1xcdTAxRjFcXHUwMUM0XSkvZ1xufSwge1xuICBiYXNlOiAnRHonLFxuICBsZXR0ZXJzOiAvKCYjNDk4O3wmIzQ1Mzt8W1xcdTAxRjJcXHUwMUM1XSkvZ1xufSwge1xuICBiYXNlOiAnRScsXG4gIGxldHRlcnM6IC8oJiM2OTt8JiM5NDAyO3wmIzY1MzE3O3wmIzIwMDt8JiMyMDE7fCYjMjAyO3wmIzc4NzI7fCYjNzg3MDt8JiM3ODc2O3wmIzc4NzQ7fCYjNzg2ODt8JiMyNzQ7fCYjNzcwMDt8JiM3NzAyO3wmIzI3Njt8JiMyNzg7fCYjMjAzO3wmIzc4NjY7fCYjMjgyO3wmIzUxNjt8JiM1MTg7fCYjNzg2NDt8JiM3ODc4O3wmIzU1Mjt8JiM3NzA4O3wmIzI4MDt8JiM3NzA0O3wmIzc3MDY7fCYjNDAwO3wmIzM5ODt8W1xcdTAwNDVcXHUyNEJBXFx1RkYyNVxcdTAwQzhcXHUwMEM5XFx1MDBDQVxcdTFFQzBcXHUxRUJFXFx1MUVDNFxcdTFFQzJcXHUxRUJDXFx1MDExMlxcdTFFMTRcXHUxRTE2XFx1MDExNFxcdTAxMTZcXHUwMENCXFx1MUVCQVxcdTAxMUFcXHUwMjA0XFx1MDIwNlxcdTFFQjhcXHUxRUM2XFx1MDIyOFxcdTFFMUNcXHUwMTE4XFx1MUUxOFxcdTFFMUFcXHUwMTkwXFx1MDE4RV0pL2dcbn0sIHtcbiAgYmFzZTogJ0YnLFxuICBsZXR0ZXJzOiAvKCYjNzA7fCYjOTQwMzt8JiM2NTMxODt8JiM3NzEwO3wmIzQwMTt8JiM0Mjg3NTt8W1xcdTAwNDZcXHUyNEJCXFx1RkYyNlxcdTFFMUVcXHUwMTkxXFx1QTc3Ql0pL2dcbn0sIHtcbiAgYmFzZTogJ0cnLFxuICBsZXR0ZXJzOiAvKCYjNzE7fCYjOTQwNDt8JiM2NTMxOTt8JiM1MDA7fCYjMjg0O3wmIzc3MTI7fCYjMjg2O3wmIzI4ODt8JiM0ODY7fCYjMjkwO3wmIzQ4NDt8JiM0MDM7fCYjNDI5MTI7fCYjNDI4Nzc7fCYjNDI4Nzg7fFtcXHUwMDQ3XFx1MjRCQ1xcdUZGMjdcXHUwMUY0XFx1MDExQ1xcdTFFMjBcXHUwMTFFXFx1MDEyMFxcdTAxRTZcXHUwMTIyXFx1MDFFNFxcdTAxOTNcXHVBN0EwXFx1QTc3RFxcdUE3N0VdKS9nXG59LCB7XG4gIGJhc2U6ICdIJyxcbiAgbGV0dGVyczogLygmIzcyO3wmIzk0MDU7fCYjNjUzMjA7fCYjMjkyO3wmIzc3MTQ7fCYjNzcxODt8JiM1NDI7fCYjNzcxNjt8JiM3NzIwO3wmIzc3MjI7fCYjMjk0O3wmIzExMzY3O3wmIzExMzgxO3wmIzQyODkzO3xbXFx1MDA0OFxcdTI0QkRcXHVGRjI4XFx1MDEyNFxcdTFFMjJcXHUxRTI2XFx1MDIxRVxcdTFFMjRcXHUxRTI4XFx1MUUyQVxcdTAxMjZcXHUyQzY3XFx1MkM3NVxcdUE3OERdKS9nXG59LCB7XG4gIGJhc2U6ICdJJyxcbiAgbGV0dGVyczogLygmIzczO3wmIzk0MDY7fCYjNjUzMjE7fCYjMjA0O3wmIzIwNTt8JiMyMDY7fCYjMjk2O3wmIzI5ODt8JiMzMDA7fCYjMzA0O3wmIzIwNzt8JiM3NzI2O3wmIzc4ODA7fCYjNDYzO3wmIzUyMDt8JiM1MjI7fCYjNzg4Mjt8JiMzMDI7fCYjNzcyNDt8JiM0MDc7fFtcXHUwMDQ5XFx1MjRCRVxcdUZGMjlcXHUwMENDXFx1MDBDRFxcdTAwQ0VcXHUwMTI4XFx1MDEyQVxcdTAxMkNcXHUwMTMwXFx1MDBDRlxcdTFFMkVcXHUxRUM4XFx1MDFDRlxcdTAyMDhcXHUwMjBBXFx1MUVDQVxcdTAxMkVcXHUxRTJDXFx1MDE5N10pL2dcbn0sIHtcbiAgYmFzZTogJ0onLFxuICBsZXR0ZXJzOiAvKCYjNzQ7fCYjOTQwNzt8JiM2NTMyMjt8JiMzMDg7fCYjNTg0O3xbXFx1MDA0QVxcdTI0QkZcXHVGRjJBXFx1MDEzNFxcdTAyNDhdKS9nXG59LCB7XG4gIGJhc2U6ICdLJyxcbiAgbGV0dGVyczogLygmIzc1O3wmIzk0MDg7fCYjNjUzMjM7fCYjNzcyODt8JiM0ODg7fCYjNzczMDt8JiMzMTA7fCYjNzczMjt8JiM0MDg7fCYjMTEzNjk7fCYjNDI4MTY7fCYjNDI4MTg7fCYjNDI4MjA7fCYjNDI5MTQ7fFtcXHUwMDRCXFx1MjRDMFxcdUZGMkJcXHUxRTMwXFx1MDFFOFxcdTFFMzJcXHUwMTM2XFx1MUUzNFxcdTAxOThcXHUyQzY5XFx1QTc0MFxcdUE3NDJcXHVBNzQ0XFx1QTdBMl0pL2dcbn0sIHtcbiAgYmFzZTogJ0wnLFxuICBsZXR0ZXJzOiAvKCYjNzY7fCYjOTQwOTt8JiM2NTMyNDt8JiMzMTk7fCYjMzEzO3wmIzMxNzt8JiM3NzM0O3wmIzc3MzY7fCYjMzE1O3wmIzc3NDA7fCYjNzczODt8JiMzMjE7fCYjNTczO3wmIzExMzYyO3wmIzExMzYwO3wmIzQyODI0O3wmIzQyODIyO3wmIzQyODgwO3xbXFx1MDA0Q1xcdTI0QzFcXHVGRjJDXFx1MDEzRlxcdTAxMzlcXHUwMTNEXFx1MUUzNlxcdTFFMzhcXHUwMTNCXFx1MUUzQ1xcdTFFM0FcXHUwMTQxXFx1MDIzRFxcdTJDNjJcXHUyQzYwXFx1QTc0OFxcdUE3NDZcXHVBNzgwXSkvZ1xufSwge1xuICBiYXNlOiAnTEonLFxuICBsZXR0ZXJzOiAvKCYjNDU1O3xbXFx1MDFDN10pL2dcbn0sIHtcbiAgYmFzZTogJ0xqJyxcbiAgbGV0dGVyczogLygmIzQ1Njt8W1xcdTAxQzhdKS9nXG59LCB7XG4gIGJhc2U6ICdNJyxcbiAgbGV0dGVyczogLygmIzc3O3wmIzk0MTA7fCYjNjUzMjU7fCYjNzc0Mjt8JiM3NzQ0O3wmIzc3NDY7fCYjMTEzNzQ7fCYjNDEyO3xbXFx1MDA0RFxcdTI0QzJcXHVGRjJEXFx1MUUzRVxcdTFFNDBcXHUxRTQyXFx1MkM2RVxcdTAxOUNdKS9nXG59LCB7XG4gIGJhc2U6ICdOJyxcbiAgbGV0dGVyczogLygmIzc4O3wmIzk0MTE7fCYjNjUzMjY7fCYjNTA0O3wmIzMyMzt8JiMyMDk7fCYjNzc0ODt8JiMzMjc7fCYjNzc1MDt8JiMzMjU7fCYjNzc1NDt8JiM3NzUyO3wmIzU0NDt8JiM0MTM7fCYjNDI4OTY7fCYjNDI5MTY7fCYjMzMwO3xbXFx1MDA0RVxcdTI0QzNcXHVGRjJFXFx1MDFGOFxcdTAxNDNcXHUwMEQxXFx1MUU0NFxcdTAxNDdcXHUxRTQ2XFx1MDE0NVxcdTFFNEFcXHUxRTQ4XFx1MDIyMFxcdTAxOURcXHVBNzkwXFx1QTdBNFxcdTAxNEFdKS9nXG59LCB7XG4gIGJhc2U6ICdOSicsXG4gIGxldHRlcnM6IC8oJiM0NTg7fFtcXHUwMUNBXSkvZ1xufSwge1xuICBiYXNlOiAnTmonLFxuICBsZXR0ZXJzOiAvKCYjNDU5O3xbXFx1MDFDQl0pL2dcbn0sIHtcbiAgYmFzZTogJ08nLFxuICBsZXR0ZXJzOiAvKCYjNzk7fCYjOTQxMjt8JiM2NTMyNzt8JiMyMTA7fCYjMjExO3wmIzIxMjt8JiM3ODkwO3wmIzc4ODg7fCYjNzg5NDt8JiM3ODkyO3wmIzIxMzt8JiM3NzU2O3wmIzU1Njt8JiM3NzU4O3wmIzMzMjt8JiM3NzYwO3wmIzc3NjI7fCYjMzM0O3wmIzU1ODt8JiM1NjA7fCYjMjE0O3wmIzU1NDt8JiM3ODg2O3wmIzMzNjt8JiM0NjU7fCYjNTI0O3wmIzUyNjt8JiM0MTY7fCYjNzkwMDt8JiM3ODk4O3wmIzc5MDQ7fCYjNzkwMjt8JiM3OTA2O3wmIzc4ODQ7fCYjNzg5Njt8JiM0OTA7fCYjNDkyO3wmIzIxNjt8JiM1MTA7fCYjMzkwO3wmIzQxNTt8JiM0MjgyNjt8JiM0MjgyODt8W1xcdTAwNEZcXHUyNEM0XFx1RkYyRlxcdTAwRDJcXHUwMEQzXFx1MDBENFxcdTFFRDJcXHUxRUQwXFx1MUVENlxcdTFFRDRcXHUwMEQ1XFx1MUU0Q1xcdTAyMkNcXHUxRTRFXFx1MDE0Q1xcdTFFNTBcXHUxRTUyXFx1MDE0RVxcdTAyMkVcXHUwMjMwXFx1MDBENlxcdTAyMkFcXHUxRUNFXFx1MDE1MFxcdTAxRDFcXHUwMjBDXFx1MDIwRVxcdTAxQTBcXHUxRURDXFx1MUVEQVxcdTFFRTBcXHUxRURFXFx1MUVFMlxcdTFFQ0NcXHUxRUQ4XFx1MDFFQVxcdTAxRUNcXHUwMEQ4XFx1MDFGRVxcdTAxODZcXHUwMTlGXFx1QTc0QVxcdUE3NENdKS9nXG59LCB7XG4gIGJhc2U6ICdPRScsXG4gIGxldHRlcnM6IC8oJiMzMzg7fFtcXHUwMTUyXSkvZ1xufSwge1xuICBiYXNlOiAnT0knLFxuICBsZXR0ZXJzOiAvKCYjNDE4O3xbXFx1MDFBMl0pL2dcbn0sIHtcbiAgYmFzZTogJ09PJyxcbiAgbGV0dGVyczogLygmIzQyODMwO3xbXFx1QTc0RV0pL2dcbn0sIHtcbiAgYmFzZTogJ09VJyxcbiAgbGV0dGVyczogLygmIzU0Njt8W1xcdTAyMjJdKS9nXG59LCB7XG4gIGJhc2U6ICdQJyxcbiAgbGV0dGVyczogLygmIzgwO3wmIzk0MTM7fCYjNjUzMjg7fCYjNzc2NDt8JiM3NzY2O3wmIzQyMDt8JiMxMTM2Mzt8JiM0MjgzMjt8JiM0MjgzNDt8JiM0MjgzNjt8W1xcdTAwNTBcXHUyNEM1XFx1RkYzMFxcdTFFNTRcXHUxRTU2XFx1MDFBNFxcdTJDNjNcXHVBNzUwXFx1QTc1MlxcdUE3NTRdKS9nXG59LCB7XG4gIGJhc2U6ICdRJyxcbiAgbGV0dGVyczogLygmIzgxO3wmIzk0MTQ7fCYjNjUzMjk7fCYjNDI4Mzg7fCYjNDI4NDA7fCYjNTg2O3xbXFx1MDA1MVxcdTI0QzZcXHVGRjMxXFx1QTc1NlxcdUE3NThcXHUwMjRBXSkvZ1xufSwge1xuICBiYXNlOiAnUicsXG4gIGxldHRlcnM6IC8oJiM4Mjt8JiM5NDE1O3wmIzY1MzMwO3wmIzM0MDt8JiM3NzY4O3wmIzM0NDt8JiM1Mjg7fCYjNTMwO3wmIzc3NzA7fCYjNzc3Mjt8JiMzNDI7fCYjNzc3NDt8JiM1ODg7fCYjMTEzNjQ7fCYjNDI4NDI7fCYjNDI5MTg7fCYjNDI4ODI7fFtcXHUwMDUyXFx1MjRDN1xcdUZGMzJcXHUwMTU0XFx1MUU1OFxcdTAxNThcXHUwMjEwXFx1MDIxMlxcdTFFNUFcXHUxRTVDXFx1MDE1NlxcdTFFNUVcXHUwMjRDXFx1MkM2NFxcdUE3NUFcXHVBN0E2XFx1QTc4Ml0pL2dcbn0sIHtcbiAgYmFzZTogJ1MnLFxuICBsZXR0ZXJzOiAvKCYjODM7fCYjOTQxNjt8JiM2NTMzMTt8JiM3ODM4O3wmIzM0Njt8JiM3NzgwO3wmIzM0ODt8JiM3Nzc2O3wmIzM1Mjt8JiM3NzgyO3wmIzc3Nzg7fCYjNzc4NDt8JiM1MzY7fCYjMzUwO3wmIzExMzkwO3wmIzQyOTIwO3wmIzQyODg0O3xbXFx1MDA1M1xcdTI0QzhcXHVGRjMzXFx1MUU5RVxcdTAxNUFcXHUxRTY0XFx1MDE1Q1xcdTFFNjBcXHUwMTYwXFx1MUU2NlxcdTFFNjJcXHUxRTY4XFx1MDIxOFxcdTAxNUVcXHUyQzdFXFx1QTdBOFxcdUE3ODRdKS9nXG59LCB7XG4gIGJhc2U6ICdUJyxcbiAgbGV0dGVyczogLygmIzg0O3wmIzk0MTc7fCYjNjUzMzI7fCYjNzc4Njt8JiMzNTY7fCYjNzc4ODt8JiM1Mzg7fCYjMzU0O3wmIzc3OTI7fCYjNzc5MDt8JiMzNTg7fCYjNDI4O3wmIzQzMDt8JiM1NzQ7fCYjNDI4ODY7fFtcXHUwMDU0XFx1MjRDOVxcdUZGMzRcXHUxRTZBXFx1MDE2NFxcdTFFNkNcXHUwMjFBXFx1MDE2MlxcdTFFNzBcXHUxRTZFXFx1MDE2NlxcdTAxQUNcXHUwMUFFXFx1MDIzRVxcdUE3ODZdKS9nXG59LCB7XG4gIGJhc2U6ICdUSCcsXG4gIGxldHRlcnM6IC8oJiMyMjI7fFtcXHUwMERFXSkvZ1xufSwge1xuICBiYXNlOiAnVFonLFxuICBsZXR0ZXJzOiAvKCYjNDI3OTI7fFtcXHVBNzI4XSkvZ1xufSwge1xuICBiYXNlOiAnVScsXG4gIGxldHRlcnM6IC8oJiM4NTt8JiM5NDE4O3wmIzY1MzMzO3wmIzIxNzt8JiMyMTg7fCYjMjE5O3wmIzM2MDt8JiM3ODAwO3wmIzM2Mjt8JiM3ODAyO3wmIzM2NDt8JiMyMjA7fCYjNDc1O3wmIzQ3MTt8JiM0Njk7fCYjNDczO3wmIzc5MTA7fCYjMzY2O3wmIzM2ODt8JiM0Njc7fCYjNTMyO3wmIzUzNDt8JiM0MzE7fCYjNzkxNDt8JiM3OTEyO3wmIzc5MTg7fCYjNzkxNjt8JiM3OTIwO3wmIzc5MDg7fCYjNzc5NDt8JiMzNzA7fCYjNzc5ODt8JiM3Nzk2O3wmIzU4MDt8W1xcdTAwNTVcXHUyNENBXFx1RkYzNVxcdTAwRDlcXHUwMERBXFx1MDBEQlxcdTAxNjhcXHUxRTc4XFx1MDE2QVxcdTFFN0FcXHUwMTZDXFx1MDBEQ1xcdTAxREJcXHUwMUQ3XFx1MDFENVxcdTAxRDlcXHUxRUU2XFx1MDE2RVxcdTAxNzBcXHUwMUQzXFx1MDIxNFxcdTAyMTZcXHUwMUFGXFx1MUVFQVxcdTFFRThcXHUxRUVFXFx1MUVFQ1xcdTFFRjBcXHUxRUU0XFx1MUU3MlxcdTAxNzJcXHUxRTc2XFx1MUU3NFxcdTAyNDRdKS9nXG59LCB7XG4gIGJhc2U6ICdWJyxcbiAgbGV0dGVyczogLygmIzg2O3wmIzk0MTk7fCYjNjUzMzQ7fCYjNzgwNDt8JiM3ODA2O3wmIzQzNDt8JiM0Mjg0Njt8JiM1ODE7fFtcXHUwMDU2XFx1MjRDQlxcdUZGMzZcXHUxRTdDXFx1MUU3RVxcdTAxQjJcXHVBNzVFXFx1MDI0NV0pL2dcbn0sIHtcbiAgYmFzZTogJ1ZZJyxcbiAgbGV0dGVyczogLygmIzQyODQ4O3xbXFx1QTc2MF0pL2dcbn0sIHtcbiAgYmFzZTogJ1cnLFxuICBsZXR0ZXJzOiAvKCYjODc7fCYjOTQyMDt8JiM2NTMzNTt8JiM3ODA4O3wmIzc4MTA7fCYjMzcyO3wmIzc4MTQ7fCYjNzgxMjt8JiM3ODE2O3wmIzExMzc4O3xbXFx1MDA1N1xcdTI0Q0NcXHVGRjM3XFx1MUU4MFxcdTFFODJcXHUwMTc0XFx1MUU4NlxcdTFFODRcXHUxRTg4XFx1MkM3Ml0pL2dcbn0sIHtcbiAgYmFzZTogJ1gnLFxuICBsZXR0ZXJzOiAvKCYjODg7fCYjOTQyMTt8JiM2NTMzNjt8JiM3ODE4O3wmIzc4MjA7fFtcXHUwMDU4XFx1MjRDRFxcdUZGMzhcXHUxRThBXFx1MUU4Q10pL2dcbn0sIHtcbiAgYmFzZTogJ1knLFxuICBsZXR0ZXJzOiAvKCYjODk7fCYjOTQyMjt8JiM2NTMzNzt8JiM3OTIyO3wmIzIyMTt8JiMzNzQ7fCYjNzkyODt8JiM1NjI7fCYjNzgyMjt8JiMzNzY7fCYjNzkyNjt8JiM3OTI0O3wmIzQzNTt8JiM1OTA7fCYjNzkzNDt8W1xcdTAwNTlcXHUyNENFXFx1RkYzOVxcdTFFRjJcXHUwMEREXFx1MDE3NlxcdTFFRjhcXHUwMjMyXFx1MUU4RVxcdTAxNzhcXHUxRUY2XFx1MUVGNFxcdTAxQjNcXHUwMjRFXFx1MUVGRV0pL2dcbn0sIHtcbiAgYmFzZTogJ1onLFxuICBsZXR0ZXJzOiAvKCYjOTA7fCYjOTQyMzt8JiM2NTMzODt8JiMzNzc7fCYjNzgyNDt8JiMzNzk7fCYjMzgxO3wmIzc4MjY7fCYjNzgyODt8JiM0Mzc7fCYjNTQ4O3wmIzExMzkxO3wmIzExMzcxO3wmIzQyODUwO3xbXFx1MDA1QVxcdTI0Q0ZcXHVGRjNBXFx1MDE3OVxcdTFFOTBcXHUwMTdCXFx1MDE3RFxcdTFFOTJcXHUxRTk0XFx1MDFCNVxcdTAyMjRcXHUyQzdGXFx1MkM2QlxcdUE3NjJdKS9nXG59LCB7XG4gIGJhc2U6ICdhJyxcbiAgbGV0dGVyczogLygmIzk3O3wmIzk0MjQ7fCYjNjUzNDU7fCYjNzgzNDt8JiMyMjQ7fCYjMjI1O3wmIzIyNjt8JiM3ODQ3O3wmIzc4NDU7fCYjNzg1MTt8JiM3ODQ5O3wmIzIyNzt8JiMyNTc7fCYjMjU5O3wmIzc4NTc7fCYjNzg1NTt8JiM3ODYxO3wmIzc4NTk7fCYjNTUxO3wmIzQ4MTt8JiMyMjg7fCYjNDc5O3wmIzc4NDM7fCYjMjI5O3wmIzUwNzt8JiM0NjI7fCYjNTEzO3wmIzUxNTt8JiM3ODQxO3wmIzc4NTM7fCYjNzg2Mzt8JiM3NjgxO3wmIzI2MTt8JiMxMTM2NTt8JiM1OTI7fFtcXHUwMDYxXFx1MjREMFxcdUZGNDFcXHUxRTlBXFx1MDBFMFxcdTAwRTFcXHUwMEUyXFx1MUVBN1xcdTFFQTVcXHUxRUFCXFx1MUVBOVxcdTAwRTNcXHUwMTAxXFx1MDEwM1xcdTFFQjFcXHUxRUFGXFx1MUVCNVxcdTFFQjNcXHUwMjI3XFx1MDFFMVxcdTAwRTRcXHUwMURGXFx1MUVBM1xcdTAwRTVcXHUwMUZCXFx1MDFDRVxcdTAyMDFcXHUwMjAzXFx1MUVBMVxcdTFFQURcXHUxRUI3XFx1MUUwMVxcdTAxMDVcXHUyQzY1XFx1MDI1MF0pL2dcbn0sIHtcbiAgYmFzZTogJ2FhJyxcbiAgbGV0dGVyczogLygmIzQyODAzO3xbXFx1QTczM10pL2dcbn0sIHtcbiAgYmFzZTogJ2FlJyxcbiAgbGV0dGVyczogLygmIzIzMDt8JiM1MDk7fCYjNDgzO3xbXFx1MDBFNlxcdTAxRkRcXHUwMUUzXSkvZ1xufSwge1xuICBiYXNlOiAnYW8nLFxuICBsZXR0ZXJzOiAvKCYjNDI4MDU7fFtcXHVBNzM1XSkvZ1xufSwge1xuICBiYXNlOiAnYXUnLFxuICBsZXR0ZXJzOiAvKCYjNDI4MDc7fFtcXHVBNzM3XSkvZ1xufSwge1xuICBiYXNlOiAnYXYnLFxuICBsZXR0ZXJzOiAvKCYjNDI4MDk7fCYjNDI4MTE7fFtcXHVBNzM5XFx1QTczQl0pL2dcbn0sIHtcbiAgYmFzZTogJ2F5JyxcbiAgbGV0dGVyczogLygmIzQyODEzO3xbXFx1QTczRF0pL2dcbn0sIHtcbiAgYmFzZTogJ2InLFxuICBsZXR0ZXJzOiAvKCYjOTg7fCYjOTQyNTt8JiM2NTM0Njt8JiM3NjgzO3wmIzc2ODU7fCYjNzY4Nzt8JiMzODQ7fCYjMzg3O3wmIzU5NTt8W1xcdTAwNjJcXHUyNEQxXFx1RkY0MlxcdTFFMDNcXHUxRTA1XFx1MUUwN1xcdTAxODBcXHUwMTgzXFx1MDI1M10pL2dcbn0sIHtcbiAgYmFzZTogJ2MnLFxuICBsZXR0ZXJzOiAvKCYjOTk7fCYjOTQyNjt8JiM2NTM0Nzt8JiMyNjM7fCYjMjY1O3wmIzI2Nzt8JiMyNjk7fCYjMjMxO3wmIzc2ODk7fCYjMzkyO3wmIzU3Mjt8JiM0MjgxNTt8JiM4NTgwO3xbXFx1MDA2M1xcdTI0RDJcXHVGRjQzXFx1MDEwN1xcdTAxMDlcXHUwMTBCXFx1MDEwRFxcdTAwRTdcXHUxRTA5XFx1MDE4OFxcdTAyM0NcXHVBNzNGXFx1MjE4NF0pL2dcbn0sIHtcbiAgYmFzZTogJ2QnLFxuICBsZXR0ZXJzOiAvKCYjMTAwO3wmIzk0Mjc7fCYjNjUzNDg7fCYjNzY5MTt8JiMyNzE7fCYjNzY5Mzt8JiM3Njk3O3wmIzc2OTk7fCYjNzY5NTt8JiMyNzM7fCYjMzk2O3wmIzU5ODt8JiM1OTk7fCYjNDI4NzQ7fCYjMjQwO3xbXFx1MDA2NFxcdTI0RDNcXHVGRjQ0XFx1MUUwQlxcdTAxMEZcXHUxRTBEXFx1MUUxMVxcdTFFMTNcXHUxRTBGXFx1MDExMVxcdTAxOENcXHUwMjU2XFx1MDI1N1xcdUE3N0FcXHUwMEYwXSkvZ1xufSwge1xuICBiYXNlOiAnZHonLFxuICBsZXR0ZXJzOiAvKCYjNDk5O3wmIzQ1NDt8W1xcdTAxRjNcXHUwMUM2XSkvZ1xufSwge1xuICBiYXNlOiAnZScsXG4gIGxldHRlcnM6IC8oJiMxMDE7fCYjOTQyODt8JiM2NTM0OTt8JiMyMzI7fCYjMjMzO3wmIzIzNDt8JiM3ODczO3wmIzc4NzE7fCYjNzg3Nzt8JiM3ODc1O3wmIzc4Njk7fCYjMjc1O3wmIzc3MDE7fCYjNzcwMzt8JiMyNzc7fCYjMjc5O3wmIzIzNTt8JiM3ODY3O3wmIzI4Mzt8JiM1MTc7fCYjNTE5O3wmIzc4NjU7fCYjNzg3OTt8JiM1NTM7fCYjNzcwOTt8JiMyODE7fCYjNzcwNTt8JiM3NzA3O3wmIzU4Mzt8JiM2MDM7fCYjNDc3O3xbXFx1MDA2NVxcdTI0RDRcXHVGRjQ1XFx1MDBFOFxcdTAwRTlcXHUwMEVBXFx1MUVDMVxcdTFFQkZcXHUxRUM1XFx1MUVDM1xcdTFFQkRcXHUwMTEzXFx1MUUxNVxcdTFFMTdcXHUwMTE1XFx1MDExN1xcdTAwRUJcXHUxRUJCXFx1MDExQlxcdTAyMDVcXHUwMjA3XFx1MUVCOVxcdTFFQzdcXHUwMjI5XFx1MUUxRFxcdTAxMTlcXHUxRTE5XFx1MUUxQlxcdTAyNDdcXHUwMjVCXFx1MDFERF0pL2dcbn0sIHtcbiAgYmFzZTogJ2YnLFxuICBsZXR0ZXJzOiAvKCYjMTAyO3wmIzk0Mjk7fCYjNjUzNTA7fCYjNzcxMTt8JiM0MDI7fCYjNDI4NzY7fFtcXHUwMDY2XFx1MjRENVxcdUZGNDZcXHUxRTFGXFx1MDE5MlxcdUE3N0NdKS9nXG59LCB7XG4gIGJhc2U6ICdnJyxcbiAgbGV0dGVyczogLygmIzEwMzt8JiM5NDMwO3wmIzY1MzUxO3wmIzUwMTt8JiMyODU7fCYjNzcxMzt8JiMyODc7fCYjMjg5O3wmIzQ4Nzt8JiMyOTE7fCYjNDg1O3wmIzYwODt8JiM0MjkxMzt8JiM3NTQ1O3wmIzQyODc5O3xbXFx1MDA2N1xcdTI0RDZcXHVGRjQ3XFx1MDFGNVxcdTAxMURcXHUxRTIxXFx1MDExRlxcdTAxMjFcXHUwMUU3XFx1MDEyM1xcdTAxRTVcXHUwMjYwXFx1QTdBMVxcdTFENzlcXHVBNzdGXSkvZ1xufSwge1xuICBiYXNlOiAnaCcsXG4gIGxldHRlcnM6IC8oJiMxMDQ7fCYjOTQzMTt8JiM2NTM1Mjt8JiMyOTM7fCYjNzcxNTt8JiM3NzE5O3wmIzU0Mzt8JiM3NzE3O3wmIzc3MjE7fCYjNzcyMzt8JiM3ODMwO3wmIzI5NTt8JiMxMTM2ODt8JiMxMTM4Mjt8JiM2MTM7fFtcXHUwMDY4XFx1MjREN1xcdUZGNDhcXHUwMTI1XFx1MUUyM1xcdTFFMjdcXHUwMjFGXFx1MUUyNVxcdTFFMjlcXHUxRTJCXFx1MUU5NlxcdTAxMjdcXHUyQzY4XFx1MkM3NlxcdTAyNjVdKS9nXG59LCB7XG4gIGJhc2U6ICdodicsXG4gIGxldHRlcnM6IC8oJiM0MDU7fFtcXHUwMTk1XSkvZ1xufSwge1xuICBiYXNlOiAnaScsXG4gIGxldHRlcnM6IC8oJiMxMDU7fCYjOTQzMjt8JiM2NTM1Mzt8JiMyMzY7fCYjMjM3O3wmIzIzODt8JiMyOTc7fCYjMjk5O3wmIzMwMTt8JiMyMzk7fCYjNzcyNzt8JiM3ODgxO3wmIzQ2NDt8JiM1MjE7fCYjNTIzO3wmIzc4ODM7fCYjMzAzO3wmIzc3MjU7fCYjNjE2O3wmIzMwNTt8W1xcdTAwNjlcXHUyNEQ4XFx1RkY0OVxcdTAwRUNcXHUwMEVEXFx1MDBFRVxcdTAxMjlcXHUwMTJCXFx1MDEyRFxcdTAwRUZcXHUxRTJGXFx1MUVDOVxcdTAxRDBcXHUwMjA5XFx1MDIwQlxcdTFFQ0JcXHUwMTJGXFx1MUUyRFxcdTAyNjhcXHUwMTMxXSkvZ1xufSwge1xuICBiYXNlOiAnaWonLFxuICBsZXR0ZXJzOiAvKCYjMzA3O3xbXFx1MDEzM10pL2dcbn0sIHtcbiAgYmFzZTogJ2onLFxuICBsZXR0ZXJzOiAvKCYjMTA2O3wmIzk0MzM7fCYjNjUzNTQ7fCYjMzA5O3wmIzQ5Njt8JiM1ODU7fFtcXHUwMDZBXFx1MjREOVxcdUZGNEFcXHUwMTM1XFx1MDFGMFxcdTAyNDldKS9nXG59LCB7XG4gIGJhc2U6ICdrJyxcbiAgbGV0dGVyczogLygmIzEwNzt8JiM5NDM0O3wmIzY1MzU1O3wmIzc3Mjk7fCYjNDg5O3wmIzc3MzE7fCYjMzExO3wmIzc3MzM7fCYjNDA5O3wmIzExMzcwO3wmIzQyODE3O3wmIzQyODE5O3wmIzQyODIxO3wmIzQyOTE1O3xbXFx1MDA2QlxcdTI0REFcXHVGRjRCXFx1MUUzMVxcdTAxRTlcXHUxRTMzXFx1MDEzN1xcdTFFMzVcXHUwMTk5XFx1MkM2QVxcdUE3NDFcXHVBNzQzXFx1QTc0NVxcdUE3QTNdKS9nXG59LCB7XG4gIGJhc2U6ICdsJyxcbiAgbGV0dGVyczogLygmIzEwODt8JiM5NDM1O3wmIzY1MzU2O3wmIzMyMDt8JiMzMTQ7fCYjMzE4O3wmIzc3MzU7fCYjNzczNzt8JiMzMTY7fCYjNzc0MTt8JiM3NzM5O3wmIzMyMjt8JiM0MTA7fCYjNjE5O3wmIzExMzYxO3wmIzQyODI1O3wmIzQyODgxO3wmIzQyODIzO3xbXFx1MDA2Q1xcdTI0REJcXHVGRjRDXFx1MDE0MFxcdTAxM0FcXHUwMTNFXFx1MUUzN1xcdTFFMzlcXHUwMTNDXFx1MUUzRFxcdTFFM0JcXHUwMTQyXFx1MDE5QVxcdTAyNkJcXHUyQzYxXFx1QTc0OVxcdUE3ODFcXHVBNzQ3XSkvZ1xufSwge1xuICBiYXNlOiAnbGonLFxuICBsZXR0ZXJzOiAvKCYjNDU3O3xbXFx1MDFDOV0pL2dcbn0sIHtcbiAgYmFzZTogJ20nLFxuICBsZXR0ZXJzOiAvKCYjMTA5O3wmIzk0MzY7fCYjNjUzNTc7fCYjNzc0Mzt8JiM3NzQ1O3wmIzc3NDc7fCYjNjI1O3wmIzYyMzt8W1xcdTAwNkRcXHUyNERDXFx1RkY0RFxcdTFFM0ZcXHUxRTQxXFx1MUU0M1xcdTAyNzFcXHUwMjZGXSkvZ1xufSwge1xuICBiYXNlOiAnbicsXG4gIGxldHRlcnM6IC8oJiMxMTA7fCYjOTQzNzt8JiM2NTM1ODt8JiM1MDU7fCYjMzI0O3wmIzI0MTt8JiM3NzQ5O3wmIzMyODt8JiM3NzUxO3wmIzMyNjt8JiM3NzU1O3wmIzc3NTM7fCYjNDE0O3wmIzYyNjt8JiMzMjk7fCYjNDI4OTc7fCYjNDI5MTc7fCYjMzMxO3xbXFx1MDA2RVxcdTI0RERcXHVGRjRFXFx1MDFGOVxcdTAxNDRcXHUwMEYxXFx1MUU0NVxcdTAxNDhcXHUxRTQ3XFx1MDE0NlxcdTFFNEJcXHUxRTQ5XFx1MDE5RVxcdTAyNzJcXHUwMTQ5XFx1QTc5MVxcdUE3QTVcXHUwMTRCXSkvZ1xufSwge1xuICBiYXNlOiAnbmonLFxuICBsZXR0ZXJzOiAvKCYjNDYwO3xbXFx1MDFDQ10pL2dcbn0sIHtcbiAgYmFzZTogJ28nLFxuICBsZXR0ZXJzOiAvKCYjMTExO3wmIzk0Mzg7fCYjNjUzNTk7fCYjMjQyO3wmIzI0Mzt8JiMyNDQ7fCYjNzg5MTt8JiM3ODg5O3wmIzc4OTU7fCYjNzg5Mzt8JiMyNDU7fCYjNzc1Nzt8JiM1NTc7fCYjNzc1OTt8JiMzMzM7fCYjNzc2MTt8JiM3NzYzO3wmIzMzNTt8JiM1NTk7fCYjNTYxO3wmIzI0Njt8JiM1NTU7fCYjNzg4Nzt8JiMzMzc7fCYjNDY2O3wmIzUyNTt8JiM1Mjc7fCYjNDE3O3wmIzc5MDE7fCYjNzg5OTt8JiM3OTA1O3wmIzc5MDM7fCYjNzkwNzt8JiM3ODg1O3wmIzc4OTc7fCYjNDkxO3wmIzQ5Mzt8JiMyNDg7fCYjNTExO3wmIzU5Njt8JiM0MjgyNzt8JiM0MjgyOTt8JiM2Mjk7fFtcXHUwMDZGXFx1MjRERVxcdUZGNEZcXHUwMEYyXFx1MDBGM1xcdTAwRjRcXHUxRUQzXFx1MUVEMVxcdTFFRDdcXHUxRUQ1XFx1MDBGNVxcdTFFNERcXHUwMjJEXFx1MUU0RlxcdTAxNERcXHUxRTUxXFx1MUU1M1xcdTAxNEZcXHUwMjJGXFx1MDIzMVxcdTAwRjZcXHUwMjJCXFx1MUVDRlxcdTAxNTFcXHUwMUQyXFx1MDIwRFxcdTAyMEZcXHUwMUExXFx1MUVERFxcdTFFREJcXHUxRUUxXFx1MUVERlxcdTFFRTNcXHUxRUNEXFx1MUVEOVxcdTAxRUJcXHUwMUVEXFx1MDBGOFxcdTAxRkZcXHUwMjU0XFx1QTc0QlxcdUE3NERcXHUwMjc1XSkvZ1xufSwge1xuICBiYXNlOiAnb2UnLFxuICBsZXR0ZXJzOiAvKCYjMzM5O3xbXFx1MDE1M10pL2dcbn0sIHtcbiAgYmFzZTogJ29pJyxcbiAgbGV0dGVyczogLygmIzQxOTt8W1xcdTAxQTNdKS9nXG59LCB7XG4gIGJhc2U6ICdvdScsXG4gIGxldHRlcnM6IC8oJiM1NDc7fFtcXHUwMjIzXSkvZ1xufSwge1xuICBiYXNlOiAnb28nLFxuICBsZXR0ZXJzOiAvKCYjNDI4MzE7fFtcXHVBNzRGXSkvZ1xufSwge1xuICBiYXNlOiAncCcsXG4gIGxldHRlcnM6IC8oJiMxMTI7fCYjOTQzOTt8JiM2NTM2MDt8JiM3NzY1O3wmIzc3Njc7fCYjNDIxO3wmIzc1NDk7fCYjNDI4MzM7fCYjNDI4MzU7fCYjNDI4Mzc7fFtcXHUwMDcwXFx1MjRERlxcdUZGNTBcXHUxRTU1XFx1MUU1N1xcdTAxQTVcXHUxRDdEXFx1QTc1MVxcdUE3NTNcXHVBNzU1XSkvZ1xufSwge1xuICBiYXNlOiAncScsXG4gIGxldHRlcnM6IC8oJiMxMTM7fCYjOTQ0MDt8JiM2NTM2MTt8JiM1ODc7fCYjNDI4Mzk7fCYjNDI4NDE7fFtcXHUwMDcxXFx1MjRFMFxcdUZGNTFcXHUwMjRCXFx1QTc1N1xcdUE3NTldKS9nXG59LCB7XG4gIGJhc2U6ICdyJyxcbiAgbGV0dGVyczogLygmIzExNDt8JiM5NDQxO3wmIzY1MzYyO3wmIzM0MTt8JiM3NzY5O3wmIzM0NTt8JiM1Mjk7fCYjNTMxO3wmIzc3NzE7fCYjNzc3Mzt8JiMzNDM7fCYjNzc3NTt8JiM1ODk7fCYjNjM3O3wmIzQyODQzO3wmIzQyOTE5O3wmIzQyODgzO3xbXFx1MDA3MlxcdTI0RTFcXHVGRjUyXFx1MDE1NVxcdTFFNTlcXHUwMTU5XFx1MDIxMVxcdTAyMTNcXHUxRTVCXFx1MUU1RFxcdTAxNTdcXHUxRTVGXFx1MDI0RFxcdTAyN0RcXHVBNzVCXFx1QTdBN1xcdUE3ODNdKS9nXG59LCB7XG4gIGJhc2U6ICdzJyxcbiAgbGV0dGVyczogLygmIzExNTt8JiM5NDQyO3wmIzY1MzYzO3wmIzM0Nzt8JiM3NzgxO3wmIzM0OTt8JiM3Nzc3O3wmIzM1Mzt8JiM3NzgzO3wmIzc3Nzk7fCYjNzc4NTt8JiM1Mzc7fCYjMzUxO3wmIzU3NTt8JiM0MjkyMTt8JiM0Mjg4NTt8JiM3ODM1O3wmIzM4Mzt8W1xcdTAwNzNcXHUyNEUyXFx1RkY1M1xcdTAxNUJcXHUxRTY1XFx1MDE1RFxcdTFFNjFcXHUwMTYxXFx1MUU2N1xcdTFFNjNcXHUxRTY5XFx1MDIxOVxcdTAxNUZcXHUwMjNGXFx1QTdBOVxcdUE3ODVcXHUxRTlCXFx1MDE3Rl0pL2dcbn0sIHtcbiAgYmFzZTogJ3NzJyxcbiAgbGV0dGVyczogLygmIzIyMzt8W1xcdTAwREZdKS9nXG59LCB7XG4gIGJhc2U6ICd0JyxcbiAgbGV0dGVyczogLygmIzExNjt8JiM5NDQzO3wmIzY1MzY0O3wmIzc3ODc7fCYjNzgzMTt8JiMzNTc7fCYjNzc4OTt8JiM1Mzk7fCYjMzU1O3wmIzc3OTM7fCYjNzc5MTt8JiMzNTk7fCYjNDI5O3wmIzY0ODt8JiMxMTM2Njt8JiM0Mjg4Nzt8W1xcdTAwNzRcXHUyNEUzXFx1RkY1NFxcdTFFNkJcXHUxRTk3XFx1MDE2NVxcdTFFNkRcXHUwMjFCXFx1MDE2M1xcdTFFNzFcXHUxRTZGXFx1MDE2N1xcdTAxQURcXHUwMjg4XFx1MkM2NlxcdUE3ODddKS9nXG59LCB7XG4gIGJhc2U6ICd0aCcsXG4gIGxldHRlcnM6IC8oJiMyNTQ7fFtcXHUwMEZFXSkvZ1xufSwge1xuICBiYXNlOiAndHonLFxuICBsZXR0ZXJzOiAvKCYjNDI3OTM7fFtcXHVBNzI5XSkvZ1xufSwge1xuICBiYXNlOiAndScsXG4gIGxldHRlcnM6IC8oJiMxMTc7fCYjOTQ0NDt8JiM2NTM2NTt8JiMyNDk7fCYjMjUwO3wmIzI1MTt8JiMzNjE7fCYjNzgwMTt8JiMzNjM7fCYjNzgwMzt8JiMzNjU7fCYjMjUyO3wmIzQ3Njt8JiM0NzI7fCYjNDcwO3wmIzQ3NDt8JiM3OTExO3wmIzM2Nzt8JiMzNjk7fCYjNDY4O3wmIzUzMzt8JiM1MzU7fCYjNDMyO3wmIzc5MTU7fCYjNzkxMzt8JiM3OTE5O3wmIzc5MTc7fCYjNzkyMTt8JiM3OTA5O3wmIzc3OTU7fCYjMzcxO3wmIzc3OTk7fCYjNzc5Nzt8JiM2NDk7fFtcXHUwMDc1XFx1MjRFNFxcdUZGNTVcXHUwMEY5XFx1MDBGQVxcdTAwRkJcXHUwMTY5XFx1MUU3OVxcdTAxNkJcXHUxRTdCXFx1MDE2RFxcdTAwRkNcXHUwMURDXFx1MDFEOFxcdTAxRDZcXHUwMURBXFx1MUVFN1xcdTAxNkZcXHUwMTcxXFx1MDFENFxcdTAyMTVcXHUwMjE3XFx1MDFCMFxcdTFFRUJcXHUxRUU5XFx1MUVFRlxcdTFFRURcXHUxRUYxXFx1MUVFNVxcdTFFNzNcXHUwMTczXFx1MUU3N1xcdTFFNzVcXHUwMjg5XSkvZ1xufSwge1xuICBiYXNlOiAndicsXG4gIGxldHRlcnM6IC8oJiMxMTg7fCYjOTQ0NTt8JiM2NTM2Njt8JiM3ODA1O3wmIzc4MDc7fCYjNjUxO3wmIzQyODQ3O3wmIzY1Mjt8W1xcdTAwNzZcXHUyNEU1XFx1RkY1NlxcdTFFN0RcXHUxRTdGXFx1MDI4QlxcdUE3NUZcXHUwMjhDXSkvZ1xufSwge1xuICBiYXNlOiAndnknLFxuICBsZXR0ZXJzOiAvKCYjNDI4NDk7fFtcXHVBNzYxXSkvZ1xufSwge1xuICBiYXNlOiAndycsXG4gIGxldHRlcnM6IC8oJiMxMTk7fCYjOTQ0Njt8JiM2NTM2Nzt8JiM3ODA5O3wmIzc4MTE7fCYjMzczO3wmIzc4MTU7fCYjNzgxMzt8JiM3ODMyO3wmIzc4MTc7fCYjMTEzNzk7fFtcXHUwMDc3XFx1MjRFNlxcdUZGNTdcXHUxRTgxXFx1MUU4M1xcdTAxNzVcXHUxRTg3XFx1MUU4NVxcdTFFOThcXHUxRTg5XFx1MkM3M10pL2dcbn0sIHtcbiAgYmFzZTogJ3gnLFxuICBsZXR0ZXJzOiAvKCYjMTIwO3wmIzk0NDc7fCYjNjUzNjg7fCYjNzgxOTt8JiM3ODIxO3xbXFx1MDA3OFxcdTI0RTdcXHVGRjU4XFx1MUU4QlxcdTFFOERdKS9nXG59LCB7XG4gIGJhc2U6ICd5JyxcbiAgbGV0dGVyczogLygmIzEyMTt8JiM5NDQ4O3wmIzY1MzY5O3wmIzc5MjM7fCYjMjUzO3wmIzM3NTt8JiM3OTI5O3wmIzU2Mzt8JiM3ODIzO3wmIzI1NTt8JiM3OTI3O3wmIzc4MzM7fCYjNzkyNTt8JiM0MzY7fCYjNTkxO3wmIzc5MzU7fFtcXHUwMDc5XFx1MjRFOFxcdUZGNTlcXHUxRUYzXFx1MDBGRFxcdTAxNzdcXHUxRUY5XFx1MDIzM1xcdTFFOEZcXHUwMEZGXFx1MUVGN1xcdTFFOTlcXHUxRUY1XFx1MDFCNFxcdTAyNEZcXHUxRUZGXSkvZ1xufSwge1xuICBiYXNlOiAneicsXG4gIGxldHRlcnM6IC8oJiMxMjI7fCYjOTQ0OTt8JiM2NTM3MDt8JiMzNzg7fCYjNzgyNTt8JiMzODA7fCYjMzgyO3wmIzc4Mjc7fCYjNzgyOTt8JiM0Mzg7fCYjNTQ5O3wmIzU3Njt8JiMxMTM3Mjt8JiM0Mjg1MTt8W1xcdTAwN0FcXHUyNEU5XFx1RkY1QVxcdTAxN0FcXHUxRTkxXFx1MDE3Q1xcdTAxN0VcXHUxRTkzXFx1MUU5NVxcdTAxQjZcXHUwMjI1XFx1MDI0MFxcdTJDNkNcXHVBNzYzXSkvZ1xufV07XG5cbnZhciByZW1vdmVBY2NlbnRzID0gZnVuY3Rpb24gcmVtb3ZlQWNjZW50cyhzdHIpIHtcbiAgdmFyIGZvcm1hdHRlZFN0ciA9IHN0cjtcbiAgbGV0dGVyc0RpYWNyaXRpY3MuZm9yRWFjaChmdW5jdGlvbiAobGV0dGVyRGlhY3JpdGljcykge1xuICAgIGZvcm1hdHRlZFN0ciA9IGZvcm1hdHRlZFN0ci5yZXBsYWNlKGxldHRlckRpYWNyaXRpY3MubGV0dGVycywgbGV0dGVyRGlhY3JpdGljcy5iYXNlKTtcbiAgfSk7XG4gIHJldHVybiBmb3JtYXR0ZWRTdHI7XG59O1xuXG52YXIgbm9ybWFsaXplU3RyaW5nID0gZnVuY3Rpb24gbm9ybWFsaXplU3RyaW5nKHN0cikge1xuICByZXR1cm4gcmVtb3ZlQWNjZW50cyhzdHIpLnRvTG93ZXJDYXNlKCk7XG59O1xuXG52YXIgZ2V0U3Vic3RyaW5nSW5kZXggPSBmdW5jdGlvbiBnZXRTdWJzdHJpbmdJbmRleChzdHIsIHN1YnN0ciwgaWdub3JlQWNjZW50cykge1xuICBpZiAoIWlnbm9yZUFjY2VudHMpIHtcbiAgICByZXR1cm4gc3RyLnRvTG93ZXJDYXNlKCkuaW5kZXhPZihzdWJzdHIudG9Mb3dlckNhc2UoKSk7XG4gIH1cblxuICByZXR1cm4gbm9ybWFsaXplU3RyaW5nKHN0cikuaW5kZXhPZihub3JtYWxpemVTdHJpbmcoc3Vic3RyKSk7XG59O1xuXG52YXIgaXNPYmplY3RFcXVhbCA9IGZ1bmN0aW9uIGlzT2JqZWN0RXF1YWwob2JqMSwgb2JqMikge1xuICBpZiAoIW9iajEgfHwgIW9iajIpIHtcbiAgICByZXR1cm4gZmFsc2U7XG4gIH1cblxuICB2YXIga2V5czEgPSBPYmplY3Qua2V5cyhvYmoxKTtcbiAgdmFyIGtleXMyID0gT2JqZWN0LmtleXMob2JqMik7XG5cbiAgaWYgKGtleXMxLmxlbmd0aCAhPT0ga2V5czIubGVuZ3RoKSB7XG4gICAgcmV0dXJuIGZhbHNlO1xuICB9XG5cbiAgZm9yICh2YXIgaSA9IDA7IGkgPCBrZXlzMS5sZW5ndGg7IGkrKykge1xuICAgIHZhciBrZXkgPSBrZXlzMVtpXTtcblxuICAgIGlmIChvYmoxW2tleV0gIT09IG9iajJba2V5XSkge1xuICAgICAgcmV0dXJuIGZhbHNlO1xuICAgIH1cbiAgfVxuXG4gIHJldHVybiB0cnVlO1xufTtcblxudmFyIGlzTnVtYmVyID0gZnVuY3Rpb24gaXNOdW1iZXIodmFsKSB7XG4gIHJldHVybiB0eXBlb2YgdmFsID09PSAnbnVtYmVyJztcbn07XG5cbnZhciBrZXlzID0gZnVuY3Rpb24ga2V5cyhvYmopIHtcbiAgcmV0dXJuIG9iaiA9PT0gT2JqZWN0KG9iaikgPyBPYmplY3Qua2V5cyhvYmopIDogW107XG59O1xuXG52YXIgb21pdCA9IGZ1bmN0aW9uIG9taXQob2JqKSB7XG4gIHZhciBfcmVmO1xuXG4gIGZvciAodmFyIF9sZW4gPSBhcmd1bWVudHMubGVuZ3RoLCByZXN0ID0gbmV3IEFycmF5KF9sZW4gPiAxID8gX2xlbiAtIDEgOiAwKSwgX2tleSA9IDE7IF9rZXkgPCBfbGVuOyBfa2V5KyspIHtcbiAgICByZXN0W19rZXkgLSAxXSA9IGFyZ3VtZW50c1tfa2V5XTtcbiAgfVxuXG4gIHZhciBrZXlzID0gKF9yZWYgPSBbXSkuY29uY2F0LmFwcGx5KF9yZWYsIHJlc3QpO1xuXG4gIHJldHVybiBPYmplY3Qua2V5cyhvYmopLnJlZHVjZShmdW5jdGlvbiAoYWNjLCBrKSB7XG4gICAgaWYgKG9iai5oYXNPd25Qcm9wZXJ0eShrKSAmJiAha2V5cy5pbmNsdWRlcyhrKSAmJiBvYmpba10gIT09IHVuZGVmaW5lZCkge1xuICAgICAgYWNjW2tdID0gb2JqW2tdO1xuICAgIH1cblxuICAgIHJldHVybiBhY2M7XG4gIH0sIHt9KTtcbn07XG5cbmZ1bmN0aW9uIG93bktleXMob2JqZWN0LCBlbnVtZXJhYmxlT25seSkgeyB2YXIga2V5cyA9IE9iamVjdC5rZXlzKG9iamVjdCk7IGlmIChPYmplY3QuZ2V0T3duUHJvcGVydHlTeW1ib2xzKSB7IHZhciBzeW1ib2xzID0gT2JqZWN0LmdldE93blByb3BlcnR5U3ltYm9scyhvYmplY3QpOyBpZiAoZW51bWVyYWJsZU9ubHkpIHN5bWJvbHMgPSBzeW1ib2xzLmZpbHRlcihmdW5jdGlvbiAoc3ltKSB7IHJldHVybiBPYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yKG9iamVjdCwgc3ltKS5lbnVtZXJhYmxlOyB9KTsga2V5cy5wdXNoLmFwcGx5KGtleXMsIHN5bWJvbHMpOyB9IHJldHVybiBrZXlzOyB9XG5cbmZ1bmN0aW9uIF9vYmplY3RTcHJlYWQodGFyZ2V0KSB7IGZvciAodmFyIGkgPSAxOyBpIDwgYXJndW1lbnRzLmxlbmd0aDsgaSsrKSB7IHZhciBzb3VyY2UgPSBhcmd1bWVudHNbaV0gIT0gbnVsbCA/IGFyZ3VtZW50c1tpXSA6IHt9OyBpZiAoaSAlIDIpIHsgb3duS2V5cyhPYmplY3Qoc291cmNlKSwgdHJ1ZSkuZm9yRWFjaChmdW5jdGlvbiAoa2V5KSB7IF9kZWZpbmVQcm9wZXJ0eSh0YXJnZXQsIGtleSwgc291cmNlW2tleV0pOyB9KTsgfSBlbHNlIGlmIChPYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9ycykgeyBPYmplY3QuZGVmaW5lUHJvcGVydGllcyh0YXJnZXQsIE9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3JzKHNvdXJjZSkpOyB9IGVsc2UgeyBvd25LZXlzKE9iamVjdChzb3VyY2UpKS5mb3JFYWNoKGZ1bmN0aW9uIChrZXkpIHsgT2JqZWN0LmRlZmluZVByb3BlcnR5KHRhcmdldCwga2V5LCBPYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yKHNvdXJjZSwga2V5KSk7IH0pOyB9IH0gcmV0dXJuIHRhcmdldDsgfVxuXG52YXIgX2dlbmVyYXRlQ29tcG9uZW50S2V5ID0gZnVuY3Rpb24gX2dlbmVyYXRlQ29tcG9uZW50S2V5KHVzZWRLZXlzLCBpZCkge1xuICBpZiAoIXVzZWRLZXlzLmhhc093blByb3BlcnR5KGlkKSkge1xuICAgIHVzZWRLZXlzW2lkXSA9IDA7XG4gIH0gZWxzZSB7XG4gICAgdXNlZEtleXNbaWRdKys7XG4gIH1cblxuICByZXR1cm4gaWQgKyAnXycgKyB1c2VkS2V5c1tpZF07XG59O1xuXG52YXIgSGlnaGxpZ2h0ZXIgPSAvKiNfX1BVUkVfXyovZnVuY3Rpb24gKF9Db21wb25lbnQpIHtcbiAgX2luaGVyaXRzKEhpZ2hsaWdodGVyLCBfQ29tcG9uZW50KTtcblxuICBmdW5jdGlvbiBIaWdobGlnaHRlcigpIHtcbiAgICB2YXIgX3RoaXM7XG5cbiAgICBfY2xhc3NDYWxsQ2hlY2sodGhpcywgSGlnaGxpZ2h0ZXIpO1xuXG4gICAgX3RoaXMgPSBfcG9zc2libGVDb25zdHJ1Y3RvclJldHVybih0aGlzLCBfZ2V0UHJvdG90eXBlT2YoSGlnaGxpZ2h0ZXIpLmFwcGx5KHRoaXMsIGFyZ3VtZW50cykpO1xuICAgIF90aGlzLnN0YXRlID0ge1xuICAgICAgbGFzdFBvc2l0aW9uOiB7fVxuICAgIH07XG4gICAgcmV0dXJuIF90aGlzO1xuICB9XG5cbiAgX2NyZWF0ZUNsYXNzKEhpZ2hsaWdodGVyLCBbe1xuICAgIGtleTogXCJjb21wb25lbnREaWRNb3VudFwiLFxuICAgIHZhbHVlOiBmdW5jdGlvbiBjb21wb25lbnREaWRNb3VudCgpIHtcbiAgICAgIHRoaXMubm90aWZ5Q2FyZXRQb3NpdGlvbigpO1xuICAgIH1cbiAgfSwge1xuICAgIGtleTogXCJjb21wb25lbnREaWRVcGRhdGVcIixcbiAgICB2YWx1ZTogZnVuY3Rpb24gY29tcG9uZW50RGlkVXBkYXRlKCkge1xuICAgICAgdGhpcy5ub3RpZnlDYXJldFBvc2l0aW9uKCk7XG4gICAgfVxuICB9LCB7XG4gICAga2V5OiBcIm5vdGlmeUNhcmV0UG9zaXRpb25cIixcbiAgICB2YWx1ZTogZnVuY3Rpb24gbm90aWZ5Q2FyZXRQb3NpdGlvbigpIHtcbiAgICAgIGlmICghdGhpcy5jYXJldFJlZikge1xuICAgICAgICByZXR1cm47XG4gICAgICB9XG5cbiAgICAgIHZhciBwb3NpdGlvbiA9IHtcbiAgICAgICAgbGVmdDogdGhpcy5jYXJldFJlZi5vZmZzZXRMZWZ0LFxuICAgICAgICB0b3A6IHRoaXMuY2FyZXRSZWYub2Zmc2V0VG9wXG4gICAgICB9O1xuICAgICAgdmFyIGxhc3RQb3NpdGlvbiA9IHRoaXMuc3RhdGUubGFzdFBvc2l0aW9uO1xuXG4gICAgICBpZiAoaXNPYmplY3RFcXVhbChsYXN0UG9zaXRpb24sIHBvc2l0aW9uKSkge1xuICAgICAgICByZXR1cm47XG4gICAgICB9XG5cbiAgICAgIHRoaXMuc2V0U3RhdGUoe1xuICAgICAgICBsYXN0UG9zaXRpb246IHBvc2l0aW9uXG4gICAgICB9KTtcbiAgICAgIHRoaXMucHJvcHMub25DYXJldFBvc2l0aW9uQ2hhbmdlKHBvc2l0aW9uKTtcbiAgICB9XG4gIH0sIHtcbiAgICBrZXk6IFwicmVuZGVyXCIsXG4gICAgdmFsdWU6IGZ1bmN0aW9uIHJlbmRlcigpIHtcbiAgICAgIHZhciBfdGhpczIgPSB0aGlzO1xuXG4gICAgICB2YXIgX3RoaXMkcHJvcHMgPSB0aGlzLnByb3BzLFxuICAgICAgICAgIHNlbGVjdGlvbiA9IF90aGlzJHByb3BzLnNlbGVjdGlvbixcbiAgICAgICAgICB2YWx1ZSA9IF90aGlzJHByb3BzLnZhbHVlLFxuICAgICAgICAgIHN0eWxlID0gX3RoaXMkcHJvcHMuc3R5bGUsXG4gICAgICAgICAgaW5wdXRTdHlsZSA9IF90aGlzJHByb3BzLmlucHV0U3R5bGUsXG4gICAgICAgICAgY2hpbGRyZW4gPSBfdGhpcyRwcm9wcy5jaGlsZHJlbjtcbiAgICAgIHZhciBjb25maWcgPSByZWFkQ29uZmlnRnJvbUNoaWxkcmVuKGNoaWxkcmVuKTsgLy8gSWYgdGhlcmUncyBhIGNhcmV0IChpLmUuIG5vIHJhbmdlIHNlbGVjdGlvbiksIG1hcCB0aGUgY2FyZXQgcG9zaXRpb24gaW50byB0aGUgbWFya2VkIHVwIHZhbHVlXG5cbiAgICAgIHZhciBjYXJldFBvc2l0aW9uSW5NYXJrdXA7XG5cbiAgICAgIGlmIChzZWxlY3Rpb24uc3RhcnQgPT09IHNlbGVjdGlvbi5lbmQpIHtcbiAgICAgICAgY2FyZXRQb3NpdGlvbkluTWFya3VwID0gbWFwUGxhaW5UZXh0SW5kZXgodmFsdWUsIGNvbmZpZywgc2VsZWN0aW9uLnN0YXJ0LCAnU1RBUlQnKTtcbiAgICAgIH1cblxuICAgICAgdmFyIHJlc3VsdENvbXBvbmVudHMgPSBbXTtcbiAgICAgIHZhciBjb21wb25lbnRLZXlzID0ge307IC8vIHN0YXJ0IGJ5IGFwcGVuZGluZyBkaXJlY3RseSB0byB0aGUgcmVzdWx0Q29tcG9uZW50c1xuXG4gICAgICB2YXIgY29tcG9uZW50cyA9IHJlc3VsdENvbXBvbmVudHM7XG4gICAgICB2YXIgc3Vic3RyaW5nQ29tcG9uZW50S2V5ID0gMDtcblxuICAgICAgdmFyIHRleHRJdGVyYXRlZSA9IGZ1bmN0aW9uIHRleHRJdGVyYXRlZShzdWJzdHIsIGluZGV4LCBpbmRleEluUGxhaW5UZXh0KSB7XG4gICAgICAgIC8vIGNoZWNrIHdoZXRoZXIgdGhlIGNhcmV0IGVsZW1lbnQgaGFzIHRvIGJlIGluc2VydGVkIGluc2lkZSB0aGUgY3VycmVudCBwbGFpbiBzdWJzdHJpbmdcbiAgICAgICAgaWYgKGlzTnVtYmVyKGNhcmV0UG9zaXRpb25Jbk1hcmt1cCkgJiYgY2FyZXRQb3NpdGlvbkluTWFya3VwID49IGluZGV4ICYmIGNhcmV0UG9zaXRpb25Jbk1hcmt1cCA8PSBpbmRleCArIHN1YnN0ci5sZW5ndGgpIHtcbiAgICAgICAgICAvLyBpZiB5ZXMsIHNwbGl0IHN1YnN0ciBhdCB0aGUgY2FyZXQgcG9zaXRpb24gYW5kIGluc2VydCB0aGUgY2FyZXQgY29tcG9uZW50XG4gICAgICAgICAgdmFyIHNwbGl0SW5kZXggPSBjYXJldFBvc2l0aW9uSW5NYXJrdXAgLSBpbmRleDtcbiAgICAgICAgICBjb21wb25lbnRzLnB1c2goX3RoaXMyLnJlbmRlclN1YnN0cmluZyhzdWJzdHIuc3Vic3RyaW5nKDAsIHNwbGl0SW5kZXgpLCBzdWJzdHJpbmdDb21wb25lbnRLZXkpKTsgLy8gYWRkIGFsbCBmb2xsb3dpbmcgc3Vic3RyaW5ncyBhbmQgbWVudGlvbiBjb21wb25lbnRzIGFzIGNoaWxkcmVuIG9mIHRoZSBjYXJldCBjb21wb25lbnRcblxuICAgICAgICAgIGNvbXBvbmVudHMgPSBbX3RoaXMyLnJlbmRlclN1YnN0cmluZyhzdWJzdHIuc3Vic3RyaW5nKHNwbGl0SW5kZXgpLCBzdWJzdHJpbmdDb21wb25lbnRLZXkpXTtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAvLyBvdGhlcndpc2UganVzdCBwdXNoIHRoZSBwbGFpbiB0ZXh0IHN1YnN0cmluZ1xuICAgICAgICAgIGNvbXBvbmVudHMucHVzaChfdGhpczIucmVuZGVyU3Vic3RyaW5nKHN1YnN0ciwgc3Vic3RyaW5nQ29tcG9uZW50S2V5KSk7XG4gICAgICAgIH1cblxuICAgICAgICBzdWJzdHJpbmdDb21wb25lbnRLZXkrKztcbiAgICAgIH07XG5cbiAgICAgIHZhciBtZW50aW9uSXRlcmF0ZWUgPSBmdW5jdGlvbiBtZW50aW9uSXRlcmF0ZWUobWFya3VwLCBpbmRleCwgaW5kZXhJblBsYWluVGV4dCwgaWQsIGRpc3BsYXksIG1lbnRpb25DaGlsZEluZGV4LCBsYXN0TWVudGlvbkVuZEluZGV4KSB7XG4gICAgICAgIC8vIGdlbmVyYXRlIGEgY29tcG9uZW50IGtleSBiYXNlZCBvbiB0aGUgaWRcbiAgICAgICAgdmFyIGtleSA9IF9nZW5lcmF0ZUNvbXBvbmVudEtleShjb21wb25lbnRLZXlzLCBpZCk7XG5cbiAgICAgICAgY29tcG9uZW50cy5wdXNoKF90aGlzMi5nZXRNZW50aW9uQ29tcG9uZW50Rm9yTWF0Y2goaWQsIGRpc3BsYXksIG1lbnRpb25DaGlsZEluZGV4LCBrZXkpKTtcbiAgICAgIH07XG5cbiAgICAgIGl0ZXJhdGVNZW50aW9uc01hcmt1cCh2YWx1ZSwgY29uZmlnLCBtZW50aW9uSXRlcmF0ZWUsIHRleHRJdGVyYXRlZSk7IC8vIGFwcGVuZCBhIHNwYW4gY29udGFpbmluZyBhIHNwYWNlLCB0byBlbnN1cmUgdGhlIGxhc3QgdGV4dCBsaW5lIGhhcyB0aGUgY29ycmVjdCBoZWlnaHRcblxuICAgICAgY29tcG9uZW50cy5wdXNoKCcgJyk7XG5cbiAgICAgIGlmIChjb21wb25lbnRzICE9PSByZXN1bHRDb21wb25lbnRzKSB7XG4gICAgICAgIC8vIGlmIGEgY2FyZXQgY29tcG9uZW50IGlzIHRvIGJlIHJlbmRlcmVkLCBhZGQgYWxsIGNvbXBvbmVudHMgdGhhdCBmb2xsb3dlZCBhcyBpdHMgY2hpbGRyZW5cbiAgICAgICAgcmVzdWx0Q29tcG9uZW50cy5wdXNoKHRoaXMucmVuZGVySGlnaGxpZ2h0ZXJDYXJldChjb21wb25lbnRzKSk7XG4gICAgICB9XG5cbiAgICAgIHJldHVybiBSZWFjdC5jcmVhdGVFbGVtZW50KFwiZGl2XCIsIF9leHRlbmRzKHt9LCBzdHlsZSwge1xuICAgICAgICBzdHlsZTogX29iamVjdFNwcmVhZCh7fSwgaW5wdXRTdHlsZSwge30sIHN0eWxlLnN0eWxlKVxuICAgICAgfSksIHJlc3VsdENvbXBvbmVudHMpO1xuICAgIH1cbiAgfSwge1xuICAgIGtleTogXCJyZW5kZXJTdWJzdHJpbmdcIixcbiAgICB2YWx1ZTogZnVuY3Rpb24gcmVuZGVyU3Vic3RyaW5nKHN0cmluZywga2V5KSB7XG4gICAgICAvLyBzZXQgc3Vic3RyaW5nIHNwYW4gdG8gaGlkZGVuLCBzbyB0aGF0IEVtb2ppcyBhcmUgbm90IHNob3duIGRvdWJsZSBpbiBNb2JpbGUgU2FmYXJpXG4gICAgICByZXR1cm4gUmVhY3QuY3JlYXRlRWxlbWVudChcInNwYW5cIiwgX2V4dGVuZHMoe30sIHRoaXMucHJvcHMuc3R5bGUoJ3N1YnN0cmluZycpLCB7XG4gICAgICAgIGtleToga2V5XG4gICAgICB9KSwgc3RyaW5nKTtcbiAgICB9IC8vIFJldHVybnMgYSBjbG9uZSBvZiB0aGUgTWVudGlvbiBjaGlsZCBhcHBsaWNhYmxlIGZvciB0aGUgc3BlY2lmaWVkIHR5cGUgdG8gYmUgcmVuZGVyZWQgaW5zaWRlIHRoZSBoaWdobGlnaHRlclxuXG4gIH0sIHtcbiAgICBrZXk6IFwiZ2V0TWVudGlvbkNvbXBvbmVudEZvck1hdGNoXCIsXG4gICAgdmFsdWU6IGZ1bmN0aW9uIGdldE1lbnRpb25Db21wb25lbnRGb3JNYXRjaChpZCwgZGlzcGxheSwgbWVudGlvbkNoaWxkSW5kZXgsIGtleSkge1xuICAgICAgdmFyIHByb3BzID0ge1xuICAgICAgICBpZDogaWQsXG4gICAgICAgIGRpc3BsYXk6IGRpc3BsYXksXG4gICAgICAgIGtleToga2V5XG4gICAgICB9O1xuICAgICAgdmFyIGNoaWxkID0gQ2hpbGRyZW4udG9BcnJheSh0aGlzLnByb3BzLmNoaWxkcmVuKVttZW50aW9uQ2hpbGRJbmRleF07XG4gICAgICByZXR1cm4gUmVhY3QuY2xvbmVFbGVtZW50KGNoaWxkLCBwcm9wcyk7XG4gICAgfSAvLyBSZW5kZXJzIGFuIGNvbXBvbmVudCB0byBiZSBpbnNlcnRlZCBpbiB0aGUgaGlnaGxpZ2h0ZXIgYXQgdGhlIGN1cnJlbnQgY2FyZXQgcG9zaXRpb25cblxuICB9LCB7XG4gICAga2V5OiBcInJlbmRlckhpZ2hsaWdodGVyQ2FyZXRcIixcbiAgICB2YWx1ZTogZnVuY3Rpb24gcmVuZGVySGlnaGxpZ2h0ZXJDYXJldChjaGlsZHJlbikge1xuICAgICAgdmFyIF90aGlzMyA9IHRoaXM7XG5cbiAgICAgIHJldHVybiBSZWFjdC5jcmVhdGVFbGVtZW50KFwic3BhblwiLCBfZXh0ZW5kcyh7fSwgdGhpcy5wcm9wcy5zdHlsZSgnY2FyZXQnKSwge1xuICAgICAgICByZWY6IGZ1bmN0aW9uIHJlZihlbCkge1xuICAgICAgICAgIF90aGlzMy5jYXJldFJlZiA9IGVsO1xuICAgICAgICB9LFxuICAgICAgICBrZXk6IFwiY2FyZXRcIlxuICAgICAgfSksIGNoaWxkcmVuKTtcbiAgICB9XG4gIH1dKTtcblxuICByZXR1cm4gSGlnaGxpZ2h0ZXI7XG59KENvbXBvbmVudCk7XG5cbl9kZWZpbmVQcm9wZXJ0eShIaWdobGlnaHRlciwgXCJwcm9wVHlwZXNcIiwge1xuICBzZWxlY3Rpb246IFByb3BUeXBlcy5zaGFwZSh7XG4gICAgc3RhcnQ6IFByb3BUeXBlcy5udW1iZXIsXG4gICAgZW5kOiBQcm9wVHlwZXMubnVtYmVyXG4gIH0pLmlzUmVxdWlyZWQsXG4gIHZhbHVlOiBQcm9wVHlwZXMuc3RyaW5nLmlzUmVxdWlyZWQsXG4gIG9uQ2FyZXRQb3NpdGlvbkNoYW5nZTogUHJvcFR5cGVzLmZ1bmMuaXNSZXF1aXJlZCxcbiAgaW5wdXRTdHlsZTogUHJvcFR5cGVzLm9iamVjdCxcbiAgY2hpbGRyZW46IFByb3BUeXBlcy5vbmVPZlR5cGUoW1Byb3BUeXBlcy5lbGVtZW50LCBQcm9wVHlwZXMuYXJyYXlPZihQcm9wVHlwZXMuZWxlbWVudCldKS5pc1JlcXVpcmVkXG59KTtcblxuX2RlZmluZVByb3BlcnR5KEhpZ2hsaWdodGVyLCBcImRlZmF1bHRQcm9wc1wiLCB7XG4gIHZhbHVlOiAnJyxcbiAgaW5wdXRTdHlsZToge31cbn0pO1xuXG52YXIgc3R5bGVkID0gZGVmYXVsdFN0eWxlKHtcbiAgcG9zaXRpb246ICdyZWxhdGl2ZScsXG4gIHdpZHRoOiAnaW5oZXJpdCcsXG4gIGNvbG9yOiAndHJhbnNwYXJlbnQnLFxuICBvdmVyZmxvdzogJ2hpZGRlbicsXG4gIHdoaXRlU3BhY2U6ICdwcmUtd3JhcCcsXG4gIHdvcmRXcmFwOiAnYnJlYWstd29yZCcsXG4gICcmc2luZ2xlTGluZSc6IHtcbiAgICB3aGl0ZVNwYWNlOiAncHJlJyxcbiAgICB3b3JkV3JhcDogbnVsbFxuICB9LFxuICBzdWJzdHJpbmc6IHtcbiAgICB2aXNpYmlsaXR5OiAnaGlkZGVuJ1xuICB9XG59LCBmdW5jdGlvbiAocHJvcHMpIHtcbiAgcmV0dXJuIHtcbiAgICAnJnNpbmdsZUxpbmUnOiBwcm9wcy5zaW5nbGVMaW5lXG4gIH07XG59KTtcbnZhciBIaWdobGlnaHRlciQxID0gc3R5bGVkKEhpZ2hsaWdodGVyKTtcblxudmFyIFN1Z2dlc3Rpb24gPSAvKiNfX1BVUkVfXyovZnVuY3Rpb24gKF9Db21wb25lbnQpIHtcbiAgX2luaGVyaXRzKFN1Z2dlc3Rpb24sIF9Db21wb25lbnQpO1xuXG4gIGZ1bmN0aW9uIFN1Z2dlc3Rpb24oKSB7XG4gICAgX2NsYXNzQ2FsbENoZWNrKHRoaXMsIFN1Z2dlc3Rpb24pO1xuXG4gICAgcmV0dXJuIF9wb3NzaWJsZUNvbnN0cnVjdG9yUmV0dXJuKHRoaXMsIF9nZXRQcm90b3R5cGVPZihTdWdnZXN0aW9uKS5hcHBseSh0aGlzLCBhcmd1bWVudHMpKTtcbiAgfVxuXG4gIF9jcmVhdGVDbGFzcyhTdWdnZXN0aW9uLCBbe1xuICAgIGtleTogXCJyZW5kZXJcIixcbiAgICB2YWx1ZTogZnVuY3Rpb24gcmVuZGVyKCkge1xuICAgICAgdmFyIHJlc3QgPSBvbWl0KHRoaXMucHJvcHMsICdzdHlsZScsIGtleXMoU3VnZ2VzdGlvbi5wcm9wVHlwZXMpKTtcbiAgICAgIHJldHVybiBSZWFjdC5jcmVhdGVFbGVtZW50KFwibGlcIiwgX2V4dGVuZHMoe30sIHJlc3QsIHRoaXMucHJvcHMuc3R5bGUpLCB0aGlzLnJlbmRlckNvbnRlbnQoKSk7XG4gICAgfVxuICB9LCB7XG4gICAga2V5OiBcInJlbmRlckNvbnRlbnRcIixcbiAgICB2YWx1ZTogZnVuY3Rpb24gcmVuZGVyQ29udGVudCgpIHtcbiAgICAgIHZhciBfdGhpcyRwcm9wcyA9IHRoaXMucHJvcHMsXG4gICAgICAgICAgcXVlcnkgPSBfdGhpcyRwcm9wcy5xdWVyeSxcbiAgICAgICAgICByZW5kZXJTdWdnZXN0aW9uID0gX3RoaXMkcHJvcHMucmVuZGVyU3VnZ2VzdGlvbixcbiAgICAgICAgICBzdWdnZXN0aW9uID0gX3RoaXMkcHJvcHMuc3VnZ2VzdGlvbixcbiAgICAgICAgICBpbmRleCA9IF90aGlzJHByb3BzLmluZGV4LFxuICAgICAgICAgIGZvY3VzZWQgPSBfdGhpcyRwcm9wcy5mb2N1c2VkO1xuICAgICAgdmFyIGRpc3BsYXkgPSB0aGlzLmdldERpc3BsYXkoKTtcbiAgICAgIHZhciBoaWdobGlnaHRlZERpc3BsYXkgPSB0aGlzLnJlbmRlckhpZ2hsaWdodGVkRGlzcGxheShkaXNwbGF5LCBxdWVyeSk7XG5cbiAgICAgIGlmIChyZW5kZXJTdWdnZXN0aW9uKSB7XG4gICAgICAgIHJldHVybiByZW5kZXJTdWdnZXN0aW9uKHN1Z2dlc3Rpb24sIHF1ZXJ5LCBoaWdobGlnaHRlZERpc3BsYXksIGluZGV4LCBmb2N1c2VkKTtcbiAgICAgIH1cblxuICAgICAgcmV0dXJuIGhpZ2hsaWdodGVkRGlzcGxheTtcbiAgICB9XG4gIH0sIHtcbiAgICBrZXk6IFwiZ2V0RGlzcGxheVwiLFxuICAgIHZhbHVlOiBmdW5jdGlvbiBnZXREaXNwbGF5KCkge1xuICAgICAgdmFyIHN1Z2dlc3Rpb24gPSB0aGlzLnByb3BzLnN1Z2dlc3Rpb247XG5cbiAgICAgIGlmIChzdWdnZXN0aW9uIGluc3RhbmNlb2YgU3RyaW5nKSB7XG4gICAgICAgIHJldHVybiBzdWdnZXN0aW9uO1xuICAgICAgfVxuXG4gICAgICB2YXIgaWQgPSBzdWdnZXN0aW9uLmlkLFxuICAgICAgICAgIGRpc3BsYXkgPSBzdWdnZXN0aW9uLmRpc3BsYXk7XG5cbiAgICAgIGlmIChpZCA9PT0gdW5kZWZpbmVkIHx8ICFkaXNwbGF5KSB7XG4gICAgICAgIHJldHVybiBpZDtcbiAgICAgIH1cblxuICAgICAgcmV0dXJuIGRpc3BsYXk7XG4gICAgfVxuICB9LCB7XG4gICAga2V5OiBcInJlbmRlckhpZ2hsaWdodGVkRGlzcGxheVwiLFxuICAgIHZhbHVlOiBmdW5jdGlvbiByZW5kZXJIaWdobGlnaHRlZERpc3BsYXkoZGlzcGxheSkge1xuICAgICAgdmFyIF90aGlzJHByb3BzMiA9IHRoaXMucHJvcHMsXG4gICAgICAgICAgaWdub3JlQWNjZW50cyA9IF90aGlzJHByb3BzMi5pZ25vcmVBY2NlbnRzLFxuICAgICAgICAgIHF1ZXJ5ID0gX3RoaXMkcHJvcHMyLnF1ZXJ5LFxuICAgICAgICAgIHN0eWxlID0gX3RoaXMkcHJvcHMyLnN0eWxlO1xuICAgICAgdmFyIGkgPSBnZXRTdWJzdHJpbmdJbmRleChkaXNwbGF5LCBxdWVyeSwgaWdub3JlQWNjZW50cyk7XG5cbiAgICAgIGlmIChpID09PSAtMSkge1xuICAgICAgICByZXR1cm4gUmVhY3QuY3JlYXRlRWxlbWVudChcInNwYW5cIiwgc3R5bGUoJ2Rpc3BsYXknKSwgZGlzcGxheSk7XG4gICAgICB9XG5cbiAgICAgIHJldHVybiBSZWFjdC5jcmVhdGVFbGVtZW50KFwic3BhblwiLCBzdHlsZSgnZGlzcGxheScpLCBkaXNwbGF5LnN1YnN0cmluZygwLCBpKSwgUmVhY3QuY3JlYXRlRWxlbWVudChcImJcIiwgc3R5bGUoJ2hpZ2hsaWdodCcpLCBkaXNwbGF5LnN1YnN0cmluZyhpLCBpICsgcXVlcnkubGVuZ3RoKSksIGRpc3BsYXkuc3Vic3RyaW5nKGkgKyBxdWVyeS5sZW5ndGgpKTtcbiAgICB9XG4gIH1dKTtcblxuICByZXR1cm4gU3VnZ2VzdGlvbjtcbn0oQ29tcG9uZW50KTtcblxuX2RlZmluZVByb3BlcnR5KFN1Z2dlc3Rpb24sIFwicHJvcFR5cGVzXCIsIHtcbiAgaWQ6IFByb3BUeXBlcy5vbmVPZlR5cGUoW1Byb3BUeXBlcy5zdHJpbmcsIFByb3BUeXBlcy5udW1iZXJdKS5pc1JlcXVpcmVkLFxuICBxdWVyeTogUHJvcFR5cGVzLnN0cmluZy5pc1JlcXVpcmVkLFxuICBpbmRleDogUHJvcFR5cGVzLm51bWJlci5pc1JlcXVpcmVkLFxuICBpZ25vcmVBY2NlbnRzOiBQcm9wVHlwZXMuYm9vbCxcbiAgc3VnZ2VzdGlvbjogUHJvcFR5cGVzLm9uZU9mVHlwZShbUHJvcFR5cGVzLnN0cmluZywgUHJvcFR5cGVzLnNoYXBlKHtcbiAgICBpZDogUHJvcFR5cGVzLm9uZU9mVHlwZShbUHJvcFR5cGVzLnN0cmluZywgUHJvcFR5cGVzLm51bWJlcl0pLmlzUmVxdWlyZWQsXG4gICAgZGlzcGxheTogUHJvcFR5cGVzLnN0cmluZ1xuICB9KV0pLmlzUmVxdWlyZWQsXG4gIHJlbmRlclN1Z2dlc3Rpb246IFByb3BUeXBlcy5mdW5jLFxuICBmb2N1c2VkOiBQcm9wVHlwZXMuYm9vbFxufSk7XG5cbnZhciBzdHlsZWQkMSA9IGRlZmF1bHRTdHlsZSh7XG4gIGN1cnNvcjogJ3BvaW50ZXInXG59LCBmdW5jdGlvbiAocHJvcHMpIHtcbiAgcmV0dXJuIHtcbiAgICAnJmZvY3VzZWQnOiBwcm9wcy5mb2N1c2VkXG4gIH07XG59KTtcbnZhciBTdWdnZXN0aW9uJDEgPSBzdHlsZWQkMShTdWdnZXN0aW9uKTtcblxuZnVuY3Rpb24gTG9hZGluZ0luZGljYXRvcihfcmVmKSB7XG4gIHZhciBzdHlsZSA9IF9yZWYuc3R5bGU7XG4gIHZhciBzcGlubmVyU3R5bGUgPSBzdHlsZSgnc3Bpbm5lcicpO1xuICByZXR1cm4gUmVhY3QuY3JlYXRlRWxlbWVudChcImRpdlwiLCBzdHlsZSwgUmVhY3QuY3JlYXRlRWxlbWVudChcImRpdlwiLCBzcGlubmVyU3R5bGUsIFJlYWN0LmNyZWF0ZUVsZW1lbnQoXCJkaXZcIiwgc3Bpbm5lclN0eWxlKFsnZWxlbWVudCcsICdlbGVtZW50MSddKSksIFJlYWN0LmNyZWF0ZUVsZW1lbnQoXCJkaXZcIiwgc3Bpbm5lclN0eWxlKFsnZWxlbWVudCcsICdlbGVtZW50MiddKSksIFJlYWN0LmNyZWF0ZUVsZW1lbnQoXCJkaXZcIiwgc3Bpbm5lclN0eWxlKFsnZWxlbWVudCcsICdlbGVtZW50MyddKSksIFJlYWN0LmNyZWF0ZUVsZW1lbnQoXCJkaXZcIiwgc3Bpbm5lclN0eWxlKFsnZWxlbWVudCcsICdlbGVtZW50NCddKSksIFJlYWN0LmNyZWF0ZUVsZW1lbnQoXCJkaXZcIiwgc3Bpbm5lclN0eWxlKFsnZWxlbWVudCcsICdlbGVtZW50NSddKSkpKTtcbn1cblxudmFyIExvYWRpbmdJbmRpY2F0b3IkMSA9IHN1YnN0eWxlKExvYWRpbmdJbmRpY2F0b3IpO1xuXG5mdW5jdGlvbiBvd25LZXlzJDEob2JqZWN0LCBlbnVtZXJhYmxlT25seSkgeyB2YXIga2V5cyA9IE9iamVjdC5rZXlzKG9iamVjdCk7IGlmIChPYmplY3QuZ2V0T3duUHJvcGVydHlTeW1ib2xzKSB7IHZhciBzeW1ib2xzID0gT2JqZWN0LmdldE93blByb3BlcnR5U3ltYm9scyhvYmplY3QpOyBpZiAoZW51bWVyYWJsZU9ubHkpIHN5bWJvbHMgPSBzeW1ib2xzLmZpbHRlcihmdW5jdGlvbiAoc3ltKSB7IHJldHVybiBPYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yKG9iamVjdCwgc3ltKS5lbnVtZXJhYmxlOyB9KTsga2V5cy5wdXNoLmFwcGx5KGtleXMsIHN5bWJvbHMpOyB9IHJldHVybiBrZXlzOyB9XG5cbmZ1bmN0aW9uIF9vYmplY3RTcHJlYWQkMSh0YXJnZXQpIHsgZm9yICh2YXIgaSA9IDE7IGkgPCBhcmd1bWVudHMubGVuZ3RoOyBpKyspIHsgdmFyIHNvdXJjZSA9IGFyZ3VtZW50c1tpXSAhPSBudWxsID8gYXJndW1lbnRzW2ldIDoge307IGlmIChpICUgMikgeyBvd25LZXlzJDEoT2JqZWN0KHNvdXJjZSksIHRydWUpLmZvckVhY2goZnVuY3Rpb24gKGtleSkgeyBfZGVmaW5lUHJvcGVydHkodGFyZ2V0LCBrZXksIHNvdXJjZVtrZXldKTsgfSk7IH0gZWxzZSBpZiAoT2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcnMpIHsgT2JqZWN0LmRlZmluZVByb3BlcnRpZXModGFyZ2V0LCBPYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9ycyhzb3VyY2UpKTsgfSBlbHNlIHsgb3duS2V5cyQxKE9iamVjdChzb3VyY2UpKS5mb3JFYWNoKGZ1bmN0aW9uIChrZXkpIHsgT2JqZWN0LmRlZmluZVByb3BlcnR5KHRhcmdldCwga2V5LCBPYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yKHNvdXJjZSwga2V5KSk7IH0pOyB9IH0gcmV0dXJuIHRhcmdldDsgfVxuXG52YXIgU3VnZ2VzdGlvbnNPdmVybGF5ID0gLyojX19QVVJFX18qL2Z1bmN0aW9uIChfQ29tcG9uZW50KSB7XG4gIF9pbmhlcml0cyhTdWdnZXN0aW9uc092ZXJsYXksIF9Db21wb25lbnQpO1xuXG4gIGZ1bmN0aW9uIFN1Z2dlc3Rpb25zT3ZlcmxheSgpIHtcbiAgICBfY2xhc3NDYWxsQ2hlY2sodGhpcywgU3VnZ2VzdGlvbnNPdmVybGF5KTtcblxuICAgIHJldHVybiBfcG9zc2libGVDb25zdHJ1Y3RvclJldHVybih0aGlzLCBfZ2V0UHJvdG90eXBlT2YoU3VnZ2VzdGlvbnNPdmVybGF5KS5hcHBseSh0aGlzLCBhcmd1bWVudHMpKTtcbiAgfVxuXG4gIF9jcmVhdGVDbGFzcyhTdWdnZXN0aW9uc092ZXJsYXksIFt7XG4gICAga2V5OiBcImNvbXBvbmVudERpZFVwZGF0ZVwiLFxuICAgIHZhbHVlOiBmdW5jdGlvbiBjb21wb25lbnREaWRVcGRhdGUoKSB7XG4gICAgICBpZiAoIXRoaXMuc3VnZ2VzdGlvbnNSZWYgfHwgdGhpcy5zdWdnZXN0aW9uc1JlZi5vZmZzZXRIZWlnaHQgPj0gdGhpcy5zdWdnZXN0aW9uc1JlZi5zY3JvbGxIZWlnaHQgfHwgIXRoaXMucHJvcHMuc2Nyb2xsRm9jdXNlZEludG9WaWV3KSB7XG4gICAgICAgIHJldHVybjtcbiAgICAgIH1cblxuICAgICAgdmFyIHNjcm9sbFRvcCA9IHRoaXMuc3VnZ2VzdGlvbnNSZWYuc2Nyb2xsVG9wO1xuXG4gICAgICB2YXIgX3RoaXMkc3VnZ2VzdGlvbnNSZWYkID0gdGhpcy5zdWdnZXN0aW9uc1JlZi5jaGlsZHJlblt0aGlzLnByb3BzLmZvY3VzSW5kZXhdLmdldEJvdW5kaW5nQ2xpZW50UmVjdCgpLFxuICAgICAgICAgIHRvcCA9IF90aGlzJHN1Z2dlc3Rpb25zUmVmJC50b3AsXG4gICAgICAgICAgYm90dG9tID0gX3RoaXMkc3VnZ2VzdGlvbnNSZWYkLmJvdHRvbTtcblxuICAgICAgdmFyIF90aGlzJHN1Z2dlc3Rpb25zUmVmJDIgPSB0aGlzLnN1Z2dlc3Rpb25zUmVmLmdldEJvdW5kaW5nQ2xpZW50UmVjdCgpLFxuICAgICAgICAgIHRvcENvbnRhaW5lciA9IF90aGlzJHN1Z2dlc3Rpb25zUmVmJDIudG9wO1xuXG4gICAgICB0b3AgPSB0b3AgLSB0b3BDb250YWluZXIgKyBzY3JvbGxUb3A7XG4gICAgICBib3R0b20gPSBib3R0b20gLSB0b3BDb250YWluZXIgKyBzY3JvbGxUb3A7XG5cbiAgICAgIGlmICh0b3AgPCBzY3JvbGxUb3ApIHtcbiAgICAgICAgdGhpcy5zdWdnZXN0aW9uc1JlZi5zY3JvbGxUb3AgPSB0b3A7XG4gICAgICB9IGVsc2UgaWYgKGJvdHRvbSA+IHRoaXMuc3VnZ2VzdGlvbnNSZWYub2Zmc2V0SGVpZ2h0KSB7XG4gICAgICAgIHRoaXMuc3VnZ2VzdGlvbnNSZWYuc2Nyb2xsVG9wID0gYm90dG9tIC0gdGhpcy5zdWdnZXN0aW9uc1JlZi5vZmZzZXRIZWlnaHQ7XG4gICAgICB9XG4gICAgfVxuICB9LCB7XG4gICAga2V5OiBcInJlbmRlclwiLFxuICAgIHZhbHVlOiBmdW5jdGlvbiByZW5kZXIoKSB7XG4gICAgICB2YXIgX3RoaXMgPSB0aGlzO1xuXG4gICAgICB2YXIgX3RoaXMkcHJvcHMgPSB0aGlzLnByb3BzLFxuICAgICAgICAgIHN1Z2dlc3Rpb25zID0gX3RoaXMkcHJvcHMuc3VnZ2VzdGlvbnMsXG4gICAgICAgICAgaXNMb2FkaW5nID0gX3RoaXMkcHJvcHMuaXNMb2FkaW5nLFxuICAgICAgICAgIHN0eWxlID0gX3RoaXMkcHJvcHMuc3R5bGUsXG4gICAgICAgICAgb25Nb3VzZURvd24gPSBfdGhpcyRwcm9wcy5vbk1vdXNlRG93bjsgLy8gZG8gbm90IHNob3cgc3VnZ2VzdGlvbnMgdW50aWwgdGhlcmUgaXMgc29tZSBkYXRhXG5cbiAgICAgIGlmIChjb3VudFN1Z2dlc3Rpb25zKHN1Z2dlc3Rpb25zKSA9PT0gMCAmJiAhaXNMb2FkaW5nKSB7XG4gICAgICAgIHJldHVybiBudWxsO1xuICAgICAgfVxuXG4gICAgICByZXR1cm4gUmVhY3QuY3JlYXRlRWxlbWVudChcImRpdlwiLCBfZXh0ZW5kcyh7fSwgc3R5bGUsIHtcbiAgICAgICAgb25Nb3VzZURvd246IG9uTW91c2VEb3duXG4gICAgICB9KSwgUmVhY3QuY3JlYXRlRWxlbWVudChcInVsXCIsIF9leHRlbmRzKHtcbiAgICAgICAgcmVmOiBmdW5jdGlvbiByZWYoZWwpIHtcbiAgICAgICAgICBfdGhpcy5zdWdnZXN0aW9uc1JlZiA9IGVsO1xuICAgICAgICB9XG4gICAgICB9LCBzdHlsZSgnbGlzdCcpKSwgdGhpcy5yZW5kZXJTdWdnZXN0aW9ucygpKSwgdGhpcy5yZW5kZXJMb2FkaW5nSW5kaWNhdG9yKCkpO1xuICAgIH1cbiAgfSwge1xuICAgIGtleTogXCJyZW5kZXJTdWdnZXN0aW9uc1wiLFxuICAgIHZhbHVlOiBmdW5jdGlvbiByZW5kZXJTdWdnZXN0aW9ucygpIHtcbiAgICAgIHZhciBfdGhpczIgPSB0aGlzO1xuXG4gICAgICByZXR1cm4gT2JqZWN0LnZhbHVlcyh0aGlzLnByb3BzLnN1Z2dlc3Rpb25zKS5yZWR1Y2UoZnVuY3Rpb24gKGFjY1Jlc3VsdHMsIF9yZWYpIHtcbiAgICAgICAgdmFyIHJlc3VsdHMgPSBfcmVmLnJlc3VsdHMsXG4gICAgICAgICAgICBxdWVyeUluZm8gPSBfcmVmLnF1ZXJ5SW5mbztcbiAgICAgICAgcmV0dXJuIFtdLmNvbmNhdChfdG9Db25zdW1hYmxlQXJyYXkoYWNjUmVzdWx0cyksIF90b0NvbnN1bWFibGVBcnJheShyZXN1bHRzLm1hcChmdW5jdGlvbiAocmVzdWx0LCBpbmRleCkge1xuICAgICAgICAgIHJldHVybiBfdGhpczIucmVuZGVyU3VnZ2VzdGlvbihyZXN1bHQsIHF1ZXJ5SW5mbywgYWNjUmVzdWx0cy5sZW5ndGggKyBpbmRleCk7XG4gICAgICAgIH0pKSk7XG4gICAgICB9LCBbXSk7XG4gICAgfVxuICB9LCB7XG4gICAga2V5OiBcInJlbmRlclN1Z2dlc3Rpb25cIixcbiAgICB2YWx1ZTogZnVuY3Rpb24gcmVuZGVyU3VnZ2VzdGlvbihyZXN1bHQsIHF1ZXJ5SW5mbywgaW5kZXgpIHtcbiAgICAgIHZhciBfdGhpczMgPSB0aGlzO1xuXG4gICAgICB2YXIgaWQgPSB0aGlzLmdldElEKHJlc3VsdCk7XG4gICAgICB2YXIgaXNGb2N1c2VkID0gaW5kZXggPT09IHRoaXMucHJvcHMuZm9jdXNJbmRleDtcbiAgICAgIHZhciBjaGlsZEluZGV4ID0gcXVlcnlJbmZvLmNoaWxkSW5kZXgsXG4gICAgICAgICAgcXVlcnkgPSBxdWVyeUluZm8ucXVlcnk7XG4gICAgICB2YXIgcmVuZGVyU3VnZ2VzdGlvbiA9IENoaWxkcmVuLnRvQXJyYXkodGhpcy5wcm9wcy5jaGlsZHJlbilbY2hpbGRJbmRleF0ucHJvcHMucmVuZGVyU3VnZ2VzdGlvbjtcbiAgICAgIHZhciBpZ25vcmVBY2NlbnRzID0gdGhpcy5wcm9wcy5pZ25vcmVBY2NlbnRzO1xuICAgICAgcmV0dXJuIFJlYWN0LmNyZWF0ZUVsZW1lbnQoU3VnZ2VzdGlvbiQxLCB7XG4gICAgICAgIHN0eWxlOiB0aGlzLnByb3BzLnN0eWxlKCdpdGVtJyksXG4gICAgICAgIGtleTogXCJcIi5jb25jYXQoY2hpbGRJbmRleCwgXCItXCIpLmNvbmNhdChpZCksXG4gICAgICAgIGlkOiBpZCxcbiAgICAgICAgcXVlcnk6IHF1ZXJ5LFxuICAgICAgICBpbmRleDogaW5kZXgsXG4gICAgICAgIGlnbm9yZUFjY2VudHM6IGlnbm9yZUFjY2VudHMsXG4gICAgICAgIHJlbmRlclN1Z2dlc3Rpb246IHJlbmRlclN1Z2dlc3Rpb24sXG4gICAgICAgIHN1Z2dlc3Rpb246IHJlc3VsdCxcbiAgICAgICAgZm9jdXNlZDogaXNGb2N1c2VkLFxuICAgICAgICBvbkNsaWNrOiBmdW5jdGlvbiBvbkNsaWNrKCkge1xuICAgICAgICAgIHJldHVybiBfdGhpczMuc2VsZWN0KHJlc3VsdCwgcXVlcnlJbmZvKTtcbiAgICAgICAgfSxcbiAgICAgICAgb25Nb3VzZUVudGVyOiBmdW5jdGlvbiBvbk1vdXNlRW50ZXIoKSB7XG4gICAgICAgICAgcmV0dXJuIF90aGlzMy5oYW5kbGVNb3VzZUVudGVyKGluZGV4KTtcbiAgICAgICAgfVxuICAgICAgfSk7XG4gICAgfVxuICB9LCB7XG4gICAga2V5OiBcImdldElEXCIsXG4gICAgdmFsdWU6IGZ1bmN0aW9uIGdldElEKHN1Z2dlc3Rpb24pIHtcbiAgICAgIGlmIChzdWdnZXN0aW9uIGluc3RhbmNlb2YgU3RyaW5nKSB7XG4gICAgICAgIHJldHVybiBzdWdnZXN0aW9uO1xuICAgICAgfVxuXG4gICAgICByZXR1cm4gc3VnZ2VzdGlvbi5pZDtcbiAgICB9XG4gIH0sIHtcbiAgICBrZXk6IFwicmVuZGVyTG9hZGluZ0luZGljYXRvclwiLFxuICAgIHZhbHVlOiBmdW5jdGlvbiByZW5kZXJMb2FkaW5nSW5kaWNhdG9yKCkge1xuICAgICAgaWYgKCF0aGlzLnByb3BzLmlzTG9hZGluZykge1xuICAgICAgICByZXR1cm47XG4gICAgICB9XG5cbiAgICAgIHJldHVybiBSZWFjdC5jcmVhdGVFbGVtZW50KExvYWRpbmdJbmRpY2F0b3IkMSwge1xuICAgICAgICBzdHlsZTogdGhpcy5wcm9wcy5zdHlsZSgnbG9hZGluZ0luZGljYXRvcicpXG4gICAgICB9KTtcbiAgICB9XG4gIH0sIHtcbiAgICBrZXk6IFwiaGFuZGxlTW91c2VFbnRlclwiLFxuICAgIHZhbHVlOiBmdW5jdGlvbiBoYW5kbGVNb3VzZUVudGVyKGluZGV4LCBldikge1xuICAgICAgaWYgKHRoaXMucHJvcHMub25Nb3VzZUVudGVyKSB7XG4gICAgICAgIHRoaXMucHJvcHMub25Nb3VzZUVudGVyKGluZGV4KTtcbiAgICAgIH1cbiAgICB9XG4gIH0sIHtcbiAgICBrZXk6IFwic2VsZWN0XCIsXG4gICAgdmFsdWU6IGZ1bmN0aW9uIHNlbGVjdChzdWdnZXN0aW9uLCBxdWVyeUluZm8pIHtcbiAgICAgIHRoaXMucHJvcHMub25TZWxlY3Qoc3VnZ2VzdGlvbiwgcXVlcnlJbmZvKTtcbiAgICB9XG4gIH1dKTtcblxuICByZXR1cm4gU3VnZ2VzdGlvbnNPdmVybGF5O1xufShDb21wb25lbnQpO1xuXG5fZGVmaW5lUHJvcGVydHkoU3VnZ2VzdGlvbnNPdmVybGF5LCBcInByb3BUeXBlc1wiLCB7XG4gIHN1Z2dlc3Rpb25zOiBQcm9wVHlwZXMub2JqZWN0LmlzUmVxdWlyZWQsXG4gIGZvY3VzSW5kZXg6IFByb3BUeXBlcy5udW1iZXIsXG4gIHNjcm9sbEZvY3VzZWRJbnRvVmlldzogUHJvcFR5cGVzLmJvb2wsXG4gIGlzTG9hZGluZzogUHJvcFR5cGVzLmJvb2wsXG4gIG9uU2VsZWN0OiBQcm9wVHlwZXMuZnVuYyxcbiAgaWdub3JlQWNjZW50czogUHJvcFR5cGVzLmJvb2wsXG4gIGNoaWxkcmVuOiBQcm9wVHlwZXMub25lT2ZUeXBlKFtQcm9wVHlwZXMuZWxlbWVudCwgUHJvcFR5cGVzLmFycmF5T2YoUHJvcFR5cGVzLmVsZW1lbnQpXSkuaXNSZXF1aXJlZFxufSk7XG5cbl9kZWZpbmVQcm9wZXJ0eShTdWdnZXN0aW9uc092ZXJsYXksIFwiZGVmYXVsdFByb3BzXCIsIHtcbiAgc3VnZ2VzdGlvbnM6IHt9LFxuICBvblNlbGVjdDogZnVuY3Rpb24gb25TZWxlY3QoKSB7XG4gICAgcmV0dXJuIG51bGw7XG4gIH1cbn0pO1xuXG52YXIgc3R5bGVkJDIgPSBkZWZhdWx0U3R5bGUoZnVuY3Rpb24gKF9yZWYyKSB7XG4gIHZhciBwb3NpdGlvbiA9IF9yZWYyLnBvc2l0aW9uO1xuICByZXR1cm4gX29iamVjdFNwcmVhZCQxKHtcbiAgICBwb3NpdGlvbjogJ2Fic29sdXRlJyxcbiAgICB6SW5kZXg6IDEsXG4gICAgYmFja2dyb3VuZENvbG9yOiAnd2hpdGUnLFxuICAgIG1hcmdpblRvcDogMTQsXG4gICAgbWluV2lkdGg6IDEwMFxuICB9LCBwb3NpdGlvbiwge1xuICAgIGxpc3Q6IHtcbiAgICAgIG1hcmdpbjogMCxcbiAgICAgIHBhZGRpbmc6IDAsXG4gICAgICBsaXN0U3R5bGVUeXBlOiAnbm9uZSdcbiAgICB9XG4gIH0pO1xufSk7XG52YXIgU3VnZ2VzdGlvbnNPdmVybGF5JDEgPSBzdHlsZWQkMihTdWdnZXN0aW9uc092ZXJsYXkpO1xuXG5mdW5jdGlvbiBvd25LZXlzJDIob2JqZWN0LCBlbnVtZXJhYmxlT25seSkgeyB2YXIga2V5cyA9IE9iamVjdC5rZXlzKG9iamVjdCk7IGlmIChPYmplY3QuZ2V0T3duUHJvcGVydHlTeW1ib2xzKSB7IHZhciBzeW1ib2xzID0gT2JqZWN0LmdldE93blByb3BlcnR5U3ltYm9scyhvYmplY3QpOyBpZiAoZW51bWVyYWJsZU9ubHkpIHN5bWJvbHMgPSBzeW1ib2xzLmZpbHRlcihmdW5jdGlvbiAoc3ltKSB7IHJldHVybiBPYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yKG9iamVjdCwgc3ltKS5lbnVtZXJhYmxlOyB9KTsga2V5cy5wdXNoLmFwcGx5KGtleXMsIHN5bWJvbHMpOyB9IHJldHVybiBrZXlzOyB9XG5cbmZ1bmN0aW9uIF9vYmplY3RTcHJlYWQkMih0YXJnZXQpIHsgZm9yICh2YXIgaSA9IDE7IGkgPCBhcmd1bWVudHMubGVuZ3RoOyBpKyspIHsgdmFyIHNvdXJjZSA9IGFyZ3VtZW50c1tpXSAhPSBudWxsID8gYXJndW1lbnRzW2ldIDoge307IGlmIChpICUgMikgeyBvd25LZXlzJDIoT2JqZWN0KHNvdXJjZSksIHRydWUpLmZvckVhY2goZnVuY3Rpb24gKGtleSkgeyBfZGVmaW5lUHJvcGVydHkodGFyZ2V0LCBrZXksIHNvdXJjZVtrZXldKTsgfSk7IH0gZWxzZSBpZiAoT2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcnMpIHsgT2JqZWN0LmRlZmluZVByb3BlcnRpZXModGFyZ2V0LCBPYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9ycyhzb3VyY2UpKTsgfSBlbHNlIHsgb3duS2V5cyQyKE9iamVjdChzb3VyY2UpKS5mb3JFYWNoKGZ1bmN0aW9uIChrZXkpIHsgT2JqZWN0LmRlZmluZVByb3BlcnR5KHRhcmdldCwga2V5LCBPYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yKHNvdXJjZSwga2V5KSk7IH0pOyB9IH0gcmV0dXJuIHRhcmdldDsgfVxudmFyIG1ha2VUcmlnZ2VyUmVnZXggPSBmdW5jdGlvbiBtYWtlVHJpZ2dlclJlZ2V4KHRyaWdnZXIpIHtcbiAgdmFyIG9wdGlvbnMgPSBhcmd1bWVudHMubGVuZ3RoID4gMSAmJiBhcmd1bWVudHNbMV0gIT09IHVuZGVmaW5lZCA/IGFyZ3VtZW50c1sxXSA6IHt9O1xuXG4gIGlmICh0cmlnZ2VyIGluc3RhbmNlb2YgUmVnRXhwKSB7XG4gICAgcmV0dXJuIHRyaWdnZXI7XG4gIH0gZWxzZSB7XG4gICAgdmFyIGFsbG93U3BhY2VJblF1ZXJ5ID0gb3B0aW9ucy5hbGxvd1NwYWNlSW5RdWVyeTtcbiAgICB2YXIgZXNjYXBlZFRyaWdnZXJDaGFyID0gZXNjYXBlUmVnZXgodHJpZ2dlcik7IC8vIGZpcnN0IGNhcHR1cmUgZ3JvdXAgaXMgdGhlIHBhcnQgdG8gYmUgcmVwbGFjZWQgb24gY29tcGxldGlvblxuICAgIC8vIHNlY29uZCBjYXB0dXJlIGdyb3VwIGlzIGZvciBleHRyYWN0aW5nIHRoZSBzZWFyY2ggcXVlcnlcblxuICAgIHJldHVybiBuZXcgUmVnRXhwKFwiKD86XnxcXFxccykoXCIuY29uY2F0KGVzY2FwZWRUcmlnZ2VyQ2hhciwgXCIoW15cIikuY29uY2F0KGFsbG93U3BhY2VJblF1ZXJ5ID8gJycgOiAnXFxcXHMnKS5jb25jYXQoZXNjYXBlZFRyaWdnZXJDaGFyLCBcIl0qKSkkXCIpKTtcbiAgfVxufTtcblxudmFyIGdldERhdGFQcm92aWRlciA9IGZ1bmN0aW9uIGdldERhdGFQcm92aWRlcihkYXRhLCBpZ25vcmVBY2NlbnRzKSB7XG4gIGlmIChkYXRhIGluc3RhbmNlb2YgQXJyYXkpIHtcbiAgICAvLyBpZiBkYXRhIGlzIGFuIGFycmF5LCBjcmVhdGUgYSBmdW5jdGlvbiB0byBxdWVyeSB0aGF0XG4gICAgcmV0dXJuIGZ1bmN0aW9uIChxdWVyeSwgY2FsbGJhY2spIHtcbiAgICAgIHZhciByZXN1bHRzID0gW107XG5cbiAgICAgIGZvciAodmFyIGkgPSAwLCBsID0gZGF0YS5sZW5ndGg7IGkgPCBsOyArK2kpIHtcbiAgICAgICAgdmFyIGRpc3BsYXkgPSBkYXRhW2ldLmRpc3BsYXkgfHwgZGF0YVtpXS5pZDtcblxuICAgICAgICBpZiAoZ2V0U3Vic3RyaW5nSW5kZXgoZGlzcGxheSwgcXVlcnksIGlnbm9yZUFjY2VudHMpID49IDApIHtcbiAgICAgICAgICByZXN1bHRzLnB1c2goZGF0YVtpXSk7XG4gICAgICAgIH1cbiAgICAgIH1cblxuICAgICAgcmV0dXJuIHJlc3VsdHM7XG4gICAgfTtcbiAgfSBlbHNlIHtcbiAgICAvLyBleHBlY3QgZGF0YSB0byBiZSBhIHF1ZXJ5IGZ1bmN0aW9uXG4gICAgcmV0dXJuIGRhdGE7XG4gIH1cbn07XG5cbnZhciBLRVkgPSB7XG4gIFRBQjogOSxcbiAgUkVUVVJOOiAxMyxcbiAgRVNDOiAyNyxcbiAgVVA6IDM4LFxuICBET1dOOiA0MFxufTtcbnZhciBpc0NvbXBvc2luZyA9IGZhbHNlO1xudmFyIHByb3BUeXBlcyA9IHtcbiAgLyoqXG4gICAqIElmIHNldCB0byBgdHJ1ZWAgYSByZWd1bGFyIHRleHQgaW5wdXQgZWxlbWVudCB3aWxsIGJlIHJlbmRlcmVkXG4gICAqIGluc3RlYWQgb2YgYSB0ZXh0YXJlYVxuICAgKi9cbiAgc2luZ2xlTGluZTogUHJvcFR5cGVzLmJvb2wsXG4gIGFsbG93U3BhY2VJblF1ZXJ5OiBQcm9wVHlwZXMuYm9vbCxcbiAgRVhQRVJJTUVOVEFMX2N1dENvcHlQYXN0ZTogUHJvcFR5cGVzLmJvb2wsXG4gIGFsbG93U3VnZ2VzdGlvbnNBYm92ZUN1cnNvcjogUHJvcFR5cGVzLmJvb2wsXG4gIGlnbm9yZUFjY2VudHM6IFByb3BUeXBlcy5ib29sLFxuICB2YWx1ZTogUHJvcFR5cGVzLnN0cmluZyxcbiAgb25LZXlEb3duOiBQcm9wVHlwZXMuZnVuYyxcbiAgb25TZWxlY3Q6IFByb3BUeXBlcy5mdW5jLFxuICBvbkJsdXI6IFByb3BUeXBlcy5mdW5jLFxuICBvbkNoYW5nZTogUHJvcFR5cGVzLmZ1bmMsXG4gIHN1Z2dlc3Rpb25zUG9ydGFsSG9zdDogdHlwZW9mIEVsZW1lbnQgPT09ICd1bmRlZmluZWQnID8gUHJvcFR5cGVzLmFueSA6IFByb3BUeXBlcy5Qcm9wVHlwZXMuaW5zdGFuY2VPZihFbGVtZW50KSxcbiAgaW5wdXRSZWY6IFByb3BUeXBlcy5vbmVPZlR5cGUoW1Byb3BUeXBlcy5mdW5jLCBQcm9wVHlwZXMuc2hhcGUoe1xuICAgIGN1cnJlbnQ6IHR5cGVvZiBFbGVtZW50ID09PSAndW5kZWZpbmVkJyA/IFByb3BUeXBlcy5hbnkgOiBQcm9wVHlwZXMuaW5zdGFuY2VPZihFbGVtZW50KVxuICB9KV0pLFxuICBjaGlsZHJlbjogUHJvcFR5cGVzLm9uZU9mVHlwZShbUHJvcFR5cGVzLmVsZW1lbnQsIFByb3BUeXBlcy5hcnJheU9mKFByb3BUeXBlcy5lbGVtZW50KV0pLmlzUmVxdWlyZWRcbn07XG5cbnZhciBNZW50aW9uc0lucHV0ID0gLyojX19QVVJFX18qL2Z1bmN0aW9uIChfUmVhY3QkQ29tcG9uZW50KSB7XG4gIF9pbmhlcml0cyhNZW50aW9uc0lucHV0LCBfUmVhY3QkQ29tcG9uZW50KTtcblxuICBmdW5jdGlvbiBNZW50aW9uc0lucHV0KF9wcm9wcykge1xuICAgIHZhciBfdGhpcztcblxuICAgIF9jbGFzc0NhbGxDaGVjayh0aGlzLCBNZW50aW9uc0lucHV0KTtcblxuICAgIF90aGlzID0gX3Bvc3NpYmxlQ29uc3RydWN0b3JSZXR1cm4odGhpcywgX2dldFByb3RvdHlwZU9mKE1lbnRpb25zSW5wdXQpLmNhbGwodGhpcywgX3Byb3BzKSk7XG5cbiAgICBfZGVmaW5lUHJvcGVydHkoX2Fzc2VydFRoaXNJbml0aWFsaXplZChfdGhpcyksIFwiZ2V0SW5wdXRQcm9wc1wiLCBmdW5jdGlvbiAoaXNUZXh0YXJlYSkge1xuICAgICAgdmFyIF90aGlzJHByb3BzID0gX3RoaXMucHJvcHMsXG4gICAgICAgICAgcmVhZE9ubHkgPSBfdGhpcyRwcm9wcy5yZWFkT25seSxcbiAgICAgICAgICBkaXNhYmxlZCA9IF90aGlzJHByb3BzLmRpc2FibGVkLFxuICAgICAgICAgIHN0eWxlID0gX3RoaXMkcHJvcHMuc3R5bGU7IC8vIHBhc3MgYWxsIHByb3BzIHRoYXQgd2UgZG9uJ3QgdXNlIHRocm91Z2ggdG8gdGhlIGlucHV0IGNvbnRyb2xcblxuICAgICAgdmFyIHByb3BzID0gb21pdChfdGhpcy5wcm9wcywgJ3N0eWxlJywga2V5cyhwcm9wVHlwZXMpKTtcbiAgICAgIHJldHVybiBfb2JqZWN0U3ByZWFkJDIoe30sIHByb3BzLCB7fSwgc3R5bGUoJ2lucHV0JyksIHtcbiAgICAgICAgdmFsdWU6IF90aGlzLmdldFBsYWluVGV4dCgpXG4gICAgICB9LCAhcmVhZE9ubHkgJiYgIWRpc2FibGVkICYmIHtcbiAgICAgICAgb25DaGFuZ2U6IF90aGlzLmhhbmRsZUNoYW5nZSxcbiAgICAgICAgb25TZWxlY3Q6IF90aGlzLmhhbmRsZVNlbGVjdCxcbiAgICAgICAgb25LZXlEb3duOiBfdGhpcy5oYW5kbGVLZXlEb3duLFxuICAgICAgICBvbkJsdXI6IF90aGlzLmhhbmRsZUJsdXIsXG4gICAgICAgIG9uQ29tcG9zaXRpb25TdGFydDogX3RoaXMuaGFuZGxlQ29tcG9zaXRpb25TdGFydCxcbiAgICAgICAgb25Db21wb3NpdGlvbkVuZDogX3RoaXMuaGFuZGxlQ29tcG9zaXRpb25FbmQsXG4gICAgICAgIG9uU2Nyb2xsOiBfdGhpcy51cGRhdGVIaWdobGlnaHRlclNjcm9sbFxuICAgICAgfSk7XG4gICAgfSk7XG5cbiAgICBfZGVmaW5lUHJvcGVydHkoX2Fzc2VydFRoaXNJbml0aWFsaXplZChfdGhpcyksIFwicmVuZGVyQ29udHJvbFwiLCBmdW5jdGlvbiAoKSB7XG4gICAgICB2YXIgX3RoaXMkcHJvcHMyID0gX3RoaXMucHJvcHMsXG4gICAgICAgICAgc2luZ2xlTGluZSA9IF90aGlzJHByb3BzMi5zaW5nbGVMaW5lLFxuICAgICAgICAgIHN0eWxlID0gX3RoaXMkcHJvcHMyLnN0eWxlO1xuXG4gICAgICB2YXIgaW5wdXRQcm9wcyA9IF90aGlzLmdldElucHV0UHJvcHMoIXNpbmdsZUxpbmUpO1xuXG4gICAgICByZXR1cm4gUmVhY3QuY3JlYXRlRWxlbWVudChcImRpdlwiLCBzdHlsZSgnY29udHJvbCcpLCBfdGhpcy5yZW5kZXJIaWdobGlnaHRlcihpbnB1dFByb3BzLnN0eWxlKSwgc2luZ2xlTGluZSA/IF90aGlzLnJlbmRlcklucHV0KGlucHV0UHJvcHMpIDogX3RoaXMucmVuZGVyVGV4dGFyZWEoaW5wdXRQcm9wcykpO1xuICAgIH0pO1xuXG4gICAgX2RlZmluZVByb3BlcnR5KF9hc3NlcnRUaGlzSW5pdGlhbGl6ZWQoX3RoaXMpLCBcInJlbmRlcklucHV0XCIsIGZ1bmN0aW9uIChwcm9wcykge1xuICAgICAgcmV0dXJuIFJlYWN0LmNyZWF0ZUVsZW1lbnQoXCJpbnB1dFwiLCBfZXh0ZW5kcyh7XG4gICAgICAgIHR5cGU6IFwidGV4dFwiLFxuICAgICAgICByZWY6IF90aGlzLnNldElucHV0UmVmXG4gICAgICB9LCBwcm9wcykpO1xuICAgIH0pO1xuXG4gICAgX2RlZmluZVByb3BlcnR5KF9hc3NlcnRUaGlzSW5pdGlhbGl6ZWQoX3RoaXMpLCBcInJlbmRlclRleHRhcmVhXCIsIGZ1bmN0aW9uIChwcm9wcykge1xuICAgICAgcmV0dXJuIFJlYWN0LmNyZWF0ZUVsZW1lbnQoXCJ0ZXh0YXJlYVwiLCBfZXh0ZW5kcyh7XG4gICAgICAgIHJlZjogX3RoaXMuc2V0SW5wdXRSZWZcbiAgICAgIH0sIHByb3BzKSk7XG4gICAgfSk7XG5cbiAgICBfZGVmaW5lUHJvcGVydHkoX2Fzc2VydFRoaXNJbml0aWFsaXplZChfdGhpcyksIFwic2V0SW5wdXRSZWZcIiwgZnVuY3Rpb24gKGVsKSB7XG4gICAgICBfdGhpcy5pbnB1dFJlZiA9IGVsO1xuICAgICAgdmFyIGlucHV0UmVmID0gX3RoaXMucHJvcHMuaW5wdXRSZWY7XG5cbiAgICAgIGlmICh0eXBlb2YgaW5wdXRSZWYgPT09ICdmdW5jdGlvbicpIHtcbiAgICAgICAgaW5wdXRSZWYoZWwpO1xuICAgICAgfSBlbHNlIGlmIChpbnB1dFJlZikge1xuICAgICAgICBpbnB1dFJlZi5jdXJyZW50ID0gZWw7XG4gICAgICB9XG4gICAgfSk7XG5cbiAgICBfZGVmaW5lUHJvcGVydHkoX2Fzc2VydFRoaXNJbml0aWFsaXplZChfdGhpcyksIFwicmVuZGVyU3VnZ2VzdGlvbnNPdmVybGF5XCIsIGZ1bmN0aW9uICgpIHtcbiAgICAgIGlmICghaXNOdW1iZXIoX3RoaXMuc3RhdGUuc2VsZWN0aW9uU3RhcnQpKSB7XG4gICAgICAgIC8vIGRvIG5vdCBzaG93IHN1Z2dlc3Rpb25zIHdoZW4gdGhlIGlucHV0IGRvZXMgbm90IGhhdmUgdGhlIGZvY3VzXG4gICAgICAgIHJldHVybiBudWxsO1xuICAgICAgfVxuXG4gICAgICB2YXIgc3VnZ2VzdGlvbnNOb2RlID0gUmVhY3QuY3JlYXRlRWxlbWVudChTdWdnZXN0aW9uc092ZXJsYXkkMSwge1xuICAgICAgICBzdHlsZTogX3RoaXMucHJvcHMuc3R5bGUoJ3N1Z2dlc3Rpb25zJyksXG4gICAgICAgIHBvc2l0aW9uOiBfdGhpcy5zdGF0ZS5zdWdnZXN0aW9uc1Bvc2l0aW9uLFxuICAgICAgICBmb2N1c0luZGV4OiBfdGhpcy5zdGF0ZS5mb2N1c0luZGV4LFxuICAgICAgICBzY3JvbGxGb2N1c2VkSW50b1ZpZXc6IF90aGlzLnN0YXRlLnNjcm9sbEZvY3VzZWRJbnRvVmlldyxcbiAgICAgICAgcmVmOiBmdW5jdGlvbiByZWYoZWwpIHtcbiAgICAgICAgICBfdGhpcy5zdWdnZXN0aW9uc1JlZiA9IGVsO1xuICAgICAgICB9LFxuICAgICAgICBzdWdnZXN0aW9uczogX3RoaXMuc3RhdGUuc3VnZ2VzdGlvbnMsXG4gICAgICAgIG9uU2VsZWN0OiBfdGhpcy5hZGRNZW50aW9uLFxuICAgICAgICBvbk1vdXNlRG93bjogX3RoaXMuaGFuZGxlU3VnZ2VzdGlvbnNNb3VzZURvd24sXG4gICAgICAgIG9uTW91c2VFbnRlcjogZnVuY3Rpb24gb25Nb3VzZUVudGVyKGZvY3VzSW5kZXgpIHtcbiAgICAgICAgICByZXR1cm4gX3RoaXMuc2V0U3RhdGUoe1xuICAgICAgICAgICAgZm9jdXNJbmRleDogZm9jdXNJbmRleCxcbiAgICAgICAgICAgIHNjcm9sbEZvY3VzZWRJbnRvVmlldzogZmFsc2VcbiAgICAgICAgICB9KTtcbiAgICAgICAgfSxcbiAgICAgICAgaXNMb2FkaW5nOiBfdGhpcy5pc0xvYWRpbmcoKSxcbiAgICAgICAgaWdub3JlQWNjZW50czogX3RoaXMucHJvcHMuaWdub3JlQWNjZW50c1xuICAgICAgfSwgX3RoaXMucHJvcHMuY2hpbGRyZW4pO1xuXG4gICAgICBpZiAoX3RoaXMucHJvcHMuc3VnZ2VzdGlvbnNQb3J0YWxIb3N0KSB7XG4gICAgICAgIHJldHVybiBSZWFjdERPTS5jcmVhdGVQb3J0YWwoc3VnZ2VzdGlvbnNOb2RlLCBfdGhpcy5wcm9wcy5zdWdnZXN0aW9uc1BvcnRhbEhvc3QpO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgcmV0dXJuIHN1Z2dlc3Rpb25zTm9kZTtcbiAgICAgIH1cbiAgICB9KTtcblxuICAgIF9kZWZpbmVQcm9wZXJ0eShfYXNzZXJ0VGhpc0luaXRpYWxpemVkKF90aGlzKSwgXCJyZW5kZXJIaWdobGlnaHRlclwiLCBmdW5jdGlvbiAoaW5wdXRTdHlsZSkge1xuICAgICAgdmFyIF90aGlzJHN0YXRlID0gX3RoaXMuc3RhdGUsXG4gICAgICAgICAgc2VsZWN0aW9uU3RhcnQgPSBfdGhpcyRzdGF0ZS5zZWxlY3Rpb25TdGFydCxcbiAgICAgICAgICBzZWxlY3Rpb25FbmQgPSBfdGhpcyRzdGF0ZS5zZWxlY3Rpb25FbmQ7XG4gICAgICB2YXIgX3RoaXMkcHJvcHMzID0gX3RoaXMucHJvcHMsXG4gICAgICAgICAgc2luZ2xlTGluZSA9IF90aGlzJHByb3BzMy5zaW5nbGVMaW5lLFxuICAgICAgICAgIGNoaWxkcmVuID0gX3RoaXMkcHJvcHMzLmNoaWxkcmVuLFxuICAgICAgICAgIHZhbHVlID0gX3RoaXMkcHJvcHMzLnZhbHVlLFxuICAgICAgICAgIHN0eWxlID0gX3RoaXMkcHJvcHMzLnN0eWxlO1xuICAgICAgcmV0dXJuIFJlYWN0LmNyZWF0ZUVsZW1lbnQoSGlnaGxpZ2h0ZXIkMSwge1xuICAgICAgICByZWY6IGZ1bmN0aW9uIHJlZihlbCkge1xuICAgICAgICAgIF90aGlzLmhpZ2hsaWdodGVyUmVmID0gZWw7XG4gICAgICAgIH0sXG4gICAgICAgIHN0eWxlOiBzdHlsZSgnaGlnaGxpZ2h0ZXInKSxcbiAgICAgICAgaW5wdXRTdHlsZTogaW5wdXRTdHlsZSxcbiAgICAgICAgdmFsdWU6IHZhbHVlLFxuICAgICAgICBzaW5nbGVMaW5lOiBzaW5nbGVMaW5lLFxuICAgICAgICBzZWxlY3Rpb246IHtcbiAgICAgICAgICBzdGFydDogc2VsZWN0aW9uU3RhcnQsXG4gICAgICAgICAgZW5kOiBzZWxlY3Rpb25FbmRcbiAgICAgICAgfSxcbiAgICAgICAgb25DYXJldFBvc2l0aW9uQ2hhbmdlOiBmdW5jdGlvbiBvbkNhcmV0UG9zaXRpb25DaGFuZ2UocG9zaXRpb24pIHtcbiAgICAgICAgICByZXR1cm4gX3RoaXMuc2V0U3RhdGUoe1xuICAgICAgICAgICAgY2FyZXRQb3NpdGlvbjogcG9zaXRpb25cbiAgICAgICAgICB9KTtcbiAgICAgICAgfVxuICAgICAgfSwgY2hpbGRyZW4pO1xuICAgIH0pO1xuXG4gICAgX2RlZmluZVByb3BlcnR5KF9hc3NlcnRUaGlzSW5pdGlhbGl6ZWQoX3RoaXMpLCBcImdldFBsYWluVGV4dFwiLCBmdW5jdGlvbiAoKSB7XG4gICAgICByZXR1cm4gZ2V0UGxhaW5UZXh0KF90aGlzLnByb3BzLnZhbHVlIHx8ICcnLCByZWFkQ29uZmlnRnJvbUNoaWxkcmVuKF90aGlzLnByb3BzLmNoaWxkcmVuKSk7XG4gICAgfSk7XG5cbiAgICBfZGVmaW5lUHJvcGVydHkoX2Fzc2VydFRoaXNJbml0aWFsaXplZChfdGhpcyksIFwiZXhlY3V0ZU9uQ2hhbmdlXCIsIGZ1bmN0aW9uIChldmVudCkge1xuICAgICAgZm9yICh2YXIgX2xlbiA9IGFyZ3VtZW50cy5sZW5ndGgsIGFyZ3MgPSBuZXcgQXJyYXkoX2xlbiA+IDEgPyBfbGVuIC0gMSA6IDApLCBfa2V5ID0gMTsgX2tleSA8IF9sZW47IF9rZXkrKykge1xuICAgICAgICBhcmdzW19rZXkgLSAxXSA9IGFyZ3VtZW50c1tfa2V5XTtcbiAgICAgIH1cblxuICAgICAgaWYgKF90aGlzLnByb3BzLm9uQ2hhbmdlKSB7XG4gICAgICAgIHZhciBfdGhpcyRwcm9wczQ7XG5cbiAgICAgICAgcmV0dXJuIChfdGhpcyRwcm9wczQgPSBfdGhpcy5wcm9wcykub25DaGFuZ2UuYXBwbHkoX3RoaXMkcHJvcHM0LCBbZXZlbnRdLmNvbmNhdChhcmdzKSk7XG4gICAgICB9XG5cbiAgICAgIGlmIChfdGhpcy5wcm9wcy52YWx1ZUxpbmspIHtcbiAgICAgICAgdmFyIF90aGlzJHByb3BzJHZhbHVlTGluaztcblxuICAgICAgICByZXR1cm4gKF90aGlzJHByb3BzJHZhbHVlTGluayA9IF90aGlzLnByb3BzLnZhbHVlTGluaykucmVxdWVzdENoYW5nZS5hcHBseShfdGhpcyRwcm9wcyR2YWx1ZUxpbmssIFtldmVudC50YXJnZXQudmFsdWVdLmNvbmNhdChhcmdzKSk7XG4gICAgICB9XG4gICAgfSk7XG5cbiAgICBfZGVmaW5lUHJvcGVydHkoX2Fzc2VydFRoaXNJbml0aWFsaXplZChfdGhpcyksIFwiaGFuZGxlQ2hhbmdlXCIsIGZ1bmN0aW9uIChldikge1xuICAgICAgLy8gaWYgd2UgYXJlIGluc2lkZSBpZnJhbWUsIHdlIG5lZWQgdG8gZmluZCBhY3RpdmVFbGVtZW50IHdpdGhpbiBpdHMgY29udGVudERvY3VtZW50XG4gICAgICB2YXIgY3VycmVudERvY3VtZW50ID0gZG9jdW1lbnQuYWN0aXZlRWxlbWVudCAmJiBkb2N1bWVudC5hY3RpdmVFbGVtZW50LmNvbnRlbnREb2N1bWVudCB8fCBkb2N1bWVudDtcblxuICAgICAgaWYgKGN1cnJlbnREb2N1bWVudC5hY3RpdmVFbGVtZW50ICE9PSBldi50YXJnZXQpIHtcbiAgICAgICAgLy8gZml4IGFuIElFIGJ1ZyAoYmx1ciBmcm9tIGVtcHR5IGlucHV0IGVsZW1lbnQgd2l0aCBwbGFjZWhvbGRlciBhdHRyaWJ1dGUgdHJpZ2dlciBcImlucHV0XCIgZXZlbnQpXG4gICAgICAgIHJldHVybjtcbiAgICAgIH1cblxuICAgICAgdmFyIHZhbHVlID0gX3RoaXMucHJvcHMudmFsdWUgfHwgJyc7XG4gICAgICB2YXIgY29uZmlnID0gcmVhZENvbmZpZ0Zyb21DaGlsZHJlbihfdGhpcy5wcm9wcy5jaGlsZHJlbik7XG4gICAgICB2YXIgbmV3UGxhaW5UZXh0VmFsdWUgPSBldi50YXJnZXQudmFsdWU7IC8vIERlcml2ZSB0aGUgbmV3IHZhbHVlIHRvIHNldCBieSBhcHBseWluZyB0aGUgbG9jYWwgY2hhbmdlIGluIHRoZSB0ZXh0YXJlYSdzIHBsYWluIHRleHRcblxuICAgICAgdmFyIG5ld1ZhbHVlID0gYXBwbHlDaGFuZ2VUb1ZhbHVlKHZhbHVlLCBuZXdQbGFpblRleHRWYWx1ZSwge1xuICAgICAgICBzZWxlY3Rpb25TdGFydEJlZm9yZTogX3RoaXMuc3RhdGUuc2VsZWN0aW9uU3RhcnQsXG4gICAgICAgIHNlbGVjdGlvbkVuZEJlZm9yZTogX3RoaXMuc3RhdGUuc2VsZWN0aW9uRW5kLFxuICAgICAgICBzZWxlY3Rpb25FbmRBZnRlcjogZXYudGFyZ2V0LnNlbGVjdGlvbkVuZFxuICAgICAgfSwgY29uZmlnKTsgLy8gSW4gY2FzZSBhIG1lbnRpb24gaXMgZGVsZXRlZCwgYWxzbyBhZGp1c3QgdGhlIG5ldyBwbGFpbiB0ZXh0IHZhbHVlXG5cbiAgICAgIG5ld1BsYWluVGV4dFZhbHVlID0gZ2V0UGxhaW5UZXh0KG5ld1ZhbHVlLCBjb25maWcpOyAvLyBTYXZlIGN1cnJlbnQgc2VsZWN0aW9uIGFmdGVyIGNoYW5nZSB0byBiZSBhYmxlIHRvIHJlc3RvcmUgY2FyZXQgcG9zaXRpb24gYWZ0ZXIgcmVyZW5kZXJpbmdcblxuICAgICAgdmFyIHNlbGVjdGlvblN0YXJ0ID0gZXYudGFyZ2V0LnNlbGVjdGlvblN0YXJ0O1xuICAgICAgdmFyIHNlbGVjdGlvbkVuZCA9IGV2LnRhcmdldC5zZWxlY3Rpb25FbmQ7XG4gICAgICB2YXIgc2V0U2VsZWN0aW9uQWZ0ZXJNZW50aW9uQ2hhbmdlID0gZmFsc2U7IC8vIEFkanVzdCBzZWxlY3Rpb24gcmFuZ2UgaW4gY2FzZSBhIG1lbnRpb24gd2lsbCBiZSBkZWxldGVkIGJ5IHRoZSBjaGFyYWN0ZXJzIG91dHNpZGUgb2YgdGhlXG4gICAgICAvLyBzZWxlY3Rpb24gcmFuZ2UgdGhhdCBhcmUgYXV0b21hdGljYWxseSBkZWxldGVkXG5cbiAgICAgIHZhciBzdGFydE9mTWVudGlvbiA9IGZpbmRTdGFydE9mTWVudGlvbkluUGxhaW5UZXh0KHZhbHVlLCBjb25maWcsIHNlbGVjdGlvblN0YXJ0KTtcblxuICAgICAgaWYgKHN0YXJ0T2ZNZW50aW9uICE9PSB1bmRlZmluZWQgJiYgX3RoaXMuc3RhdGUuc2VsZWN0aW9uRW5kID4gc3RhcnRPZk1lbnRpb24pIHtcbiAgICAgICAgLy8gb25seSBpZiBhIGRlbGV0aW9uIGhhcyB0YWtlbiBwbGFjZVxuICAgICAgICBzZWxlY3Rpb25TdGFydCA9IHN0YXJ0T2ZNZW50aW9uO1xuICAgICAgICBzZWxlY3Rpb25FbmQgPSBzZWxlY3Rpb25TdGFydDtcbiAgICAgICAgc2V0U2VsZWN0aW9uQWZ0ZXJNZW50aW9uQ2hhbmdlID0gdHJ1ZTtcbiAgICAgIH1cblxuICAgICAgX3RoaXMuc2V0U3RhdGUoe1xuICAgICAgICBzZWxlY3Rpb25TdGFydDogc2VsZWN0aW9uU3RhcnQsXG4gICAgICAgIHNlbGVjdGlvbkVuZDogc2VsZWN0aW9uRW5kLFxuICAgICAgICBzZXRTZWxlY3Rpb25BZnRlck1lbnRpb25DaGFuZ2U6IHNldFNlbGVjdGlvbkFmdGVyTWVudGlvbkNoYW5nZVxuICAgICAgfSk7XG5cbiAgICAgIHZhciBtZW50aW9ucyA9IGdldE1lbnRpb25zKG5ld1ZhbHVlLCBjb25maWcpOyAvLyBQcm9wYWdhdGUgY2hhbmdlXG4gICAgICAvLyBsZXQgaGFuZGxlQ2hhbmdlID0gdGhpcy5nZXRPbkNoYW5nZSh0aGlzLnByb3BzKSB8fCBlbXB0eUZ1bmN0aW9uO1xuXG4gICAgICB2YXIgZXZlbnRNb2NrID0ge1xuICAgICAgICB0YXJnZXQ6IHtcbiAgICAgICAgICB2YWx1ZTogbmV3VmFsdWVcbiAgICAgICAgfVxuICAgICAgfTsgLy8gdGhpcy5wcm9wcy5vbkNoYW5nZS5jYWxsKHRoaXMsIGV2ZW50TW9jaywgbmV3VmFsdWUsIG5ld1BsYWluVGV4dFZhbHVlLCBtZW50aW9ucyk7XG5cbiAgICAgIF90aGlzLmV4ZWN1dGVPbkNoYW5nZShldmVudE1vY2ssIG5ld1ZhbHVlLCBuZXdQbGFpblRleHRWYWx1ZSwgbWVudGlvbnMpO1xuICAgIH0pO1xuXG4gICAgX2RlZmluZVByb3BlcnR5KF9hc3NlcnRUaGlzSW5pdGlhbGl6ZWQoX3RoaXMpLCBcImhhbmRsZVNlbGVjdFwiLCBmdW5jdGlvbiAoZXYpIHtcbiAgICAgIC8vIHRoaXMgZnVuY3Rpb24gd2lsbCBiZSBjYWxsZWQgd2hlbiB3ZSBoaXQgYGVudGVyYCBhbmQgYHRhYmAgdG8gc2VsZWN0IGEgbWVudGlvbiBpbiB0aGUgc3VnZ2VzdGlvbiBvdmVybGF5LlxuICAgICAgLy8gZHVlIHRvIHRoZSBjdXJyZW50IHJlcXVpcmVtZW50LCB3ZSB3YW50IHRvIGtlZXAgdGhlIGBAYCBzeW1ib2wgYWZ0ZXIgYSBtZW50aW9uIGlzIHNlbGVjdGVkLiAodGhpcyByZXF1aXJlbWVudCBpcyBkb25lIGJ5IHVzaW5nIHRoZSBkaXNwbGF5VHJhbnNmb3JtIHByb3ApLlxuICAgICAgLy8gdGhlIHJlcXVpcmVtZW50IG1ha2VzIHRoaXMgY2hlY2sgbmVjZXNzYXJ5IGJlY2F1c2Ugb3RoZXJ3aXNlLCB0aGUgYEBgIHN5bWJvbCB3aWxsIG1ha2UgdGhpcyBmdW5jdGlvbiB0aGluayB0aGF0IHRoZSBtZW50aW9uIGhhc24ndCBiZWVuIGNob3NlbiwgYW5kIHRoZSBzdWdnZXN0aW9uIG92ZXJsYXkgd2lsbCBzaG93IHVwLCBcbiAgICAgIC8vIHdoaWNoIGlzIG5vdCB3aGF0IHdlIHdhbnQgdG8gc2VlKHRoZSBvdmVybGF5IHNob3VsZCBkaXNhcHBlYXIgYWZ0ZXIgdGhlIGZvY3VzZWQgbWVudGlvbiBpcyBzZWxlY3RlZCkuXG4gICAgICBpZiAoX3RoaXMuc2VsZWN0Rm9jdXNlZENhbGxlZCkge1xuICAgICAgICBfdGhpcy5zZWxlY3RGb2N1c2VkQ2FsbGVkID0gZmFsc2U7XG4gICAgICAgIHJldHVybjtcbiAgICAgIH0gLy8ga2VlcCB0cmFjayBvZiBzZWxlY3Rpb24gcmFuZ2UgLyBjYXJldCBwb3NpdGlvblxuXG5cbiAgICAgIF90aGlzLnNldFN0YXRlKHtcbiAgICAgICAgc2VsZWN0aW9uU3RhcnQ6IGV2LnRhcmdldC5zZWxlY3Rpb25TdGFydCxcbiAgICAgICAgc2VsZWN0aW9uRW5kOiBldi50YXJnZXQuc2VsZWN0aW9uRW5kXG4gICAgICB9KTsgLy8gZG8gbm90aGluZyB3aGlsZSBhIElNRSBjb21wb3NpdGlvbiBzZXNzaW9uIGlzIGFjdGl2ZVxuXG5cbiAgICAgIGlmIChpc0NvbXBvc2luZykgcmV0dXJuOyAvLyByZWZyZXNoIHN1Z2dlc3Rpb25zIHF1ZXJpZXNcblxuICAgICAgdmFyIGVsID0gX3RoaXMuaW5wdXRSZWY7XG5cbiAgICAgIGlmIChldi50YXJnZXQuc2VsZWN0aW9uU3RhcnQgPT09IGV2LnRhcmdldC5zZWxlY3Rpb25FbmQpIHtcbiAgICAgICAgX3RoaXMudXBkYXRlTWVudGlvbnNRdWVyaWVzKGVsLnZhbHVlLCBldi50YXJnZXQuc2VsZWN0aW9uU3RhcnQpO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgX3RoaXMuY2xlYXJTdWdnZXN0aW9ucygpO1xuICAgICAgfSAvLyBzeW5jIGhpZ2hsaWdodGVycyBzY3JvbGwgcG9zaXRpb25cblxuXG4gICAgICBfdGhpcy51cGRhdGVIaWdobGlnaHRlclNjcm9sbCgpO1xuXG4gICAgICBfdGhpcy5wcm9wcy5vblNlbGVjdChldik7XG4gICAgfSk7XG5cbiAgICBfZGVmaW5lUHJvcGVydHkoX2Fzc2VydFRoaXNJbml0aWFsaXplZChfdGhpcyksIFwiaGFuZGxlS2V5RG93blwiLCBmdW5jdGlvbiAoZXYpIHtcbiAgICAgIC8vIGRvIG5vdCBpbnRlcmNlcHQga2V5IGV2ZW50cyBpZiB0aGUgc3VnZ2VzdGlvbnMgb3ZlcmxheSBpcyBub3Qgc2hvd25cbiAgICAgIHZhciBzdWdnZXN0aW9uc0NvdW50ID0gY291bnRTdWdnZXN0aW9ucyhfdGhpcy5zdGF0ZS5zdWdnZXN0aW9ucyk7XG4gICAgICB2YXIgc3VnZ2VzdGlvbnNDb21wID0gX3RoaXMuc3VnZ2VzdGlvbnNSZWY7XG5cbiAgICAgIGlmIChzdWdnZXN0aW9uc0NvdW50ID09PSAwIHx8ICFzdWdnZXN0aW9uc0NvbXApIHtcbiAgICAgICAgX3RoaXMucHJvcHMub25LZXlEb3duKGV2KTtcblxuICAgICAgICByZXR1cm47XG4gICAgICB9XG5cbiAgICAgIGlmIChPYmplY3QudmFsdWVzKEtFWSkuaW5kZXhPZihldi5rZXlDb2RlKSA+PSAwKSB7XG4gICAgICAgIGV2LnByZXZlbnREZWZhdWx0KCk7XG4gICAgICB9XG5cbiAgICAgIHN3aXRjaCAoZXYua2V5Q29kZSkge1xuICAgICAgICBjYXNlIEtFWS5FU0M6XG4gICAgICAgICAge1xuICAgICAgICAgICAgX3RoaXMuY2xlYXJTdWdnZXN0aW9ucygpO1xuXG4gICAgICAgICAgICByZXR1cm47XG4gICAgICAgICAgfVxuXG4gICAgICAgIGNhc2UgS0VZLkRPV046XG4gICAgICAgICAge1xuICAgICAgICAgICAgX3RoaXMuc2hpZnRGb2N1cygrMSk7XG5cbiAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgICB9XG5cbiAgICAgICAgY2FzZSBLRVkuVVA6XG4gICAgICAgICAge1xuICAgICAgICAgICAgX3RoaXMuc2hpZnRGb2N1cygtMSk7XG5cbiAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgICB9XG5cbiAgICAgICAgY2FzZSBLRVkuUkVUVVJOOlxuICAgICAgICAgIHtcbiAgICAgICAgICAgIF90aGlzLnNlbGVjdEZvY3VzZWQoKTtcblxuICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICAgIH1cblxuICAgICAgICBjYXNlIEtFWS5UQUI6XG4gICAgICAgICAge1xuICAgICAgICAgICAgX3RoaXMuc2VsZWN0Rm9jdXNlZCgpO1xuXG4gICAgICAgICAgICByZXR1cm47XG4gICAgICAgICAgfVxuXG4gICAgICAgIGRlZmF1bHQ6XG4gICAgICAgICAge1xuICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICAgIH1cbiAgICAgIH1cbiAgICB9KTtcblxuICAgIF9kZWZpbmVQcm9wZXJ0eShfYXNzZXJ0VGhpc0luaXRpYWxpemVkKF90aGlzKSwgXCJzaGlmdEZvY3VzXCIsIGZ1bmN0aW9uIChkZWx0YSkge1xuICAgICAgdmFyIHN1Z2dlc3Rpb25zQ291bnQgPSBjb3VudFN1Z2dlc3Rpb25zKF90aGlzLnN0YXRlLnN1Z2dlc3Rpb25zKTtcblxuICAgICAgX3RoaXMuc2V0U3RhdGUoe1xuICAgICAgICBmb2N1c0luZGV4OiAoc3VnZ2VzdGlvbnNDb3VudCArIF90aGlzLnN0YXRlLmZvY3VzSW5kZXggKyBkZWx0YSkgJSBzdWdnZXN0aW9uc0NvdW50LFxuICAgICAgICBzY3JvbGxGb2N1c2VkSW50b1ZpZXc6IHRydWVcbiAgICAgIH0pO1xuICAgIH0pO1xuXG4gICAgX2RlZmluZVByb3BlcnR5KF9hc3NlcnRUaGlzSW5pdGlhbGl6ZWQoX3RoaXMpLCBcInNlbGVjdEZvY3VzZWRcIiwgZnVuY3Rpb24gKCkge1xuICAgICAgdmFyIF90aGlzJHN0YXRlMiA9IF90aGlzLnN0YXRlLFxuICAgICAgICAgIHN1Z2dlc3Rpb25zID0gX3RoaXMkc3RhdGUyLnN1Z2dlc3Rpb25zLFxuICAgICAgICAgIGZvY3VzSW5kZXggPSBfdGhpcyRzdGF0ZTIuZm9jdXNJbmRleDtcbiAgICAgIHZhciBfT2JqZWN0JHZhbHVlcyRyZWR1Y2UgPSBPYmplY3QudmFsdWVzKHN1Z2dlc3Rpb25zKS5yZWR1Y2UoZnVuY3Rpb24gKGFjYywgX3JlZikge1xuICAgICAgICB2YXIgcmVzdWx0cyA9IF9yZWYucmVzdWx0cyxcbiAgICAgICAgICAgIHF1ZXJ5SW5mbyA9IF9yZWYucXVlcnlJbmZvO1xuICAgICAgICByZXR1cm4gW10uY29uY2F0KF90b0NvbnN1bWFibGVBcnJheShhY2MpLCBfdG9Db25zdW1hYmxlQXJyYXkocmVzdWx0cy5tYXAoZnVuY3Rpb24gKHJlc3VsdCkge1xuICAgICAgICAgIHJldHVybiB7XG4gICAgICAgICAgICByZXN1bHQ6IHJlc3VsdCxcbiAgICAgICAgICAgIHF1ZXJ5SW5mbzogcXVlcnlJbmZvXG4gICAgICAgICAgfTtcbiAgICAgICAgfSkpKTtcbiAgICAgIH0sIFtdKVtmb2N1c0luZGV4XSxcbiAgICAgICAgICByZXN1bHQgPSBfT2JqZWN0JHZhbHVlcyRyZWR1Y2UucmVzdWx0LFxuICAgICAgICAgIHF1ZXJ5SW5mbyA9IF9PYmplY3QkdmFsdWVzJHJlZHVjZS5xdWVyeUluZm87XG4gICAgICBfdGhpcy5zZWxlY3RGb2N1c2VkQ2FsbGVkID0gdHJ1ZTtcblxuICAgICAgX3RoaXMuYWRkTWVudGlvbihyZXN1bHQsIHF1ZXJ5SW5mbyk7XG5cbiAgICAgIF90aGlzLnNldFN0YXRlKHtcbiAgICAgICAgZm9jdXNJbmRleDogMFxuICAgICAgfSk7XG4gICAgfSk7XG5cbiAgICBfZGVmaW5lUHJvcGVydHkoX2Fzc2VydFRoaXNJbml0aWFsaXplZChfdGhpcyksIFwiaGFuZGxlQmx1clwiLCBmdW5jdGlvbiAoZXYpIHtcbiAgICAgIHZhciBjbGlja2VkU3VnZ2VzdGlvbiA9IF90aGlzLl9zdWdnZXN0aW9uc01vdXNlRG93bjtcbiAgICAgIF90aGlzLl9zdWdnZXN0aW9uc01vdXNlRG93biA9IGZhbHNlOyAvLyBvbmx5IHJlc2V0IHNlbGVjdGlvbiBpZiB0aGUgbW91c2Vkb3duIGhhcHBlbmVkIG9uIGFuIGVsZW1lbnRcbiAgICAgIC8vIG90aGVyIHRoYW4gdGhlIHN1Z2dlc3Rpb25zIG92ZXJsYXlcblxuICAgICAgaWYgKCFjbGlja2VkU3VnZ2VzdGlvbikge1xuICAgICAgICBfdGhpcy5zZXRTdGF0ZSh7XG4gICAgICAgICAgc2VsZWN0aW9uU3RhcnQ6IG51bGwsXG4gICAgICAgICAgc2VsZWN0aW9uRW5kOiBudWxsXG4gICAgICAgIH0pO1xuICAgICAgfVxuXG4gICAgICB3aW5kb3cuc2V0VGltZW91dChmdW5jdGlvbiAoKSB7XG4gICAgICAgIF90aGlzLnVwZGF0ZUhpZ2hsaWdodGVyU2Nyb2xsKCk7XG4gICAgICB9LCAxKTtcblxuICAgICAgX3RoaXMucHJvcHMub25CbHVyKGV2LCBjbGlja2VkU3VnZ2VzdGlvbik7XG4gICAgfSk7XG5cbiAgICBfZGVmaW5lUHJvcGVydHkoX2Fzc2VydFRoaXNJbml0aWFsaXplZChfdGhpcyksIFwiaGFuZGxlU3VnZ2VzdGlvbnNNb3VzZURvd25cIiwgZnVuY3Rpb24gKGV2KSB7XG4gICAgICAvLyBjdXJyZW50bHkgYnV0dG9ucyBpbiBXVlVJIHdpbGwgYmUgdW5tb3VudGVkIHdoZW4gdGhlIHRleHRhcmVhIGJsdXJzIG91dCxcbiAgICAgIC8vIHdoaWNoIHdlIGRvbid0IHdhbnQgdG8gc2VlIHdoZW4gY2xpY2tpbmcgb24gYSBtZW50aW9uIHN1Z2dlc3RcbiAgICAgIC8vIHNvIHdlIGNhbGwgcHJldmVudERlZmF1bHQgdG8gcHJldmVudCB0aGUgdGV4dGFyZWEgZnJvbSBibHVycmluZyBvdXRcbiAgICAgIGV2LnByZXZlbnREZWZhdWx0KCk7XG4gICAgICBfdGhpcy5zZWxlY3RGb2N1c2VkQ2FsbGVkID0gdHJ1ZTtcbiAgICAgIF90aGlzLl9zdWdnZXN0aW9uc01vdXNlRG93biA9IHRydWU7XG4gICAgfSk7XG5cbiAgICBfZGVmaW5lUHJvcGVydHkoX2Fzc2VydFRoaXNJbml0aWFsaXplZChfdGhpcyksIFwidXBkYXRlU3VnZ2VzdGlvbnNQb3NpdGlvblwiLCBmdW5jdGlvbiAoKSB7XG4gICAgICB2YXIgY2FyZXRQb3NpdGlvbiA9IF90aGlzLnN0YXRlLmNhcmV0UG9zaXRpb247XG4gICAgICB2YXIgX3RoaXMkcHJvcHM1ID0gX3RoaXMucHJvcHMsXG4gICAgICAgICAgc3VnZ2VzdGlvbnNQb3J0YWxIb3N0ID0gX3RoaXMkcHJvcHM1LnN1Z2dlc3Rpb25zUG9ydGFsSG9zdCxcbiAgICAgICAgICBhbGxvd1N1Z2dlc3Rpb25zQWJvdmVDdXJzb3IgPSBfdGhpcyRwcm9wczUuYWxsb3dTdWdnZXN0aW9uc0Fib3ZlQ3Vyc29yO1xuXG4gICAgICBpZiAoIWNhcmV0UG9zaXRpb24gfHwgIV90aGlzLnN1Z2dlc3Rpb25zUmVmKSB7XG4gICAgICAgIHJldHVybjtcbiAgICAgIH1cblxuICAgICAgdmFyIHN1Z2dlc3Rpb25zID0gUmVhY3RET00uZmluZERPTU5vZGUoX3RoaXMuc3VnZ2VzdGlvbnNSZWYpO1xuICAgICAgdmFyIGhpZ2hsaWdodGVyID0gUmVhY3RET00uZmluZERPTU5vZGUoX3RoaXMuaGlnaGxpZ2h0ZXJSZWYpOyAvLyBmaXJzdCBnZXQgdmlld3BvcnQtcmVsYXRpdmUgcG9zaXRpb24gKGhpZ2hsaWdodGVyIGlzIG9mZnNldFBhcmVudCBvZiBjYXJldCk6XG5cbiAgICAgIHZhciBjYXJldE9mZnNldFBhcmVudFJlY3QgPSBoaWdobGlnaHRlci5nZXRCb3VuZGluZ0NsaWVudFJlY3QoKTtcbiAgICAgIHZhciBjYXJldEhlaWdodCA9IGdldENvbXB1dGVkU3R5bGVMZW5ndGhQcm9wKGhpZ2hsaWdodGVyLCAnZm9udC1zaXplJyk7XG4gICAgICB2YXIgdmlld3BvcnRSZWxhdGl2ZSA9IHtcbiAgICAgICAgbGVmdDogY2FyZXRPZmZzZXRQYXJlbnRSZWN0LmxlZnQgKyBjYXJldFBvc2l0aW9uLmxlZnQsXG4gICAgICAgIHRvcDogY2FyZXRPZmZzZXRQYXJlbnRSZWN0LnRvcCArIGNhcmV0UG9zaXRpb24udG9wICsgY2FyZXRIZWlnaHRcbiAgICAgIH07XG4gICAgICB2YXIgdmlld3BvcnRIZWlnaHQgPSBNYXRoLm1heChkb2N1bWVudC5kb2N1bWVudEVsZW1lbnQuY2xpZW50SGVpZ2h0LCB3aW5kb3cuaW5uZXJIZWlnaHQgfHwgMCk7XG5cbiAgICAgIGlmICghc3VnZ2VzdGlvbnMpIHtcbiAgICAgICAgcmV0dXJuO1xuICAgICAgfVxuXG4gICAgICB2YXIgcG9zaXRpb24gPSB7fTsgLy8gaWYgc3VnZ2VzdGlvbnMgbWVudSBpcyBpbiBhIHBvcnRhbCwgdXBkYXRlIHBvc2l0aW9uIHRvIGJlIHJlbGVhdGl2ZSB0byBpdHMgcG9ydGFsIG5vZGVcblxuICAgICAgaWYgKHN1Z2dlc3Rpb25zUG9ydGFsSG9zdCkge1xuICAgICAgICBwb3NpdGlvbi5wb3NpdGlvbiA9ICdmaXhlZCc7XG4gICAgICAgIHZhciBsZWZ0ID0gdmlld3BvcnRSZWxhdGl2ZS5sZWZ0O1xuICAgICAgICB2YXIgdG9wID0gdmlld3BvcnRSZWxhdGl2ZS50b3A7IC8vIGFic29sdXRlL2ZpeGVkIHBvc2l0aW9uZWQgZWxlbWVudHMgYXJlIHBvc2l0aW9uZWQgYWNjb3JkaW5nIHRvIHRoZWlyIGVudGlyZSBib3ggaW5jbHVkaW5nIG1hcmdpbnM7IHNvIHdlIHJlbW92ZSBtYXJnaW5zIGhlcmU6XG5cbiAgICAgICAgbGVmdCAtPSBnZXRDb21wdXRlZFN0eWxlTGVuZ3RoUHJvcChzdWdnZXN0aW9ucywgJ21hcmdpbi1sZWZ0Jyk7XG4gICAgICAgIHRvcCAtPSBnZXRDb21wdXRlZFN0eWxlTGVuZ3RoUHJvcChzdWdnZXN0aW9ucywgJ21hcmdpbi10b3AnKTsgLy8gdGFrZSBpbnRvIGFjY291bnQgaGlnaGxpZ2h0ZXIvdGV4dGlucHV0IHNjcm9sbGluZzpcblxuICAgICAgICBsZWZ0IC09IGhpZ2hsaWdodGVyLnNjcm9sbExlZnQ7XG4gICAgICAgIHRvcCAtPSBoaWdobGlnaHRlci5zY3JvbGxUb3A7IC8vIGd1YXJkIGZvciBtZW50aW9ucyBzdWdnZXN0aW9ucyBsaXN0IGNsaXBwZWQgYnkgcmlnaHQgZWRnZSBvZiB3aW5kb3dcblxuICAgICAgICB2YXIgdmlld3BvcnRXaWR0aCA9IE1hdGgubWF4KGRvY3VtZW50LmRvY3VtZW50RWxlbWVudC5jbGllbnRXaWR0aCwgd2luZG93LmlubmVyV2lkdGggfHwgMCk7XG5cbiAgICAgICAgaWYgKGxlZnQgKyBzdWdnZXN0aW9ucy5vZmZzZXRXaWR0aCA+IHZpZXdwb3J0V2lkdGgpIHtcbiAgICAgICAgICBwb3NpdGlvbi5sZWZ0ID0gTWF0aC5tYXgoMCwgdmlld3BvcnRXaWR0aCAtIHN1Z2dlc3Rpb25zLm9mZnNldFdpZHRoKTtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICBwb3NpdGlvbi5sZWZ0ID0gbGVmdDtcbiAgICAgICAgfSAvLyBndWFyZCBmb3IgbWVudGlvbnMgc3VnZ2VzdGlvbnMgbGlzdCBjbGlwcGVkIGJ5IGJvdHRvbSBlZGdlIG9mIHdpbmRvdyBpZiBhbGxvd1N1Z2dlc3Rpb25zQWJvdmVDdXJzb3Igc2V0IHRvIHRydWUuXG4gICAgICAgIC8vIE1vdmUgdGhlIGxpc3QgdXAgYWJvdmUgdGhlIGNhcmV0IGlmIGl0J3MgZ2V0dGluZyBjdXQgb2ZmIGJ5IHRoZSBib3R0b20gb2YgdGhlIHdpbmRvdywgcHJvdmlkZWQgdGhhdCB0aGUgbGlzdCBoZWlnaHRcbiAgICAgICAgLy8gaXMgc21hbGwgZW5vdWdoIHRvIE5PVCBjb3ZlciB1cCB0aGUgY2FyZXRcblxuXG4gICAgICAgIGlmIChhbGxvd1N1Z2dlc3Rpb25zQWJvdmVDdXJzb3IgJiYgdG9wICsgc3VnZ2VzdGlvbnMub2Zmc2V0SGVpZ2h0ID4gdmlld3BvcnRIZWlnaHQgJiYgc3VnZ2VzdGlvbnMub2Zmc2V0SGVpZ2h0IDwgdG9wIC0gY2FyZXRIZWlnaHQpIHtcbiAgICAgICAgICBwb3NpdGlvbi50b3AgPSBNYXRoLm1heCgwLCB0b3AgLSBzdWdnZXN0aW9ucy5vZmZzZXRIZWlnaHQgLSBjYXJldEhlaWdodCk7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgcG9zaXRpb24udG9wID0gdG9wO1xuICAgICAgICB9XG4gICAgICB9IGVsc2Uge1xuICAgICAgICB2YXIgX2xlZnQgPSBjYXJldFBvc2l0aW9uLmxlZnQgLSBoaWdobGlnaHRlci5zY3JvbGxMZWZ0O1xuXG4gICAgICAgIHZhciBfdG9wID0gY2FyZXRQb3NpdGlvbi50b3AgLSBoaWdobGlnaHRlci5zY3JvbGxUb3A7IC8vIGd1YXJkIGZvciBtZW50aW9ucyBzdWdnZXN0aW9ucyBsaXN0IGNsaXBwZWQgYnkgcmlnaHQgZWRnZSBvZiB3aW5kb3dcblxuXG4gICAgICAgIGlmIChfbGVmdCArIHN1Z2dlc3Rpb25zLm9mZnNldFdpZHRoID4gX3RoaXMuY29udGFpbmVyUmVmLm9mZnNldFdpZHRoKSB7XG4gICAgICAgICAgcG9zaXRpb24ucmlnaHQgPSAwO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIHBvc2l0aW9uLmxlZnQgPSBfbGVmdDtcbiAgICAgICAgfSAvLyBndWFyZCBmb3IgbWVudGlvbnMgc3VnZ2VzdGlvbnMgbGlzdCBjbGlwcGVkIGJ5IGJvdHRvbSBlZGdlIG9mIHdpbmRvdyBpZiBhbGxvd1N1Z2dlc3Rpb25zQWJvdmVDdXJzb3Igc2V0IHRvIHRydWUuXG4gICAgICAgIC8vIG1vdmUgdGhlIGxpc3QgdXAgYWJvdmUgdGhlIGNhcmV0IGlmIGl0J3MgZ2V0dGluZyBjdXQgb2ZmIGJ5IHRoZSBib3R0b20gb2YgdGhlIHdpbmRvdywgcHJvdmlkZWQgdGhhdCB0aGUgbGlzdCBoZWlnaHRcbiAgICAgICAgLy8gaXMgc21hbGwgZW5vdWdoIHRvIE5PVCBjb3ZlciB1cCB0aGUgY2FyZXRcblxuXG4gICAgICAgIGlmIChhbGxvd1N1Z2dlc3Rpb25zQWJvdmVDdXJzb3IgJiYgdmlld3BvcnRSZWxhdGl2ZS50b3AgLSBoaWdobGlnaHRlci5zY3JvbGxUb3AgKyBzdWdnZXN0aW9ucy5vZmZzZXRIZWlnaHQgPiB2aWV3cG9ydEhlaWdodCAmJiBzdWdnZXN0aW9ucy5vZmZzZXRIZWlnaHQgPCBjYXJldE9mZnNldFBhcmVudFJlY3QudG9wIC0gY2FyZXRIZWlnaHQgLSBoaWdobGlnaHRlci5zY3JvbGxUb3ApIHtcbiAgICAgICAgICBwb3NpdGlvbi50b3AgPSBfdG9wIC0gc3VnZ2VzdGlvbnMub2Zmc2V0SGVpZ2h0IC0gY2FyZXRIZWlnaHQ7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgcG9zaXRpb24udG9wID0gX3RvcDtcbiAgICAgICAgfVxuICAgICAgfVxuXG4gICAgICBpZiAoaXNPYmplY3RFcXVhbChwb3NpdGlvbiwgX3RoaXMuc3RhdGUuc3VnZ2VzdGlvbnNQb3NpdGlvbikpIHtcbiAgICAgICAgcmV0dXJuO1xuICAgICAgfVxuXG4gICAgICBfdGhpcy5zZXRTdGF0ZSh7XG4gICAgICAgIHN1Z2dlc3Rpb25zUG9zaXRpb246IHBvc2l0aW9uXG4gICAgICB9KTtcbiAgICB9KTtcblxuICAgIF9kZWZpbmVQcm9wZXJ0eShfYXNzZXJ0VGhpc0luaXRpYWxpemVkKF90aGlzKSwgXCJ1cGRhdGVIaWdobGlnaHRlclNjcm9sbFwiLCBmdW5jdGlvbiAoKSB7XG4gICAgICBpZiAoIV90aGlzLmlucHV0UmVmIHx8ICFfdGhpcy5oaWdobGlnaHRlclJlZikge1xuICAgICAgICAvLyBzaW5jZSB0aGUgaW52b2NhdGlvbiBvZiB0aGlzIGZ1bmN0aW9uIGlzIGRlZmVycmVkLFxuICAgICAgICAvLyB0aGUgd2hvbGUgY29tcG9uZW50IG1heSBoYXZlIGJlZW4gdW5tb3VudGVkIGluIHRoZSBtZWFud2hpbGVcbiAgICAgICAgcmV0dXJuO1xuICAgICAgfVxuXG4gICAgICB2YXIgaW5wdXQgPSBfdGhpcy5pbnB1dFJlZjtcbiAgICAgIHZhciBoaWdobGlnaHRlciA9IFJlYWN0RE9NLmZpbmRET01Ob2RlKF90aGlzLmhpZ2hsaWdodGVyUmVmKTtcbiAgICAgIGhpZ2hsaWdodGVyLnNjcm9sbExlZnQgPSBpbnB1dC5zY3JvbGxMZWZ0O1xuICAgICAgaGlnaGxpZ2h0ZXIuc2Nyb2xsVG9wID0gaW5wdXQuc2Nyb2xsVG9wO1xuICAgICAgaGlnaGxpZ2h0ZXIuaGVpZ2h0ID0gaW5wdXQuaGVpZ2h0O1xuICAgIH0pO1xuXG4gICAgX2RlZmluZVByb3BlcnR5KF9hc3NlcnRUaGlzSW5pdGlhbGl6ZWQoX3RoaXMpLCBcImhhbmRsZUNvbXBvc2l0aW9uU3RhcnRcIiwgZnVuY3Rpb24gKCkge1xuICAgICAgaXNDb21wb3NpbmcgPSB0cnVlO1xuICAgIH0pO1xuXG4gICAgX2RlZmluZVByb3BlcnR5KF9hc3NlcnRUaGlzSW5pdGlhbGl6ZWQoX3RoaXMpLCBcImhhbmRsZUNvbXBvc2l0aW9uRW5kXCIsIGZ1bmN0aW9uICgpIHtcbiAgICAgIGlzQ29tcG9zaW5nID0gZmFsc2U7XG4gICAgfSk7XG5cbiAgICBfZGVmaW5lUHJvcGVydHkoX2Fzc2VydFRoaXNJbml0aWFsaXplZChfdGhpcyksIFwic2V0U2VsZWN0aW9uXCIsIGZ1bmN0aW9uIChzZWxlY3Rpb25TdGFydCwgc2VsZWN0aW9uRW5kKSB7XG4gICAgICBpZiAoc2VsZWN0aW9uU3RhcnQgPT09IG51bGwgfHwgc2VsZWN0aW9uRW5kID09PSBudWxsKSByZXR1cm47XG4gICAgICB2YXIgZWwgPSBfdGhpcy5pbnB1dFJlZjtcblxuICAgICAgaWYgKGVsLnNldFNlbGVjdGlvblJhbmdlKSB7XG4gICAgICAgIGVsLnNldFNlbGVjdGlvblJhbmdlKHNlbGVjdGlvblN0YXJ0LCBzZWxlY3Rpb25FbmQpO1xuICAgICAgfSBlbHNlIGlmIChlbC5jcmVhdGVUZXh0UmFuZ2UpIHtcbiAgICAgICAgdmFyIHJhbmdlID0gZWwuY3JlYXRlVGV4dFJhbmdlKCk7XG4gICAgICAgIHJhbmdlLmNvbGxhcHNlKHRydWUpO1xuICAgICAgICByYW5nZS5tb3ZlRW5kKCdjaGFyYWN0ZXInLCBzZWxlY3Rpb25FbmQpO1xuICAgICAgICByYW5nZS5tb3ZlU3RhcnQoJ2NoYXJhY3RlcicsIHNlbGVjdGlvblN0YXJ0KTtcbiAgICAgICAgcmFuZ2Uuc2VsZWN0KCk7XG4gICAgICB9XG4gICAgfSk7XG5cbiAgICBfZGVmaW5lUHJvcGVydHkoX2Fzc2VydFRoaXNJbml0aWFsaXplZChfdGhpcyksIFwidXBkYXRlTWVudGlvbnNRdWVyaWVzXCIsIGZ1bmN0aW9uIChwbGFpblRleHRWYWx1ZSwgY2FyZXRQb3NpdGlvbikge1xuICAgICAgLy8gSW52YWxpZGF0ZSBwcmV2aW91cyBxdWVyaWVzLiBBc3luYyByZXN1bHRzIGZvciBwcmV2aW91cyBxdWVyaWVzIHdpbGwgYmUgbmVnbGVjdGVkLlxuICAgICAgX3RoaXMuX3F1ZXJ5SWQrKztcbiAgICAgIF90aGlzLnN1Z2dlc3Rpb25zID0ge307XG5cbiAgICAgIF90aGlzLnNldFN0YXRlKHtcbiAgICAgICAgc3VnZ2VzdGlvbnM6IHt9XG4gICAgICB9KTtcblxuICAgICAgdmFyIHZhbHVlID0gX3RoaXMucHJvcHMudmFsdWUgfHwgJyc7XG4gICAgICB2YXIgY2hpbGRyZW4gPSBfdGhpcy5wcm9wcy5jaGlsZHJlbjtcbiAgICAgIHZhciBjb25maWcgPSByZWFkQ29uZmlnRnJvbUNoaWxkcmVuKGNoaWxkcmVuKTtcbiAgICAgIHZhciBwb3NpdGlvbkluVmFsdWUgPSBtYXBQbGFpblRleHRJbmRleCh2YWx1ZSwgY29uZmlnLCBjYXJldFBvc2l0aW9uLCAnTlVMTCcpOyAvLyBJZiBjYXJldCBpcyBpbnNpZGUgb2YgbWVudGlvbiwgZG8gbm90IHF1ZXJ5XG5cbiAgICAgIGlmIChwb3NpdGlvbkluVmFsdWUgPT09IG51bGwpIHtcbiAgICAgICAgcmV0dXJuO1xuICAgICAgfSAvLyBFeHRyYWN0IHN1YnN0cmluZyBpbiBiZXR3ZWVuIHRoZSBlbmQgb2YgdGhlIHByZXZpb3VzIG1lbnRpb24gYW5kIHRoZSBjYXJldFxuXG5cbiAgICAgIHZhciBzdWJzdHJpbmdTdGFydEluZGV4ID0gZ2V0RW5kT2ZMYXN0TWVudGlvbih2YWx1ZS5zdWJzdHJpbmcoMCwgcG9zaXRpb25JblZhbHVlKSwgY29uZmlnKTtcbiAgICAgIHZhciBzdWJzdHJpbmcgPSBwbGFpblRleHRWYWx1ZS5zdWJzdHJpbmcoc3Vic3RyaW5nU3RhcnRJbmRleCwgY2FyZXRQb3NpdGlvbik7IC8vIENoZWNrIGlmIHN1Z2dlc3Rpb25zIGhhdmUgdG8gYmUgc2hvd246XG4gICAgICAvLyBNYXRjaCB0aGUgdHJpZ2dlciBwYXR0ZXJucyBvZiBhbGwgTWVudGlvbiBjaGlsZHJlbiBvbiB0aGUgZXh0cmFjdGVkIHN1YnN0cmluZ1xuXG4gICAgICBSZWFjdC5DaGlsZHJlbi5mb3JFYWNoKGNoaWxkcmVuLCBmdW5jdGlvbiAoY2hpbGQsIGNoaWxkSW5kZXgpIHtcbiAgICAgICAgaWYgKCFjaGlsZCkge1xuICAgICAgICAgIHJldHVybjtcbiAgICAgICAgfVxuXG4gICAgICAgIHZhciByZWdleCA9IG1ha2VUcmlnZ2VyUmVnZXgoY2hpbGQucHJvcHMudHJpZ2dlciwgX3RoaXMucHJvcHMpO1xuICAgICAgICB2YXIgbWF0Y2ggPSBzdWJzdHJpbmcubWF0Y2gocmVnZXgpO1xuXG4gICAgICAgIGlmIChtYXRjaCkge1xuICAgICAgICAgIHZhciBxdWVyeVNlcXVlbmNlU3RhcnQgPSBzdWJzdHJpbmdTdGFydEluZGV4ICsgc3Vic3RyaW5nLmluZGV4T2YobWF0Y2hbMV0sIG1hdGNoLmluZGV4KTtcblxuICAgICAgICAgIF90aGlzLnF1ZXJ5RGF0YShtYXRjaFsyXSwgY2hpbGRJbmRleCwgcXVlcnlTZXF1ZW5jZVN0YXJ0LCBxdWVyeVNlcXVlbmNlU3RhcnQgKyBtYXRjaFsxXS5sZW5ndGgsIHBsYWluVGV4dFZhbHVlKTtcbiAgICAgICAgfVxuICAgICAgfSk7XG4gICAgfSk7XG5cbiAgICBfZGVmaW5lUHJvcGVydHkoX2Fzc2VydFRoaXNJbml0aWFsaXplZChfdGhpcyksIFwiY2xlYXJTdWdnZXN0aW9uc1wiLCBmdW5jdGlvbiAoKSB7XG4gICAgICAvLyBJbnZhbGlkYXRlIHByZXZpb3VzIHF1ZXJpZXMuIEFzeW5jIHJlc3VsdHMgZm9yIHByZXZpb3VzIHF1ZXJpZXMgd2lsbCBiZSBuZWdsZWN0ZWQuXG4gICAgICBfdGhpcy5fcXVlcnlJZCsrO1xuICAgICAgX3RoaXMuc3VnZ2VzdGlvbnMgPSB7fTtcblxuICAgICAgX3RoaXMuc2V0U3RhdGUoe1xuICAgICAgICBzdWdnZXN0aW9uczoge30sXG4gICAgICAgIGZvY3VzSW5kZXg6IDBcbiAgICAgIH0pO1xuICAgIH0pO1xuXG4gICAgX2RlZmluZVByb3BlcnR5KF9hc3NlcnRUaGlzSW5pdGlhbGl6ZWQoX3RoaXMpLCBcInF1ZXJ5RGF0YVwiLCBmdW5jdGlvbiAocXVlcnksIGNoaWxkSW5kZXgsIHF1ZXJ5U2VxdWVuY2VTdGFydCwgcXVlcnlTZXF1ZW5jZUVuZCwgcGxhaW5UZXh0VmFsdWUpIHtcbiAgICAgIHZhciBfdGhpcyRwcm9wczYgPSBfdGhpcy5wcm9wcyxcbiAgICAgICAgICBjaGlsZHJlbiA9IF90aGlzJHByb3BzNi5jaGlsZHJlbixcbiAgICAgICAgICBpZ25vcmVBY2NlbnRzID0gX3RoaXMkcHJvcHM2Lmlnbm9yZUFjY2VudHM7XG4gICAgICB2YXIgbWVudGlvbkNoaWxkID0gQ2hpbGRyZW4udG9BcnJheShjaGlsZHJlbilbY2hpbGRJbmRleF07XG4gICAgICB2YXIgcHJvdmlkZURhdGEgPSBnZXREYXRhUHJvdmlkZXIobWVudGlvbkNoaWxkLnByb3BzLmRhdGEsIGlnbm9yZUFjY2VudHMpO1xuICAgICAgdmFyIHN5bmNSZXN1bHQgPSBwcm92aWRlRGF0YShxdWVyeSwgX3RoaXMudXBkYXRlU3VnZ2VzdGlvbnMuYmluZChudWxsLCBfdGhpcy5fcXVlcnlJZCwgY2hpbGRJbmRleCwgcXVlcnksIHF1ZXJ5U2VxdWVuY2VTdGFydCwgcXVlcnlTZXF1ZW5jZUVuZCwgcGxhaW5UZXh0VmFsdWUpKTtcblxuICAgICAgaWYgKHN5bmNSZXN1bHQgaW5zdGFuY2VvZiBBcnJheSkge1xuICAgICAgICBfdGhpcy51cGRhdGVTdWdnZXN0aW9ucyhfdGhpcy5fcXVlcnlJZCwgY2hpbGRJbmRleCwgcXVlcnksIHF1ZXJ5U2VxdWVuY2VTdGFydCwgcXVlcnlTZXF1ZW5jZUVuZCwgcGxhaW5UZXh0VmFsdWUsIHN5bmNSZXN1bHQpO1xuICAgICAgfVxuICAgIH0pO1xuXG4gICAgX2RlZmluZVByb3BlcnR5KF9hc3NlcnRUaGlzSW5pdGlhbGl6ZWQoX3RoaXMpLCBcInVwZGF0ZVN1Z2dlc3Rpb25zXCIsIGZ1bmN0aW9uIChxdWVyeUlkLCBjaGlsZEluZGV4LCBxdWVyeSwgcXVlcnlTZXF1ZW5jZVN0YXJ0LCBxdWVyeVNlcXVlbmNlRW5kLCBwbGFpblRleHRWYWx1ZSwgcmVzdWx0cykge1xuICAgICAgLy8gbmVnbGVjdCBhc3luYyByZXN1bHRzIGZyb20gcHJldmlvdXMgcXVlcmllc1xuICAgICAgaWYgKHF1ZXJ5SWQgIT09IF90aGlzLl9xdWVyeUlkKSByZXR1cm47IC8vIHNhdmUgaW4gcHJvcGVydHkgc28gdGhhdCBtdWx0aXBsZSBzeW5jIHN0YXRlIHVwZGF0ZXMgZnJvbSBkaWZmZXJlbnQgbWVudGlvbnMgc291cmNlc1xuICAgICAgLy8gd29uJ3Qgb3ZlcndyaXRlIGVhY2ggb3RoZXJcblxuICAgICAgX3RoaXMuc3VnZ2VzdGlvbnMgPSBfb2JqZWN0U3ByZWFkJDIoe30sIF90aGlzLnN1Z2dlc3Rpb25zLCBfZGVmaW5lUHJvcGVydHkoe30sIGNoaWxkSW5kZXgsIHtcbiAgICAgICAgcXVlcnlJbmZvOiB7XG4gICAgICAgICAgY2hpbGRJbmRleDogY2hpbGRJbmRleCxcbiAgICAgICAgICBxdWVyeTogcXVlcnksXG4gICAgICAgICAgcXVlcnlTZXF1ZW5jZVN0YXJ0OiBxdWVyeVNlcXVlbmNlU3RhcnQsXG4gICAgICAgICAgcXVlcnlTZXF1ZW5jZUVuZDogcXVlcnlTZXF1ZW5jZUVuZCxcbiAgICAgICAgICBwbGFpblRleHRWYWx1ZTogcGxhaW5UZXh0VmFsdWVcbiAgICAgICAgfSxcbiAgICAgICAgcmVzdWx0czogcmVzdWx0c1xuICAgICAgfSkpO1xuICAgICAgdmFyIGZvY3VzSW5kZXggPSBfdGhpcy5zdGF0ZS5mb2N1c0luZGV4O1xuICAgICAgdmFyIHN1Z2dlc3Rpb25zQ291bnQgPSBjb3VudFN1Z2dlc3Rpb25zKF90aGlzLnN1Z2dlc3Rpb25zKTtcblxuICAgICAgX3RoaXMuc2V0U3RhdGUoe1xuICAgICAgICBzdWdnZXN0aW9uczogX3RoaXMuc3VnZ2VzdGlvbnMsXG4gICAgICAgIGZvY3VzSW5kZXg6IGZvY3VzSW5kZXggPj0gc3VnZ2VzdGlvbnNDb3VudCA/IE1hdGgubWF4KHN1Z2dlc3Rpb25zQ291bnQgLSAxLCAwKSA6IGZvY3VzSW5kZXhcbiAgICAgIH0pO1xuICAgIH0pO1xuXG4gICAgX2RlZmluZVByb3BlcnR5KF9hc3NlcnRUaGlzSW5pdGlhbGl6ZWQoX3RoaXMpLCBcImFkZE1lbnRpb25cIiwgZnVuY3Rpb24gKF9yZWYyLCBfcmVmMykge1xuICAgICAgdmFyIGlkID0gX3JlZjIuaWQsXG4gICAgICAgICAgZGlzcGxheSA9IF9yZWYyLmRpc3BsYXk7XG4gICAgICB2YXIgY2hpbGRJbmRleCA9IF9yZWYzLmNoaWxkSW5kZXgsXG4gICAgICAgICAgcXVlcnlTZXF1ZW5jZVN0YXJ0ID0gX3JlZjMucXVlcnlTZXF1ZW5jZVN0YXJ0LFxuICAgICAgICAgIHF1ZXJ5U2VxdWVuY2VFbmQgPSBfcmVmMy5xdWVyeVNlcXVlbmNlRW5kLFxuICAgICAgICAgIHBsYWluVGV4dFZhbHVlID0gX3JlZjMucGxhaW5UZXh0VmFsdWU7XG4gICAgICAvLyBJbnNlcnQgbWVudGlvbiBpbiB0aGUgbWFya2VkIHVwIHZhbHVlIGF0IHRoZSBjb3JyZWN0IHBvc2l0aW9uXG4gICAgICB2YXIgdmFsdWUgPSBfdGhpcy5wcm9wcy52YWx1ZSB8fCAnJztcbiAgICAgIHZhciBjb25maWcgPSByZWFkQ29uZmlnRnJvbUNoaWxkcmVuKF90aGlzLnByb3BzLmNoaWxkcmVuKTtcbiAgICAgIHZhciBtZW50aW9uc0NoaWxkID0gQ2hpbGRyZW4udG9BcnJheShfdGhpcy5wcm9wcy5jaGlsZHJlbilbY2hpbGRJbmRleF07XG4gICAgICB2YXIgX21lbnRpb25zQ2hpbGQkcHJvcHMgPSBtZW50aW9uc0NoaWxkLnByb3BzLFxuICAgICAgICAgIG1hcmt1cCA9IF9tZW50aW9uc0NoaWxkJHByb3BzLm1hcmt1cCxcbiAgICAgICAgICBkaXNwbGF5VHJhbnNmb3JtID0gX21lbnRpb25zQ2hpbGQkcHJvcHMuZGlzcGxheVRyYW5zZm9ybSxcbiAgICAgICAgICBhcHBlbmRTcGFjZU9uQWRkID0gX21lbnRpb25zQ2hpbGQkcHJvcHMuYXBwZW5kU3BhY2VPbkFkZCxcbiAgICAgICAgICBvbkFkZCA9IF9tZW50aW9uc0NoaWxkJHByb3BzLm9uQWRkO1xuICAgICAgdmFyIHN0YXJ0ID0gbWFwUGxhaW5UZXh0SW5kZXgodmFsdWUsIGNvbmZpZywgcXVlcnlTZXF1ZW5jZVN0YXJ0LCAnU1RBUlQnKTtcbiAgICAgIHZhciBlbmQgPSBzdGFydCArIHF1ZXJ5U2VxdWVuY2VFbmQgLSBxdWVyeVNlcXVlbmNlU3RhcnQ7XG4gICAgICB2YXIgaW5zZXJ0ID0gbWFrZU1lbnRpb25zTWFya3VwKG1hcmt1cCwgaWQsIGRpc3BsYXkpO1xuXG4gICAgICBpZiAoYXBwZW5kU3BhY2VPbkFkZCkge1xuICAgICAgICBpbnNlcnQgKz0gJyAnO1xuICAgICAgfVxuXG4gICAgICB2YXIgbmV3VmFsdWUgPSBzcGxpY2VTdHJpbmcodmFsdWUsIHN0YXJ0LCBlbmQsIGluc2VydCk7IC8vIFJlZm9jdXMgaW5wdXQgYW5kIHNldCBjYXJldCBwb3NpdGlvbiB0byBlbmQgb2YgbWVudGlvblxuXG4gICAgICBfdGhpcy5pbnB1dFJlZi5mb2N1cygpO1xuXG4gICAgICB2YXIgZGlzcGxheVZhbHVlID0gZGlzcGxheVRyYW5zZm9ybShpZCwgZGlzcGxheSk7XG5cbiAgICAgIGlmIChhcHBlbmRTcGFjZU9uQWRkKSB7XG4gICAgICAgIGRpc3BsYXlWYWx1ZSArPSAnICc7XG4gICAgICB9XG5cbiAgICAgIHZhciBuZXdDYXJldFBvc2l0aW9uID0gcXVlcnlTZXF1ZW5jZVN0YXJ0ICsgZGlzcGxheVZhbHVlLmxlbmd0aDtcblxuICAgICAgX3RoaXMuc2V0U3RhdGUoe1xuICAgICAgICBzZWxlY3Rpb25TdGFydDogbmV3Q2FyZXRQb3NpdGlvbixcbiAgICAgICAgc2VsZWN0aW9uRW5kOiBuZXdDYXJldFBvc2l0aW9uLFxuICAgICAgICBzZXRTZWxlY3Rpb25BZnRlck1lbnRpb25DaGFuZ2U6IHRydWVcbiAgICAgIH0pOyAvLyBQcm9wYWdhdGUgY2hhbmdlXG5cblxuICAgICAgdmFyIGV2ZW50TW9jayA9IHtcbiAgICAgICAgdGFyZ2V0OiB7XG4gICAgICAgICAgdmFsdWU6IG5ld1ZhbHVlXG4gICAgICAgIH1cbiAgICAgIH07XG4gICAgICB2YXIgbWVudGlvbnMgPSBnZXRNZW50aW9ucyhuZXdWYWx1ZSwgY29uZmlnKTtcbiAgICAgIHZhciBuZXdQbGFpblRleHRWYWx1ZSA9IHNwbGljZVN0cmluZyhwbGFpblRleHRWYWx1ZSwgcXVlcnlTZXF1ZW5jZVN0YXJ0LCBxdWVyeVNlcXVlbmNlRW5kLCBkaXNwbGF5VmFsdWUpO1xuXG4gICAgICBfdGhpcy5leGVjdXRlT25DaGFuZ2UoZXZlbnRNb2NrLCBuZXdWYWx1ZSwgbmV3UGxhaW5UZXh0VmFsdWUsIG1lbnRpb25zKTtcblxuICAgICAgaWYgKG9uQWRkKSB7XG4gICAgICAgIG9uQWRkKGlkLCBkaXNwbGF5KTtcbiAgICAgIH0gLy8gTWFrZSBzdXJlIHRoZSBzdWdnZXN0aW9ucyBvdmVybGF5IGlzIGNsb3NlZFxuXG5cbiAgICAgIF90aGlzLmNsZWFyU3VnZ2VzdGlvbnMoKTtcbiAgICB9KTtcblxuICAgIF9kZWZpbmVQcm9wZXJ0eShfYXNzZXJ0VGhpc0luaXRpYWxpemVkKF90aGlzKSwgXCJpc0xvYWRpbmdcIiwgZnVuY3Rpb24gKCkge1xuICAgICAgdmFyIGlzTG9hZGluZyA9IGZhbHNlO1xuICAgICAgUmVhY3QuQ2hpbGRyZW4uZm9yRWFjaChfdGhpcy5wcm9wcy5jaGlsZHJlbiwgZnVuY3Rpb24gKGNoaWxkKSB7XG4gICAgICAgIGlzTG9hZGluZyA9IGlzTG9hZGluZyB8fCBjaGlsZCAmJiBjaGlsZC5wcm9wcy5pc0xvYWRpbmc7XG4gICAgICB9KTtcbiAgICAgIHJldHVybiBpc0xvYWRpbmc7XG4gICAgfSk7XG5cbiAgICBfZGVmaW5lUHJvcGVydHkoX2Fzc2VydFRoaXNJbml0aWFsaXplZChfdGhpcyksIFwiX3F1ZXJ5SWRcIiwgMCk7XG5cbiAgICBfdGhpcy5zdWdnZXN0aW9ucyA9IHt9O1xuICAgIF90aGlzLmhhbmRsZUNvcHkgPSBfdGhpcy5oYW5kbGVDb3B5LmJpbmQoX2Fzc2VydFRoaXNJbml0aWFsaXplZChfdGhpcykpO1xuICAgIF90aGlzLmhhbmRsZUN1dCA9IF90aGlzLmhhbmRsZUN1dC5iaW5kKF9hc3NlcnRUaGlzSW5pdGlhbGl6ZWQoX3RoaXMpKTtcbiAgICBfdGhpcy5oYW5kbGVQYXN0ZSA9IF90aGlzLmhhbmRsZVBhc3RlLmJpbmQoX2Fzc2VydFRoaXNJbml0aWFsaXplZChfdGhpcykpOyAvLyBhIGJvb2xlYW4gdmFyaWFibGUgdGhhdCBpbmRpY2F0ZXMgd2hldGhlciB0aGlzLnNlbGVjdEZvY3VzZWQgaXMganVzdCBjYWxsZWRcblxuICAgIF90aGlzLnNlbGVjdEZvY3VzZWRDYWxsZWQgPSBmYWxzZTtcbiAgICBfdGhpcy5zdGF0ZSA9IHtcbiAgICAgIGZvY3VzSW5kZXg6IDAsXG4gICAgICBzZWxlY3Rpb25TdGFydDogbnVsbCxcbiAgICAgIHNlbGVjdGlvbkVuZDogbnVsbCxcbiAgICAgIHN1Z2dlc3Rpb25zOiB7fSxcbiAgICAgIGNhcmV0UG9zaXRpb246IG51bGwsXG4gICAgICBzdWdnZXN0aW9uc1Bvc2l0aW9uOiBudWxsXG4gICAgfTtcbiAgICByZXR1cm4gX3RoaXM7XG4gIH1cblxuICBfY3JlYXRlQ2xhc3MoTWVudGlvbnNJbnB1dCwgW3tcbiAgICBrZXk6IFwiY29tcG9uZW50RGlkTW91bnRcIixcbiAgICB2YWx1ZTogZnVuY3Rpb24gY29tcG9uZW50RGlkTW91bnQoKSB7XG4gICAgICB2YXIgRVhQRVJJTUVOVEFMX2N1dENvcHlQYXN0ZSA9IHRoaXMucHJvcHMuRVhQRVJJTUVOVEFMX2N1dENvcHlQYXN0ZTtcblxuICAgICAgaWYgKEVYUEVSSU1FTlRBTF9jdXRDb3B5UGFzdGUpIHtcbiAgICAgICAgZG9jdW1lbnQuYWRkRXZlbnRMaXN0ZW5lcignY29weScsIHRoaXMuaGFuZGxlQ29weSk7XG4gICAgICAgIGRvY3VtZW50LmFkZEV2ZW50TGlzdGVuZXIoJ2N1dCcsIHRoaXMuaGFuZGxlQ3V0KTtcbiAgICAgICAgZG9jdW1lbnQuYWRkRXZlbnRMaXN0ZW5lcigncGFzdGUnLCB0aGlzLmhhbmRsZVBhc3RlKTtcbiAgICAgIH1cblxuICAgICAgdGhpcy51cGRhdGVTdWdnZXN0aW9uc1Bvc2l0aW9uKCk7XG4gICAgfVxuICB9LCB7XG4gICAga2V5OiBcImNvbXBvbmVudERpZFVwZGF0ZVwiLFxuICAgIHZhbHVlOiBmdW5jdGlvbiBjb21wb25lbnREaWRVcGRhdGUocHJldlByb3BzLCBwcmV2U3RhdGUpIHtcbiAgICAgIC8vIFVwZGF0ZSBwb3NpdGlvbiBvZiBzdWdnZXN0aW9ucyB1bmxlc3MgdGhpcyBjb21wb25lbnREaWRVcGRhdGUgd2FzXG4gICAgICAvLyB0cmlnZ2VyZWQgYnkgYW4gdXBkYXRlIHRvIHN1Z2dlc3Rpb25zUG9zaXRpb24uXG4gICAgICBpZiAocHJldlN0YXRlLnN1Z2dlc3Rpb25zUG9zaXRpb24gPT09IHRoaXMuc3RhdGUuc3VnZ2VzdGlvbnNQb3NpdGlvbikge1xuICAgICAgICB0aGlzLnVwZGF0ZVN1Z2dlc3Rpb25zUG9zaXRpb24oKTtcbiAgICAgIH0gLy8gbWFpbnRhaW4gc2VsZWN0aW9uIGluIGNhc2UgYSBtZW50aW9uIGlzIGFkZGVkL3JlbW92ZWQgY2F1c2luZ1xuICAgICAgLy8gdGhlIGN1cnNvciB0byBqdW1wIHRvIHRoZSBlbmRcblxuXG4gICAgICBpZiAodGhpcy5zdGF0ZS5zZXRTZWxlY3Rpb25BZnRlck1lbnRpb25DaGFuZ2UpIHtcbiAgICAgICAgdGhpcy5zZXRTdGF0ZSh7XG4gICAgICAgICAgc2V0U2VsZWN0aW9uQWZ0ZXJNZW50aW9uQ2hhbmdlOiBmYWxzZVxuICAgICAgICB9KTtcbiAgICAgICAgdGhpcy5zZXRTZWxlY3Rpb24odGhpcy5zdGF0ZS5zZWxlY3Rpb25TdGFydCwgdGhpcy5zdGF0ZS5zZWxlY3Rpb25FbmQpO1xuICAgICAgfVxuICAgIH1cbiAgfSwge1xuICAgIGtleTogXCJjb21wb25lbnRXaWxsVW5tb3VudFwiLFxuICAgIHZhbHVlOiBmdW5jdGlvbiBjb21wb25lbnRXaWxsVW5tb3VudCgpIHtcbiAgICAgIHZhciBFWFBFUklNRU5UQUxfY3V0Q29weVBhc3RlID0gdGhpcy5wcm9wcy5FWFBFUklNRU5UQUxfY3V0Q29weVBhc3RlO1xuXG4gICAgICBpZiAoRVhQRVJJTUVOVEFMX2N1dENvcHlQYXN0ZSkge1xuICAgICAgICBkb2N1bWVudC5yZW1vdmVFdmVudExpc3RlbmVyKCdjb3B5JywgdGhpcy5oYW5kbGVDb3B5KTtcbiAgICAgICAgZG9jdW1lbnQucmVtb3ZlRXZlbnRMaXN0ZW5lcignY3V0JywgdGhpcy5oYW5kbGVDdXQpO1xuICAgICAgICBkb2N1bWVudC5yZW1vdmVFdmVudExpc3RlbmVyKCdwYXN0ZScsIHRoaXMuaGFuZGxlUGFzdGUpO1xuICAgICAgfVxuICAgIH1cbiAgfSwge1xuICAgIGtleTogXCJyZW5kZXJcIixcbiAgICB2YWx1ZTogZnVuY3Rpb24gcmVuZGVyKCkge1xuICAgICAgdmFyIF90aGlzMiA9IHRoaXM7XG5cbiAgICAgIHJldHVybiBSZWFjdC5jcmVhdGVFbGVtZW50KFwiZGl2XCIsIF9leHRlbmRzKHtcbiAgICAgICAgcmVmOiBmdW5jdGlvbiByZWYoZWwpIHtcbiAgICAgICAgICBfdGhpczIuY29udGFpbmVyUmVmID0gZWw7XG4gICAgICAgIH1cbiAgICAgIH0sIHRoaXMucHJvcHMuc3R5bGUpLCB0aGlzLnJlbmRlckNvbnRyb2woKSwgdGhpcy5yZW5kZXJTdWdnZXN0aW9uc092ZXJsYXkoKSk7XG4gICAgfVxuICB9LCB7XG4gICAga2V5OiBcImhhbmRsZVBhc3RlXCIsXG4gICAgdmFsdWU6IGZ1bmN0aW9uIGhhbmRsZVBhc3RlKGV2ZW50KSB7XG4gICAgICBpZiAoZXZlbnQudGFyZ2V0ICE9PSB0aGlzLmlucHV0UmVmKSB7XG4gICAgICAgIHJldHVybjtcbiAgICAgIH1cblxuICAgICAgaWYgKCF0aGlzLnN1cHBvcnRzQ2xpcGJvYXJkQWN0aW9ucyhldmVudCkpIHtcbiAgICAgICAgcmV0dXJuO1xuICAgICAgfVxuXG4gICAgICBldmVudC5wcmV2ZW50RGVmYXVsdCgpO1xuICAgICAgdmFyIF90aGlzJHN0YXRlMyA9IHRoaXMuc3RhdGUsXG4gICAgICAgICAgc2VsZWN0aW9uU3RhcnQgPSBfdGhpcyRzdGF0ZTMuc2VsZWN0aW9uU3RhcnQsXG4gICAgICAgICAgc2VsZWN0aW9uRW5kID0gX3RoaXMkc3RhdGUzLnNlbGVjdGlvbkVuZDtcbiAgICAgIHZhciBfdGhpcyRwcm9wczcgPSB0aGlzLnByb3BzLFxuICAgICAgICAgIHZhbHVlID0gX3RoaXMkcHJvcHM3LnZhbHVlLFxuICAgICAgICAgIGNoaWxkcmVuID0gX3RoaXMkcHJvcHM3LmNoaWxkcmVuO1xuICAgICAgdmFyIGNvbmZpZyA9IHJlYWRDb25maWdGcm9tQ2hpbGRyZW4oY2hpbGRyZW4pO1xuICAgICAgdmFyIG1hcmt1cFN0YXJ0SW5kZXggPSBtYXBQbGFpblRleHRJbmRleCh2YWx1ZSwgY29uZmlnLCBzZWxlY3Rpb25TdGFydCwgJ1NUQVJUJyk7XG4gICAgICB2YXIgbWFya3VwRW5kSW5kZXggPSBtYXBQbGFpblRleHRJbmRleCh2YWx1ZSwgY29uZmlnLCBzZWxlY3Rpb25FbmQsICdFTkQnKTtcbiAgICAgIHZhciBwYXN0ZWRNZW50aW9ucyA9IGV2ZW50LmNsaXBib2FyZERhdGEuZ2V0RGF0YSgndGV4dC9yZWFjdC1tZW50aW9ucycpO1xuICAgICAgdmFyIHBhc3RlZERhdGEgPSBldmVudC5jbGlwYm9hcmREYXRhLmdldERhdGEoJ3RleHQvcGxhaW4nKTtcbiAgICAgIHZhciBuZXdWYWx1ZSA9IHNwbGljZVN0cmluZyh2YWx1ZSwgbWFya3VwU3RhcnRJbmRleCwgbWFya3VwRW5kSW5kZXgsIHBhc3RlZE1lbnRpb25zIHx8IHBhc3RlZERhdGEpLnJlcGxhY2UoL1xcci9nLCAnJyk7XG4gICAgICB2YXIgbmV3UGxhaW5UZXh0VmFsdWUgPSBnZXRQbGFpblRleHQobmV3VmFsdWUsIGNvbmZpZyk7XG4gICAgICB2YXIgZXZlbnRNb2NrID0ge1xuICAgICAgICB0YXJnZXQ6IF9vYmplY3RTcHJlYWQkMih7fSwgZXZlbnQudGFyZ2V0LCB7XG4gICAgICAgICAgdmFsdWU6IG5ld1ZhbHVlXG4gICAgICAgIH0pXG4gICAgICB9O1xuICAgICAgdGhpcy5leGVjdXRlT25DaGFuZ2UoZXZlbnRNb2NrLCBuZXdWYWx1ZSwgbmV3UGxhaW5UZXh0VmFsdWUsIGdldE1lbnRpb25zKG5ld1ZhbHVlLCBjb25maWcpKTtcbiAgICB9XG4gIH0sIHtcbiAgICBrZXk6IFwic2F2ZVNlbGVjdGlvblRvQ2xpcGJvYXJkXCIsXG4gICAgdmFsdWU6IGZ1bmN0aW9uIHNhdmVTZWxlY3Rpb25Ub0NsaXBib2FyZChldmVudCkge1xuICAgICAgdmFyIF90aGlzJHN0YXRlNCA9IHRoaXMuc3RhdGUsXG4gICAgICAgICAgc2VsZWN0aW9uU3RhcnQgPSBfdGhpcyRzdGF0ZTQuc2VsZWN0aW9uU3RhcnQsXG4gICAgICAgICAgc2VsZWN0aW9uRW5kID0gX3RoaXMkc3RhdGU0LnNlbGVjdGlvbkVuZDtcbiAgICAgIHZhciBfdGhpcyRwcm9wczggPSB0aGlzLnByb3BzLFxuICAgICAgICAgIGNoaWxkcmVuID0gX3RoaXMkcHJvcHM4LmNoaWxkcmVuLFxuICAgICAgICAgIHZhbHVlID0gX3RoaXMkcHJvcHM4LnZhbHVlO1xuICAgICAgdmFyIGNvbmZpZyA9IHJlYWRDb25maWdGcm9tQ2hpbGRyZW4oY2hpbGRyZW4pO1xuICAgICAgdmFyIG1hcmt1cFN0YXJ0SW5kZXggPSBtYXBQbGFpblRleHRJbmRleCh2YWx1ZSwgY29uZmlnLCBzZWxlY3Rpb25TdGFydCwgJ1NUQVJUJyk7XG4gICAgICB2YXIgbWFya3VwRW5kSW5kZXggPSBtYXBQbGFpblRleHRJbmRleCh2YWx1ZSwgY29uZmlnLCBzZWxlY3Rpb25FbmQsICdFTkQnKTtcbiAgICAgIGV2ZW50LmNsaXBib2FyZERhdGEuc2V0RGF0YSgndGV4dC9wbGFpbicsIGV2ZW50LnRhcmdldC52YWx1ZS5zbGljZShzZWxlY3Rpb25TdGFydCwgc2VsZWN0aW9uRW5kKSk7XG4gICAgICBldmVudC5jbGlwYm9hcmREYXRhLnNldERhdGEoJ3RleHQvcmVhY3QtbWVudGlvbnMnLCB2YWx1ZS5zbGljZShtYXJrdXBTdGFydEluZGV4LCBtYXJrdXBFbmRJbmRleCkpO1xuICAgIH1cbiAgfSwge1xuICAgIGtleTogXCJzdXBwb3J0c0NsaXBib2FyZEFjdGlvbnNcIixcbiAgICB2YWx1ZTogZnVuY3Rpb24gc3VwcG9ydHNDbGlwYm9hcmRBY3Rpb25zKGV2ZW50KSB7XG4gICAgICByZXR1cm4gISFldmVudC5jbGlwYm9hcmREYXRhO1xuICAgIH1cbiAgfSwge1xuICAgIGtleTogXCJoYW5kbGVDb3B5XCIsXG4gICAgdmFsdWU6IGZ1bmN0aW9uIGhhbmRsZUNvcHkoZXZlbnQpIHtcbiAgICAgIGlmIChldmVudC50YXJnZXQgIT09IHRoaXMuaW5wdXRSZWYpIHtcbiAgICAgICAgcmV0dXJuO1xuICAgICAgfVxuXG4gICAgICBpZiAoIXRoaXMuc3VwcG9ydHNDbGlwYm9hcmRBY3Rpb25zKGV2ZW50KSkge1xuICAgICAgICByZXR1cm47XG4gICAgICB9XG5cbiAgICAgIGV2ZW50LnByZXZlbnREZWZhdWx0KCk7XG4gICAgICB0aGlzLnNhdmVTZWxlY3Rpb25Ub0NsaXBib2FyZChldmVudCk7XG4gICAgfVxuICB9LCB7XG4gICAga2V5OiBcImhhbmRsZUN1dFwiLFxuICAgIHZhbHVlOiBmdW5jdGlvbiBoYW5kbGVDdXQoZXZlbnQpIHtcbiAgICAgIGlmIChldmVudC50YXJnZXQgIT09IHRoaXMuaW5wdXRSZWYpIHtcbiAgICAgICAgcmV0dXJuO1xuICAgICAgfVxuXG4gICAgICBpZiAoIXRoaXMuc3VwcG9ydHNDbGlwYm9hcmRBY3Rpb25zKGV2ZW50KSkge1xuICAgICAgICByZXR1cm47XG4gICAgICB9XG5cbiAgICAgIGV2ZW50LnByZXZlbnREZWZhdWx0KCk7XG4gICAgICB0aGlzLnNhdmVTZWxlY3Rpb25Ub0NsaXBib2FyZChldmVudCk7XG4gICAgICB2YXIgX3RoaXMkc3RhdGU1ID0gdGhpcy5zdGF0ZSxcbiAgICAgICAgICBzZWxlY3Rpb25TdGFydCA9IF90aGlzJHN0YXRlNS5zZWxlY3Rpb25TdGFydCxcbiAgICAgICAgICBzZWxlY3Rpb25FbmQgPSBfdGhpcyRzdGF0ZTUuc2VsZWN0aW9uRW5kO1xuICAgICAgdmFyIF90aGlzJHByb3BzOSA9IHRoaXMucHJvcHMsXG4gICAgICAgICAgY2hpbGRyZW4gPSBfdGhpcyRwcm9wczkuY2hpbGRyZW4sXG4gICAgICAgICAgdmFsdWUgPSBfdGhpcyRwcm9wczkudmFsdWU7XG4gICAgICB2YXIgY29uZmlnID0gcmVhZENvbmZpZ0Zyb21DaGlsZHJlbihjaGlsZHJlbik7XG4gICAgICB2YXIgbWFya3VwU3RhcnRJbmRleCA9IG1hcFBsYWluVGV4dEluZGV4KHZhbHVlLCBjb25maWcsIHNlbGVjdGlvblN0YXJ0LCAnU1RBUlQnKTtcbiAgICAgIHZhciBtYXJrdXBFbmRJbmRleCA9IG1hcFBsYWluVGV4dEluZGV4KHZhbHVlLCBjb25maWcsIHNlbGVjdGlvbkVuZCwgJ0VORCcpO1xuICAgICAgdmFyIG5ld1ZhbHVlID0gW3ZhbHVlLnNsaWNlKDAsIG1hcmt1cFN0YXJ0SW5kZXgpLCB2YWx1ZS5zbGljZShtYXJrdXBFbmRJbmRleCldLmpvaW4oJycpO1xuICAgICAgdmFyIG5ld1BsYWluVGV4dFZhbHVlID0gZ2V0UGxhaW5UZXh0KG5ld1ZhbHVlLCBjb25maWcpO1xuICAgICAgdmFyIGV2ZW50TW9jayA9IHtcbiAgICAgICAgdGFyZ2V0OiBfb2JqZWN0U3ByZWFkJDIoe30sIGV2ZW50LnRhcmdldCwge1xuICAgICAgICAgIHZhbHVlOiBuZXdQbGFpblRleHRWYWx1ZVxuICAgICAgICB9KVxuICAgICAgfTtcbiAgICAgIHRoaXMuZXhlY3V0ZU9uQ2hhbmdlKGV2ZW50TW9jaywgbmV3VmFsdWUsIG5ld1BsYWluVGV4dFZhbHVlLCBnZXRNZW50aW9ucyh2YWx1ZSwgY29uZmlnKSk7XG4gICAgfSAvLyBIYW5kbGUgaW5wdXQgZWxlbWVudCdzIGNoYW5nZSBldmVudFxuXG4gIH1dKTtcblxuICByZXR1cm4gTWVudGlvbnNJbnB1dDtcbn0oUmVhY3QuQ29tcG9uZW50KTtcbi8qKlxuICogUmV0dXJucyB0aGUgY29tcHV0ZWQgbGVuZ3RoIHByb3BlcnR5IHZhbHVlIGZvciB0aGUgcHJvdmlkZWQgZWxlbWVudC5cbiAqIE5vdGU6IEFjY29yZGluZyB0byBzcGVjIGFuZCB0ZXN0aW5nLCBjYW4gY291bnQgb24gbGVuZ3RoIHZhbHVlcyBjb21pbmcgYmFjayBpbiBwaXhlbHMuIFNlZSBodHRwczovL2RldmVsb3Blci5tb3ppbGxhLm9yZy9lbi1VUy9kb2NzL1dlYi9DU1MvdXNlZF92YWx1ZSNEaWZmZXJlbmNlX2Zyb21fY29tcHV0ZWRfdmFsdWVcbiAqL1xuXG5cbl9kZWZpbmVQcm9wZXJ0eShNZW50aW9uc0lucHV0LCBcInByb3BUeXBlc1wiLCBwcm9wVHlwZXMpO1xuXG5fZGVmaW5lUHJvcGVydHkoTWVudGlvbnNJbnB1dCwgXCJkZWZhdWx0UHJvcHNcIiwge1xuICBpZ25vcmVBY2NlbnRzOiBmYWxzZSxcbiAgc2luZ2xlTGluZTogZmFsc2UsXG4gIGFsbG93U3VnZ2VzdGlvbnNBYm92ZUN1cnNvcjogZmFsc2UsXG4gIG9uS2V5RG93bjogZnVuY3Rpb24gb25LZXlEb3duKCkge1xuICAgIHJldHVybiBudWxsO1xuICB9LFxuICBvblNlbGVjdDogZnVuY3Rpb24gb25TZWxlY3QoKSB7XG4gICAgcmV0dXJuIG51bGw7XG4gIH0sXG4gIG9uQmx1cjogZnVuY3Rpb24gb25CbHVyKCkge1xuICAgIHJldHVybiBudWxsO1xuICB9XG59KTtcblxudmFyIGdldENvbXB1dGVkU3R5bGVMZW5ndGhQcm9wID0gZnVuY3Rpb24gZ2V0Q29tcHV0ZWRTdHlsZUxlbmd0aFByb3AoZm9yRWxlbWVudCwgcHJvcGVydHlOYW1lKSB7XG4gIHZhciBsZW5ndGggPSBwYXJzZUZsb2F0KHdpbmRvdy5nZXRDb21wdXRlZFN0eWxlKGZvckVsZW1lbnQsIG51bGwpLmdldFByb3BlcnR5VmFsdWUocHJvcGVydHlOYW1lKSk7XG4gIHJldHVybiBpc0Zpbml0ZShsZW5ndGgpID8gbGVuZ3RoIDogMDtcbn07XG5cbnZhciBpc01vYmlsZVNhZmFyaSA9IHR5cGVvZiBuYXZpZ2F0b3IgIT09ICd1bmRlZmluZWQnICYmIC9pUGhvbmV8aVBhZHxpUG9kL2kudGVzdChuYXZpZ2F0b3IudXNlckFnZW50KTtcbnZhciBzdHlsZWQkMyA9IGRlZmF1bHRTdHlsZSh7XG4gIHBvc2l0aW9uOiAncmVsYXRpdmUnLFxuICBvdmVyZmxvd1k6ICd2aXNpYmxlJyxcbiAgaW5wdXQ6IHtcbiAgICBkaXNwbGF5OiAnYmxvY2snLFxuICAgIHBvc2l0aW9uOiAnYWJzb2x1dGUnLFxuICAgIHRvcDogMCxcbiAgICBsZWZ0OiAwLFxuICAgIGJveFNpemluZzogJ2JvcmRlci1ib3gnLFxuICAgIGJhY2tncm91bmRDb2xvcjogJ3RyYW5zcGFyZW50JyxcbiAgICB3aWR0aDogJ2luaGVyaXQnLFxuICAgIGZvbnRGYW1pbHk6ICdpbmhlcml0JyxcbiAgICBmb250U2l6ZTogJ2luaGVyaXQnLFxuICAgIGxldHRlclNwYWNpbmc6ICdpbmhlcml0J1xuICB9LFxuICAnJm11bHRpTGluZSc6IHtcbiAgICBpbnB1dDogX29iamVjdFNwcmVhZCQyKHtcbiAgICAgIHdpZHRoOiAnMTAwJScsXG4gICAgICBoZWlnaHQ6ICcxMDAlJyxcbiAgICAgIGJvdHRvbTogMCxcbiAgICAgIG92ZXJmbG93OiAnaGlkZGVuJyxcbiAgICAgIHJlc2l6ZTogJ25vbmUnXG4gICAgfSwgaXNNb2JpbGVTYWZhcmkgPyB7XG4gICAgICBtYXJnaW5Ub3A6IDEsXG4gICAgICBtYXJnaW5MZWZ0OiAtM1xuICAgIH0gOiBudWxsKVxuICB9XG59LCBmdW5jdGlvbiAoX3JlZjQpIHtcbiAgdmFyIHNpbmdsZUxpbmUgPSBfcmVmNC5zaW5nbGVMaW5lO1xuICByZXR1cm4ge1xuICAgICcmc2luZ2xlTGluZSc6IHNpbmdsZUxpbmUsXG4gICAgJyZtdWx0aUxpbmUnOiAhc2luZ2xlTGluZVxuICB9O1xufSk7XG52YXIgTWVudGlvbnNJbnB1dCQxID0gc3R5bGVkJDMoTWVudGlvbnNJbnB1dCk7XG5cbnZhciBzdHlsZWQkNCA9IGRlZmF1bHRTdHlsZSh7XG4gIGZvbnRXZWlnaHQ6ICdpbmhlcml0J1xufSk7XG52YXIgTWVudGlvbiA9IHN0eWxlZCQ0KGZ1bmN0aW9uIChfcmVmKSB7XG4gIHZhciBkaXNwbGF5ID0gX3JlZi5kaXNwbGF5LFxuICAgICAgc3R5bGUgPSBfcmVmLnN0eWxlO1xuICByZXR1cm4gUmVhY3QuY3JlYXRlRWxlbWVudChcInN0cm9uZ1wiLCBzdHlsZSwgZGlzcGxheSk7XG59KTtcbk1lbnRpb24ucHJvcFR5cGVzID0ge1xuICAvKipcbiAgICogQ2FsbGVkIHdoZW4gYSBuZXcgbWVudGlvbiBpcyBhZGRlZCBpbiB0aGUgaW5wdXRcbiAgICpcbiAgICogRXhhbXBsZTpcbiAgICpcbiAgICogYGBganNcbiAgICogZnVuY3Rpb24oaWQsIGRpc3BsYXkpIHtcbiAgICogICBjb25zb2xlLmxvZyhcInVzZXIgXCIgKyBkaXNwbGF5ICsgXCIgd2FzIG1lbnRpb25lZCFcIik7XG4gICAqIH1cbiAgICogYGBgXG4gICAqL1xuICBvbkFkZDogUHJvcFR5cGVzLmZ1bmMsXG4gIG9uUmVtb3ZlOiBQcm9wVHlwZXMuZnVuYyxcbiAgcmVuZGVyU3VnZ2VzdGlvbjogUHJvcFR5cGVzLmZ1bmMsXG4gIHRyaWdnZXI6IFByb3BUeXBlcy5vbmVPZlR5cGUoW1Byb3BUeXBlcy5zdHJpbmcsIFByb3BUeXBlcy5pbnN0YW5jZU9mKFJlZ0V4cCldKSxcbiAgbWFya3VwOiBQcm9wVHlwZXMuc3RyaW5nLFxuICBkaXNwbGF5VHJhbnNmb3JtOiBQcm9wVHlwZXMuZnVuYyxcblxuICAvKipcbiAgICogSWYgc2V0IHRvIGB0cnVlYCBzcGFjZXMgd2lsbCBub3QgaW50ZXJydXB0IG1hdGNoaW5nIHN1Z2dlc3Rpb25zXG4gICAqL1xuICBhbGxvd1NwYWNlSW5RdWVyeTogUHJvcFR5cGVzLmJvb2wsXG4gIGlzTG9hZGluZzogUHJvcFR5cGVzLmJvb2xcbn07XG5NZW50aW9uLmRlZmF1bHRQcm9wcyA9IHtcbiAgdHJpZ2dlcjogJ0AnLFxuICBtYXJrdXA6ICdAW19fZGlzcGxheV9fXShfX2lkX18pJyxcbiAgZGlzcGxheVRyYW5zZm9ybTogZnVuY3Rpb24gZGlzcGxheVRyYW5zZm9ybShpZCwgZGlzcGxheSkge1xuICAgIHJldHVybiBkaXNwbGF5IHx8IGlkO1xuICB9LFxuICBvbkFkZDogZnVuY3Rpb24gb25BZGQoKSB7XG4gICAgcmV0dXJuIG51bGw7XG4gIH0sXG4gIG9uUmVtb3ZlOiBmdW5jdGlvbiBvblJlbW92ZSgpIHtcbiAgICByZXR1cm4gbnVsbDtcbiAgfSxcbiAgcmVuZGVyU3VnZ2VzdGlvbjogbnVsbCxcbiAgaXNMb2FkaW5nOiBmYWxzZSxcbiAgYXBwZW5kU3BhY2VPbkFkZDogZmFsc2Vcbn07XG5cbmV4cG9ydCB7IE1lbnRpb24sIE1lbnRpb25zSW5wdXQkMSBhcyBNZW50aW9uc0lucHV0IH07XG4iXSwibWFwcGluZ3MiOiI7Ozs7OztBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUNSQTtBQUNBO0FBQ0E7O0FDRkE7QUFDQTtBQUNBOztBQ0ZBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUNMQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQ2hCQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQ0pBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUNkQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FDZEE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FDTkE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQ1JBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUNMQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQ1BBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUNkQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOzs7Ozs7Ozs7O0FDYkE7QUFDQTtBQUNBOztBQ0ZBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQ3hCQTtBQUNBO0FBQ0E7O0FDRkE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOzs7Ozs7Ozs7Ozs7OztBQ0xBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7Iiwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///604\n")}}]);